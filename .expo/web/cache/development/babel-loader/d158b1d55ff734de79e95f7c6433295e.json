{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useReduxDevToolsExtension;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _deepEqual = _interopRequireDefault(require(\"deep-equal\"));\n\nfunction useReduxDevToolsExtension(ref) {\n  var devToolsRef = React.useRef();\n\n  if (devToolsRef.current === undefined && typeof __REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') {\n    devToolsRef.current = __REDUX_DEVTOOLS_EXTENSION__.connect({\n      name: '@react-navigation/devtools'\n    });\n  }\n\n  var lastStateRef = React.useRef();\n  var lastActionRef = React.useRef();\n  React.useEffect(function () {\n    var _devToolsRef$current;\n\n    return (_devToolsRef$current = devToolsRef.current) === null || _devToolsRef$current === void 0 ? void 0 : _devToolsRef$current.subscribe(function (message) {\n      if (message.type === 'DISPATCH' && message.state) {\n        var _ref$current;\n\n        var state = JSON.parse(message.state);\n        lastStateRef.current = state;\n        (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.resetRoot(state);\n      }\n    });\n  }, [ref]);\n  React.useEffect(function () {\n    var devTools = devToolsRef.current;\n    var navigation = ref.current;\n\n    if (!navigation || !devTools) {\n      return;\n    }\n\n    if (lastStateRef.current === undefined) {\n      var state = navigation.getRootState();\n      devTools.init(state);\n      lastStateRef.current = state;\n    }\n\n    var unsubscribeAction = navigation.addListener('__unsafe_action__', function (e) {\n      var action = e.data.action;\n\n      if (e.data.noop) {\n        devTools.send(action, lastStateRef.current);\n      } else {\n        lastActionRef.current = action;\n      }\n    });\n    var unsubscribeState = navigation.addListener('state', function (e) {\n      if (lastStateRef.current === e.data.state) {\n        return;\n      }\n\n      var lastState = lastStateRef.current;\n      var state = navigation.getRootState();\n      var action = lastActionRef.current;\n      lastActionRef.current = undefined;\n      lastStateRef.current = state;\n\n      if (action === undefined && (0, _deepEqual.default)(state, lastState)) {\n        return;\n      }\n\n      devTools.send(action !== null && action !== void 0 ? action : '@@UNKNOWN', state);\n    });\n    return function () {\n      unsubscribeAction();\n      unsubscribeState();\n    };\n  });\n}","map":{"version":3,"sources":["useReduxDevToolsExtension.tsx"],"names":["devToolsRef","React","name","lastStateRef","lastActionRef","message","state","JSON","devTools","navigation","ref","unsubscribeAction","e","action","unsubscribeState","lastState","deepEqual"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  NavigationContainerRef,\n  NavigationState,\n  NavigationAction,\n} from '@react-navigation/core';\nimport deepEqual from 'deep-equal';\n\ntype DevToolsConnection = {\n  init(value: any): void;\n  send(action: any, value: any): void;\n  subscribe(\n    listener: (message: { type: string; [key: string]: any }) => void\n  ): () => void;\n};\n\ntype DevToolsExtension = {\n  connect(options: { name: string }): DevToolsConnection;\n  disconnect(): void;\n};\n\ndeclare const __REDUX_DEVTOOLS_EXTENSION__: DevToolsExtension | undefined;\n\nexport default function useReduxDevToolsExtension(\n  ref: React.RefObject<NavigationContainerRef>\n) {\n  const devToolsRef = React.useRef<DevToolsConnection>();\n\n  if (\n    devToolsRef.current === undefined &&\n    typeof __REDUX_DEVTOOLS_EXTENSION__ !== 'undefined'\n  ) {\n    devToolsRef.current = __REDUX_DEVTOOLS_EXTENSION__.connect({\n      name: '@react-navigation/devtools',\n    });\n  }\n\n  const lastStateRef = React.useRef<NavigationState | undefined>();\n  const lastActionRef = React.useRef<NavigationAction | undefined>();\n\n  React.useEffect(\n    () =>\n      devToolsRef.current?.subscribe((message) => {\n        if (message.type === 'DISPATCH' && message.state) {\n          const state = JSON.parse(message.state);\n\n          lastStateRef.current = state;\n          ref.current?.resetRoot(state);\n        }\n      }),\n    [ref]\n  );\n\n  React.useEffect(() => {\n    const devTools = devToolsRef.current;\n    const navigation = ref.current;\n\n    if (!navigation || !devTools) {\n      return;\n    }\n\n    if (lastStateRef.current === undefined) {\n      const state = navigation.getRootState();\n\n      devTools.init(state);\n      lastStateRef.current = state;\n    }\n\n    const unsubscribeAction = navigation.addListener(\n      '__unsafe_action__',\n      (e) => {\n        const action = e.data.action;\n\n        if (e.data.noop) {\n          // Even if the state didn't change, it's useful to show the action\n          devTools.send(action, lastStateRef.current);\n        } else {\n          lastActionRef.current = action;\n        }\n      }\n    );\n\n    const unsubscribeState = navigation.addListener('state', (e) => {\n      // Don't show the action in dev tools if the state is what we sent to reset earlier\n      if (lastStateRef.current === e.data.state) {\n        return;\n      }\n\n      const lastState = lastStateRef.current;\n      const state = navigation.getRootState();\n      const action = lastActionRef.current;\n\n      lastActionRef.current = undefined;\n      lastStateRef.current = state;\n\n      // If we don't have an action and the state didn't change, then it's probably extraneous\n      if (action === undefined && deepEqual(state, lastState)) {\n        return;\n      }\n\n      devTools.send(action ?? '@@UNKNOWN', state);\n    });\n\n    return () => {\n      unsubscribeAction();\n      unsubscribeState();\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"script"}