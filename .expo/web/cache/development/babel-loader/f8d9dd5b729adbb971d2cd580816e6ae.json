{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Profile;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _SettingsItem = _interopRequireDefault(require(\"../shared/SettingsItem\"));\n\nvar _AsyncStorage = _interopRequireDefault(require(\"../AsyncStorage\"));\n\nvar _Types = require(\"../../Types\");\n\nvar _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/Profile.tsx\";\n\nfunction Profile(_ref, user) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(_native.DefaultTheme),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      theme = _React$useState2[0],\n      setTheme = _React$useState2[1];\n\n  var thumbnail = user && user.photoURL ? require(user.photoURL) : null;\n  return React.createElement(_reactNative.ScrollView, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, thumbnail ? React.createElement(_reactNativePaper.Avatar.Image, {\n    source: thumbnail,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }) : null, React.createElement(_reactNativePaper.Subheading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Hi\", (user == null ? void 0 : user.displayName) ? ' ' + (user == null ? void 0 : user.displayName) : null, \"!\"), React.createElement(_SettingsItem.default, {\n    label: \"Dark theme\",\n    value: theme.dark,\n    onValueChange: function onValueChange() {\n      _AsyncStorage.default.setItem(_Types.THEME_PERSISTENCE_KEY, theme.dark ? 'light' : 'dark');\n\n      setTheme(function (t) {\n        return t.dark ? _native.DefaultTheme : _native.DarkTheme;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNativePaper.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNativePaper.Button, {\n    onPress: function onPress() {\n      return navigation.navigate('AuthFlow', {\n        action: 'SIGN_OUT'\n      });\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Sign Out\"));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  content: {\n    flexDirection: 'column',\n    paddingHorizontal: 16,\n    paddingVertical: 12\n  },\n  button: {\n    margin: 8\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8\n  },\n  image: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/Profile.tsx"],"names":["Profile","user","navigation","React","useState","DefaultTheme","theme","setTheme","thumbnail","photoURL","require","styles","content","image","displayName","dark","AsyncStorage","setItem","THEME_PERSISTENCE_KEY","t","DarkTheme","navigate","action","button","StyleSheet","create","flexDirection","paddingHorizontal","paddingVertical","margin","text","textAlign","alignItems"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,OAAT,OAAoFC,IAApF,EAAgH;AAAA,MAA7FC,UAA6F,QAA7FA,UAA6F;;AAAA,wBACnGC,KAAK,CAACC,QAAN,CAAeC,oBAAf,CADmG;AAAA;AAAA,MACtHC,KADsH;AAAA,MAC/GC,QAD+G;;AAE7H,MAAMC,SAAS,GAAGP,IAAI,IAAIA,IAAI,CAACQ,QAAb,GAAwBC,OAAO,CAACT,IAAI,CAACQ,QAAN,CAA/B,GAAiD,IAAnE;AAEA,SACE,oBAAC,uBAAD;AAAY,IAAA,KAAK,EAAEE,MAAM,CAACC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,GAAI,oBAAC,wBAAD,CAAQ,KAAR;AAAc,IAAA,MAAM,EAAEA,SAAtB;AAAiC,IAAA,KAAK,EAAEG,MAAM,CAACE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAAgE,IAD5E,EAEE,oBAAC,4BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAe,CAAAZ,IAAI,QAAJ,YAAAA,IAAI,CAAEa,WAAN,IAAoB,OAAMb,IAAN,oBAAMA,IAAI,CAAEa,WAAZ,CAApB,GAA8C,IAA7D,MAFF,EAGE,oBAAC,qBAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,KAAK,EAAER,KAAK,CAACS,IAFf;AAGE,IAAA,aAAa,EAAE,yBAAM;AACnBC,4BAAaC,OAAb,CACEC,4BADF,EAEEZ,KAAK,CAACS,IAAN,GAAa,OAAb,GAAuB,MAFzB;;AAKAR,MAAAA,QAAQ,CAAC,UAACY,CAAD;AAAA,eAAQA,CAAC,CAACJ,IAAF,GAASV,oBAAT,GAAwBe,iBAAhC;AAAA,OAAD,CAAR;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAeE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,wBAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMlB,UAAU,CAACmB,QAAX,CAAoB,UAApB,EAAgC;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAhC,CAAN;AAAA,KAAjB;AAA8E,IAAA,KAAK,EAAEX,MAAM,CAACY,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,CADF;AAsBD;;AAED,IAAMZ,MAAM,GAAGa,wBAAWC,MAAX,CAAkB;AAC/Bb,EAAAA,OAAO,EAAE;AACPc,IAAAA,aAAa,EAAE,QADR;AAEPC,IAAAA,iBAAiB,EAAE,EAFZ;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAM/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,MAAM,EAAE;AADF,GANuB;AAS/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,QADP;AAEJF,IAAAA,MAAM,EAAE;AAFJ,GATyB;AAa/BhB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,UAAU,EAAE;AADP;AAbwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Subheading, Avatar, Button, Divider } from 'react-native-paper';\n\nimport * as firebase from 'firebase';\nimport { DrawerContentComponentProps, DrawerContentOptions } from '@react-navigation/drawer';\nimport { DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport SettingsItem from '../shared/SettingsItem';\nimport AsyncStorage from '../AsyncStorage';\nimport { THEME_PERSISTENCE_KEY } from '../../Types';\n\nexport default function Profile({ navigation }: DrawerContentComponentProps<DrawerContentOptions>, user: firebase.User | null) {\n  const [theme, setTheme] = React.useState(DefaultTheme);\n  const thumbnail = user && user.photoURL ? require(user.photoURL) : null;\n\n  return (\n    <ScrollView style={styles.content} >\n      {thumbnail ? (<Avatar.Image source={thumbnail} style={styles.image} />) : null}\n      <Subheading>Hi{user?.displayName ? ' ' + user?.displayName : null}!</Subheading>\n      <SettingsItem\n        label=\"Dark theme\"\n        value={theme.dark}\n        onValueChange={() => {\n          AsyncStorage.setItem(\n            THEME_PERSISTENCE_KEY,\n            theme.dark ? 'light' : 'dark'\n          );\n\n          setTheme((t) => (t.dark ? DefaultTheme : DarkTheme));\n        }}\n      />\n      <Divider />\n      <Button onPress={() => navigation.navigate('AuthFlow', {action: 'SIGN_OUT'})} style={styles.button}>\n        Sign Out\n      </Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'column',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n  },\n  button: {\n    margin: 8,\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8,\n  },\n  image: {\n    alignItems: 'center'\n  }\n});\n"]},"metadata":{},"sourceType":"script"}