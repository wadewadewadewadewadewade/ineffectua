{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _nativeModule = require(\"./registry/nativeModule\");\n\nvar _SharedEventEmitter = _interopRequireDefault(require(\"./SharedEventEmitter\"));\n\nvar firebaseJson = null;\n\nvar FirebaseModule = function () {\n  function FirebaseModule(app, config, customUrlOrRegion) {\n    (0, _classCallCheck2.default)(this, FirebaseModule);\n    this._app = app;\n    this._nativeModule = null;\n    this._customUrlOrRegion = customUrlOrRegion;\n    this._config = (0, _extends2.default)({}, config);\n  }\n\n  (0, _createClass2.default)(FirebaseModule, [{\n    key: \"eventNameForApp\",\n    value: function eventNameForApp() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.app.name + \"-\" + args.join('-');\n    }\n  }, {\n    key: \"app\",\n    get: function get() {\n      return this._app;\n    }\n  }, {\n    key: \"firebaseJson\",\n    get: function get() {\n      if (firebaseJson) {\n        return firebaseJson;\n      }\n\n      firebaseJson = JSON.parse((0, _nativeModule.getAppModule)().FIREBASE_RAW_JSON);\n      return firebaseJson;\n    }\n  }, {\n    key: \"emitter\",\n    get: function get() {\n      return _SharedEventEmitter.default;\n    }\n  }, {\n    key: \"native\",\n    get: function get() {\n      if (this._nativeModule) {\n        return this._nativeModule;\n      }\n\n      this._nativeModule = (0, _nativeModule.getNativeModule)(this);\n      return this._nativeModule;\n    }\n  }]);\n  return FirebaseModule;\n}();\n\nexports.default = FirebaseModule;\nFirebaseModule.__extended__ = {};","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/@react-native-firebase/app/lib/internal/FirebaseModule.js"],"names":["firebaseJson","FirebaseModule","app","config","customUrlOrRegion","_app","_nativeModule","_customUrlOrRegion","_config","args","name","join","JSON","parse","FIREBASE_RAW_JSON","SharedEventEmitter","__extended__"],"mappings":";;;;;;;;;;;;;AAiBA;;AACA;;AAEA,IAAIA,YAAY,GAAG,IAAnB;;IAEqBC,c;AACnB,0BAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,iBAAzB,EAA4C;AAAA;AAC1C,SAAKC,IAAL,GAAYH,GAAZ;AACA,SAAKI,aAAL,GAAqB,IAArB;AACA,SAAKC,kBAAL,GAA0BH,iBAA1B;AACA,SAAKI,OAAL,GAAe,uBAAc,EAAd,EAAkBL,MAAlB,CAAf;AACD;;;;sCAmBwB;AAAA,wCAANM,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACvB,aAAU,KAAKP,GAAL,CAASQ,IAAnB,SAA2BD,IAAI,CAACE,IAAL,CAAU,GAAV,CAA3B;AACD;;;wBAnBS;AACR,aAAO,KAAKN,IAAZ;AACD;;;wBAEkB;AACjB,UAAIL,YAAJ,EAAkB;AAChB,eAAOA,YAAP;AACD;;AACDA,MAAAA,YAAY,GAAGY,IAAI,CAACC,KAAL,CAAW,kCAAeC,iBAA1B,CAAf;AACA,aAAOd,YAAP;AACD;;;wBAEa;AACZ,aAAOe,2BAAP;AACD;;;wBAOY;AACX,UAAI,KAAKT,aAAT,EAAwB;AACtB,eAAO,KAAKA,aAAZ;AACD;;AACD,WAAKA,aAAL,GAAqB,mCAAgB,IAAhB,CAArB;AACA,aAAO,KAAKA,aAAZ;AACD;;;;;;AAIHL,cAAc,CAACe,YAAf,GAA8B,EAA9B","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { getAppModule, getNativeModule } from './registry/nativeModule';\nimport SharedEventEmitter from './SharedEventEmitter';\n\nlet firebaseJson = null;\n\nexport default class FirebaseModule {\n  constructor(app, config, customUrlOrRegion) {\n    this._app = app;\n    this._nativeModule = null;\n    this._customUrlOrRegion = customUrlOrRegion;\n    this._config = Object.assign({}, config);\n  }\n\n  get app() {\n    return this._app;\n  }\n\n  get firebaseJson() {\n    if (firebaseJson) {\n      return firebaseJson;\n    }\n    firebaseJson = JSON.parse(getAppModule().FIREBASE_RAW_JSON);\n    return firebaseJson;\n  }\n\n  get emitter() {\n    return SharedEventEmitter;\n  }\n\n  // TODO Handle custom url or region?\n  eventNameForApp(...args) {\n    return `${this.app.name}-${args.join('-')}`;\n  }\n\n  get native() {\n    if (this._nativeModule) {\n      return this._nativeModule;\n    }\n    this._nativeModule = getNativeModule(this);\n    return this._nativeModule;\n  }\n}\n\n// Instance of checks don't work once compiled\nFirebaseModule.__extended__ = {};\n"]},"metadata":{},"sourceType":"script"}