{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar providerId = 'phone';\n\nvar PhoneAuthProvider = function () {\n  function PhoneAuthProvider() {\n    (0, _classCallCheck2.default)(this, PhoneAuthProvider);\n    throw new Error('`new PhoneAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n\n  (0, _createClass2.default)(PhoneAuthProvider, null, [{\n    key: \"credential\",\n    value: function credential(verificationId, code) {\n      return {\n        token: verificationId,\n        secret: code,\n        providerId: providerId\n      };\n    }\n  }, {\n    key: \"PROVIDER_ID\",\n    get: function get() {\n      return providerId;\n    }\n  }]);\n  return PhoneAuthProvider;\n}();\n\nexports.default = PhoneAuthProvider;","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/@react-native-firebase/auth/lib/providers/PhoneAuthProvider.js"],"names":["providerId","PhoneAuthProvider","Error","verificationId","code","token","secret"],"mappings":";;;;;;;;;;;AAiBA,IAAMA,UAAU,GAAG,OAAnB;;IAEqBC,iB;AACnB,+BAAc;AAAA;AACZ,UAAM,IAAIC,KAAJ,CAAU,yEAAV,CAAN;AACD;;;;+BAMiBC,c,EAAgBC,I,EAAM;AACtC,aAAO;AACLC,QAAAA,KAAK,EAAEF,cADF;AAELG,QAAAA,MAAM,EAAEF,IAFH;AAGLJ,QAAAA,UAAU,EAAVA;AAHK,OAAP;AAKD;;;wBAVwB;AACvB,aAAOA,UAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst providerId = 'phone';\n\nexport default class PhoneAuthProvider {\n  constructor() {\n    throw new Error('`new PhoneAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n\n  static get PROVIDER_ID() {\n    return providerId;\n  }\n\n  static credential(verificationId, code) {\n    return {\n      token: verificationId,\n      secret: code,\n      providerId,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}