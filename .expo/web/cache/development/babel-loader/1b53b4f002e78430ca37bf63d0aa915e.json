{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeTabView = require(\"react-native-tab-view\");\n\nvar _createTabNavigator = _interopRequireDefault(require(\"../utils/createTabNavigator\"));\n\nvar _MaterialTopTabBar = _interopRequireDefault(require(\"../views/MaterialTopTabBar\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar MaterialTabView = function (_React$PureComponent) {\n  (0, _inherits2.default)(MaterialTabView, _React$PureComponent);\n\n  var _super = _createSuper(MaterialTabView);\n\n  function MaterialTabView() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MaterialTabView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderTabBar\", function (props) {\n      var state = _this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;\n      var _this$props2 = _this.props,\n          navigation = _this$props2.navigation,\n          getLabelText = _this$props2.getLabelText,\n          getAccessibilityLabel = _this$props2.getAccessibilityLabel,\n          getTestID = _this$props2.getTestID,\n          renderIcon = _this$props2.renderIcon,\n          onTabPress = _this$props2.onTabPress,\n          onTabLongPress = _this$props2.onTabLongPress,\n          _this$props2$tabBarCo = _this$props2.tabBarComponent,\n          TabBarComponent = _this$props2$tabBarCo === void 0 ? _MaterialTopTabBar.default : _this$props2$tabBarCo,\n          tabBarPosition = _this$props2.tabBarPosition,\n          tabBarOptions = _this$props2.tabBarOptions,\n          screenProps = _this$props2.screenProps;\n\n      if (TabBarComponent === null || !tabBarVisible) {\n        return null;\n      }\n\n      return React.createElement(TabBarComponent, _extends({}, tabBarOptions, props, {\n        tabBarPosition: tabBarPosition,\n        screenProps: screenProps,\n        navigation: navigation,\n        getLabelText: getLabelText,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getTestID: getTestID,\n        renderIcon: renderIcon,\n        onTabPress: onTabPress,\n        onTabLongPress: onTabLongPress\n      }));\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(MaterialTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getLabelText = _this$props.getLabelText,\n          getAccessibilityLabel = _this$props.getAccessibilityLabel,\n          getTestID = _this$props.getTestID,\n          renderIcon = _this$props.renderIcon,\n          onTabPress = _this$props.onTabPress,\n          onTabLongPress = _this$props.onTabLongPress,\n          screenProps = _this$props.screenProps,\n          tabBarComponent = _this$props.tabBarComponent,\n          tabBarOptions = _this$props.tabBarOptions,\n          lazyPlaceholderComponent = _this$props.lazyPlaceholderComponent,\n          pagerComponent = _this$props.pagerComponent,\n          navigation = _this$props.navigation,\n          descriptors = _this$props.descriptors,\n          rest = _objectWithoutProperties(_this$props, [\"getLabelText\", \"getAccessibilityLabel\", \"getTestID\", \"renderIcon\", \"onTabPress\", \"onTabLongPress\", \"screenProps\", \"tabBarComponent\", \"tabBarOptions\", \"lazyPlaceholderComponent\", \"pagerComponent\", \"navigation\", \"descriptors\"]);\n\n      var state = navigation.state;\n      var route = state.routes[state.index];\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var swipeEnabled = options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;\n\n      if (typeof swipeEnabled === 'function') {\n        swipeEnabled = swipeEnabled(state);\n      }\n\n      return React.createElement(_reactNativeTabView.TabView, _extends({}, rest, {\n        navigationState: navigation.state,\n        swipeEnabled: swipeEnabled,\n        renderTabBar: this.renderTabBar,\n        renderLazyPlaceholder: lazyPlaceholderComponent !== undefined ? function (props) {\n          return React.createElement(lazyPlaceholderComponent, props);\n        } : undefined,\n        renderPager: pagerComponent !== undefined ? function (props) {\n          return React.createElement(pagerComponent, props);\n        } : undefined\n      }));\n    }\n  }]);\n  return MaterialTabView;\n}(React.PureComponent);\n\nvar _default = (0, _createTabNavigator.default)(MaterialTabView);\n\nexports.default = _default;","map":{"version":3,"sources":["createMaterialTopTabNavigator.tsx"],"names":["React","props","state","route","descriptors","descriptor","options","tabBarVisible","tabBarComponent","TabBarComponent","screenProps","onTabLongPress","swipeEnabled","navigation","lazyPlaceholderComponent","pagerComponent","undefined","createTabNavigator"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { TabView, SceneRendererProps } from 'react-native-tab-view';\nimport createTabNavigator, {\n  NavigationViewProps,\n} from '../utils/createTabNavigator';\nimport MaterialTopTabBar from '../views/MaterialTopTabBar';\nimport {\n  NavigationTabProp,\n  NavigationMaterialTabOptions,\n  MaterialTabBarOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Route = {\n  key: string;\n  routeName: string;\n};\n\ntype Config = {\n  keyboardDismissMode?: 'none' | 'on-drag';\n  swipeEnabled?: boolean;\n  swipeDistanceThreshold?: number;\n  swipeVelocityThreshold?: number;\n  initialLayout?: { width?: number; height?: number };\n  lazy?: boolean;\n  lazyPlaceholderComponent?: React.ComponentType<{ route: Route }>;\n  pagerComponent?: React.ComponentType<\n    Parameters<React.ComponentProps<typeof TabView>['renderPager']>[0]\n  >;\n  tabBarComponent?: React.ComponentType<any>;\n  tabBarOptions?: MaterialTabBarOptions;\n  tabBarPosition?: 'top' | 'bottom';\n  sceneContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype Props = NavigationViewProps &\n  Config & {\n    onSwipeStart?: () => void;\n    onSwipeEnd?: () => void;\n    navigation: NavigationTabProp;\n    descriptors: SceneDescriptorMap;\n    screenProps?: unknown;\n  };\n\nclass MaterialTabView extends React.PureComponent<Props> {\n  private renderTabBar = (props: SceneRendererProps) => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible =\n      options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      navigation,\n      getLabelText,\n      getAccessibilityLabel,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions,\n      screenProps,\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        {...props}\n        tabBarPosition={tabBarPosition}\n        screenProps={screenProps}\n        navigation={navigation}\n        getLabelText={getLabelText}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n      />\n    );\n  };\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      getLabelText,\n      getAccessibilityLabel,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      screenProps,\n      tabBarComponent,\n      tabBarOptions,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      lazyPlaceholderComponent,\n      pagerComponent,\n      navigation,\n      descriptors,\n      ...rest\n    } = this.props;\n\n    const { state } = navigation;\n    const route = state.routes[state.index];\n\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled =\n      // @ts-ignore\n      options.swipeEnabled == null\n        ? this.props.swipeEnabled\n        : (options as any).swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    return (\n      <TabView\n        {...rest}\n        navigationState={navigation.state}\n        swipeEnabled={swipeEnabled}\n        renderTabBar={this.renderTabBar}\n        renderLazyPlaceholder={\n          lazyPlaceholderComponent !== undefined\n            ? (props) => React.createElement(lazyPlaceholderComponent, props)\n            : undefined\n        }\n        renderPager={\n          pagerComponent !== undefined\n            ? (props) => React.createElement(pagerComponent, props)\n            : undefined\n        }\n      />\n    );\n  }\n}\n\nexport default createTabNavigator<Config, NavigationMaterialTabOptions, Props>(\n  MaterialTabView\n);\n"]},"metadata":{},"sourceType":"script"}