{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SimpleStackScreen;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _CalendarEntry = _interopRequireDefault(require(\"../shared/CalendarEntry\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/StackTransparent.tsx\";\n\nvar scrollEnabled = _reactNative.Platform.select({\n  web: true,\n  default: false\n});\n\nvar CalendarEntryScreen = function CalendarEntryScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.push('Dialog');\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Show Dialog\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_CalendarEntry.default, {\n    author: {\n      name: route.params.author\n    },\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar DialogScreen = function DialogScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  return React.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: [styles.dialog, {\n      backgroundColor: colors.card\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Mise en place is a French term that literally means \\u201Cput in place.\\u201D It also refers to a way cooks in professional kitchens and restaurants set up their work stations\\u2014first by gathering all ingredients for a recipes, partially preparing them (like measuring out and chopping), and setting them all near each other. Setting up mise en place before cooking is another top tip for home cooks, as it seriously helps with organization. It\\u2019ll pretty much guarantee you never forget to add an ingredient and save you time from running back and forth from the pantry ten times.\"), React.createElement(_reactNativePaper.Button, {\n    style: styles.close,\n    compact: true,\n    onPress: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Okay\")));\n};\n\nvar SimpleStack = (0, _stack.createStackNavigator)();\n\nfunction SimpleStackScreen(_ref3) {\n  var navigation = _ref3.navigation,\n      rest = (0, _objectWithoutProperties2.default)(_ref3, [\"navigation\"]);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n  return React.createElement(SimpleStack.Navigator, (0, _extends2.default)({\n    mode: \"modal\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"CalendarEntry\",\n    component: CalendarEntryScreen,\n    initialParams: {\n      author: 'Gandalf'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"Dialog\",\n    component: DialogScreen,\n    options: {\n      headerShown: false,\n      cardStyle: {\n        backgroundColor: 'transparent'\n      },\n      cardOverlayEnabled: true,\n      cardStyleInterpolator: function cardStyleInterpolator(_ref4) {\n        var progress = _ref4.current.progress;\n        return {\n          cardStyle: {\n            opacity: progress.interpolate({\n              inputRange: [0, 0.5, 0.9, 1],\n              outputRange: [0, 0.25, 0.7, 1]\n            }),\n            transform: [{\n              scale: progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.9, 1],\n                extrapolate: 'clamp'\n              })\n            }]\n          },\n          overlayStyle: {\n            opacity: progress.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, 0.5],\n              extrapolate: 'clamp'\n            })\n          }\n        };\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8\n  },\n  button: {\n    margin: 8\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dialog: {\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 3\n  },\n  close: {\n    alignSelf: 'flex-end'\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/StackTransparent.tsx"],"names":["scrollEnabled","Platform","select","web","default","CalendarEntryScreen","navigation","route","styles","buttons","push","button","goBack","name","params","author","DialogScreen","colors","container","dialog","backgroundColor","card","close","SimpleStack","SimpleStackScreen","rest","React","useLayoutEffect","setOptions","headerShown","cardStyle","cardOverlayEnabled","cardStyleInterpolator","progress","current","opacity","interpolate","inputRange","outputRange","transform","scale","extrapolate","overlayStyle","StyleSheet","create","flexDirection","padding","margin","flex","alignItems","justifyContent","width","maxWidth","borderRadius","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { Button, Paragraph } from 'react-native-paper';\nimport { ParamListBase, useTheme } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string };\n  Dialog: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('Dialog')}\n          style={styles.button}\n        >\n          Show Dialog\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst DialogScreen = ({ navigation }: StackScreenProps<SimpleStackParams>) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.dialog, { backgroundColor: colors.card }]}>\n        <Paragraph>\n          Mise en place is a French term that literally means “put in place.” It\n          also refers to a way cooks in professional kitchens and restaurants\n          set up their work stations—first by gathering all ingredients for a\n          recipes, partially preparing them (like measuring out and chopping),\n          and setting them all near each other. Setting up mise en place before\n          cooking is another top tip for home cooks, as it seriously helps with\n          organization. It’ll pretty much guarantee you never forget to add an\n          ingredient and save you time from running back and forth from the\n          pantry ten times.\n        </Paragraph>\n        <Button style={styles.close} compact onPress={navigation.goBack}>\n          Okay\n        </Button>\n      </View>\n    </View>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\ntype Props = Partial<React.ComponentProps<typeof SimpleStack.Navigator>> &\n  StackScreenProps<ParamListBase>;\n\nexport default function SimpleStackScreen({ navigation, ...rest }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator mode=\"modal\" {...rest}>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"Dialog\"\n        component={DialogScreen}\n        options={{\n          headerShown: false,\n          cardStyle: { backgroundColor: 'transparent' },\n          cardOverlayEnabled: true,\n          cardStyleInterpolator: ({ current: { progress } }) => ({\n            cardStyle: {\n              opacity: progress.interpolate({\n                inputRange: [0, 0.5, 0.9, 1],\n                outputRange: [0, 0.25, 0.7, 1],\n              }),\n              transform: [\n                {\n                  scale: progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.9, 1],\n                    extrapolate: 'clamp',\n                  }),\n                },\n              ],\n            },\n            overlayStyle: {\n              opacity: progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, 0.5],\n                extrapolate: 'clamp',\n              }),\n            },\n          }),\n        }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dialog: {\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 3,\n  },\n  close: {\n    alignSelf: 'flex-end',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}