{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar Settings = function () {\n  function Settings(auth) {\n    (0, _classCallCheck2.default)(this, Settings);\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n\n  (0, _createClass2.default)(Settings, [{\n    key: \"setAutoRetrievedSmsCodeForPhoneNumber\",\n    value: function setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n      if (_common.isAndroid) {\n        return this._auth.native.setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n      }\n\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"appVerificationDisabledForTesting\",\n    get: function get() {\n      return this._appVerificationDisabledForTesting;\n    },\n    set: function set(disabled) {\n      if (_common.isIOS) {\n        this._appVerificationDisabledForTesting = disabled;\n\n        this._auth.native.setAppVerificationDisabledForTesting(disabled);\n      }\n    }\n  }]);\n  return Settings;\n}();\n\nexports.default = Settings;","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/@react-native-firebase/auth/lib/Settings.js"],"names":["Settings","auth","_auth","_appVerificationDisabledForTesting","phoneNumber","smsCode","isAndroid","native","setAutoRetrievedSmsCodeForPhoneNumber","Promise","resolve","disabled","isIOS","setAppVerificationDisabledForTesting"],"mappings":";;;;;;;;;;;AAiBA;;IAEqBA,Q;AACnB,oBAAYC,IAAZ,EAAkB;AAAA;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,kCAAL,GAA0C,KAA1C;AACD;;;;0DAaqCC,W,EAAaC,O,EAAS;AAC1D,UAAIC,iBAAJ,EAAe;AACb,eAAO,KAAKJ,KAAL,CAAWK,MAAX,CAAkBC,qCAAlB,CAAwDJ,WAAxD,EAAqEC,OAArE,CAAP;AACD;;AAED,aAAOI,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;;wBAjBuC;AACtC,aAAO,KAAKP,kCAAZ;AACD,K;sBAEqCQ,Q,EAAU;AAC9C,UAAIC,aAAJ,EAAW;AACT,aAAKT,kCAAL,GAA0CQ,QAA1C;;AACA,aAAKT,KAAL,CAAWK,MAAX,CAAkBM,oCAAlB,CAAuDF,QAAvD;AACD;AACF","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isAndroid, isIOS } from '@react-native-firebase/app/lib/common';\n\nexport default class Settings {\n  constructor(auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n\n  get appVerificationDisabledForTesting() {\n    return this._appVerificationDisabledForTesting;\n  }\n\n  set appVerificationDisabledForTesting(disabled) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      this._auth.native.setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n\n  setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n    if (isAndroid) {\n      return this._auth.native.setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n\n    return Promise.resolve(null);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}