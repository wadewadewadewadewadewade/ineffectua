{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setOnAppCreate = setOnAppCreate;\nexports.setOnAppDestroy = setOnAppDestroy;\nexports.initializeNativeApps = initializeNativeApps;\nexports.getApp = getApp;\nexports.getApps = getApps;\nexports.initializeApp = initializeApp;\nexports.deleteApp = deleteApp;\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar _FirebaseApp = _interopRequireDefault(require(\"../../FirebaseApp\"));\n\nvar _constants = require(\"../constants\");\n\nvar _nativeModule = require(\"./nativeModule\");\n\nvar APP_REGISTRY = {};\nvar onAppCreateFn = null;\nvar onAppDestroyFn = null;\nvar initializedNativeApps = false;\n\nfunction setOnAppCreate(fn) {\n  onAppCreateFn = fn;\n}\n\nfunction setOnAppDestroy(fn) {\n  onAppDestroyFn = fn;\n}\n\nfunction initializeNativeApps() {\n  var nativeModule = (0, _nativeModule.getAppModule)();\n  var NATIVE_FIREBASE_APPS = nativeModule.NATIVE_FIREBASE_APPS;\n\n  if (NATIVE_FIREBASE_APPS && NATIVE_FIREBASE_APPS.length) {\n    for (var i = 0; i < NATIVE_FIREBASE_APPS.length; i++) {\n      var _NATIVE_FIREBASE_APPS = NATIVE_FIREBASE_APPS[i],\n          appConfig = _NATIVE_FIREBASE_APPS.appConfig,\n          options = _NATIVE_FIREBASE_APPS.options;\n      var name = appConfig.name;\n      APP_REGISTRY[name] = new _FirebaseApp.default(options, appConfig, true, deleteApp.bind(null, name, true));\n      onAppCreateFn(APP_REGISTRY[name]);\n    }\n  }\n\n  initializedNativeApps = true;\n}\n\nfunction getApp() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constants.DEFAULT_APP_NAME;\n\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n\n  var app = APP_REGISTRY[name];\n\n  if (!app) {\n    throw new Error(\"No Firebase App '\" + name + \"' has been created - call firebase.initializeApp()\");\n  }\n\n  return app;\n}\n\nfunction getApps() {\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n\n  return Object.values(APP_REGISTRY);\n}\n\nfunction initializeApp() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var configOrName = arguments.length > 1 ? arguments[1] : undefined;\n  var appConfig = configOrName;\n\n  if (!(0, _common.isObject)(configOrName) || (0, _common.isNull)(configOrName)) {\n    appConfig = {\n      name: configOrName,\n      automaticResourceManagement: false,\n      automaticDataCollectionEnabled: true\n    };\n  }\n\n  if ((0, _common.isUndefined)(appConfig.name)) {\n    appConfig.name = _constants.DEFAULT_APP_NAME;\n  }\n\n  var _appConfig = appConfig,\n      name = _appConfig.name;\n\n  if (!name || !(0, _common.isString)(name)) {\n    return Promise.reject(new Error(\"Illegal App name: '\" + name + \"'\"));\n  }\n\n  if (APP_REGISTRY[name]) {\n    return Promise.reject(new Error(\"Firebase App named '\" + name + \"' already exists\"));\n  }\n\n  if (!(0, _common.isObject)(options)) {\n    return Promise.reject(new Error(\"firebase.initializeApp(options, <- expects an Object but got '\" + typeof options + \"'\"));\n  }\n\n  if (!(0, _common.isString)(options.apiKey)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'apiKey'.\"));\n  }\n\n  if (!(0, _common.isString)(options.appId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'appId'.\"));\n  }\n\n  if (!(0, _common.isString)(options.databaseURL)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'databaseURL'.\"));\n  }\n\n  if (!(0, _common.isString)(options.messagingSenderId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'messagingSenderId'.\"));\n  }\n\n  if (!(0, _common.isString)(options.projectId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'projectId'.\"));\n  }\n\n  if (!(0, _common.isString)(options.storageBucket)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'storageBucket'.\"));\n  }\n\n  var app = new _FirebaseApp.default(options, {\n    name: name\n  }, false, deleteApp.bind(null, name, true));\n  APP_REGISTRY[name] = app;\n  onAppCreateFn(APP_REGISTRY[name]);\n  return (0, _nativeModule.getAppModule)().initializeApp(options, {\n    name: name\n  }).then(function () {\n    app._initialized = true;\n    return app;\n  });\n}\n\nfunction deleteApp(name, nativeInitialized) {\n  if (name === _constants.DEFAULT_APP_NAME && nativeInitialized) {\n    return Promise.reject(new Error('Unable to delete the default native firebase app instance.'));\n  }\n\n  var app = APP_REGISTRY[name];\n  var nativeModule = (0, _nativeModule.getAppModule)();\n  return nativeModule.deleteApp(name).then(function () {\n    app._deleted = true;\n    onAppDestroyFn(app);\n    delete APP_REGISTRY[name];\n  });\n}","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/@react-native-firebase/app/lib/internal/registry/app.js"],"names":["APP_REGISTRY","onAppCreateFn","onAppDestroyFn","initializedNativeApps","setOnAppCreate","fn","setOnAppDestroy","initializeNativeApps","nativeModule","NATIVE_FIREBASE_APPS","length","i","appConfig","options","name","FirebaseApp","deleteApp","bind","getApp","DEFAULT_APP_NAME","app","Error","getApps","Object","values","initializeApp","configOrName","automaticResourceManagement","automaticDataCollectionEnabled","Promise","reject","apiKey","appId","databaseURL","messagingSenderId","projectId","storageBucket","then","_initialized","nativeInitialized","_deleted"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isNull, isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport FirebaseApp from '../../FirebaseApp';\nimport { DEFAULT_APP_NAME } from '../constants';\nimport { getAppModule } from './nativeModule';\n\nconst APP_REGISTRY = {};\nlet onAppCreateFn = null;\nlet onAppDestroyFn = null;\nlet initializedNativeApps = false;\n\n/**\n * This was needed to avoid metro require cycles...\n * @param fn\n */\nexport function setOnAppCreate(fn) {\n  onAppCreateFn = fn;\n}\n\n/**\n * This was needed to avoid metro require cycles...\n * @param fn\n */\nexport function setOnAppDestroy(fn) {\n  onAppDestroyFn = fn;\n}\n\n/**\n * Initializes all apps that were created natively (android/ios),\n * e.g. the Default firebase app from plist/json google services file.\n */\nexport function initializeNativeApps() {\n  const nativeModule = getAppModule();\n  const { NATIVE_FIREBASE_APPS } = nativeModule;\n\n  if (NATIVE_FIREBASE_APPS && NATIVE_FIREBASE_APPS.length) {\n    for (let i = 0; i < NATIVE_FIREBASE_APPS.length; i++) {\n      const { appConfig, options } = NATIVE_FIREBASE_APPS[i];\n      const { name } = appConfig;\n      APP_REGISTRY[name] = new FirebaseApp(\n        options,\n        appConfig,\n        true,\n        deleteApp.bind(null, name, true),\n      );\n      onAppCreateFn(APP_REGISTRY[name]);\n    }\n  }\n\n  initializedNativeApps = true;\n}\n\n/**\n * Get an app by name; or the default app.\n *\n * On first call of this method it will initialize any\n * natively created apps in JS. This makes this 'lazy load'.\n *\n * @param name\n */\nexport function getApp(name = DEFAULT_APP_NAME) {\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n  const app = APP_REGISTRY[name];\n\n  if (!app) {\n    throw new Error(`No Firebase App '${name}' has been created - call firebase.initializeApp()`);\n  }\n\n  return app;\n}\n\n/**\n * Gets all app instances, used for `firebase.apps`\n */\nexport function getApps() {\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n  return Object.values(APP_REGISTRY);\n}\n\n/**\n *\n * @param options\n * @param configOrName\n */\nexport function initializeApp(options = {}, configOrName) {\n  let appConfig = configOrName;\n\n  if (!isObject(configOrName) || isNull(configOrName)) {\n    appConfig = {\n      name: configOrName,\n      automaticResourceManagement: false,\n      automaticDataCollectionEnabled: true,\n    };\n  }\n\n  if (isUndefined(appConfig.name)) {\n    appConfig.name = DEFAULT_APP_NAME;\n  }\n\n  const { name } = appConfig;\n\n  if (!name || !isString(name)) {\n    return Promise.reject(new Error(`Illegal App name: '${name}'`));\n  }\n\n  if (APP_REGISTRY[name]) {\n    return Promise.reject(new Error(`Firebase App named '${name}' already exists`));\n  }\n\n  // VALIDATE OPTIONS\n  if (!isObject(options)) {\n    return Promise.reject(\n      new Error(`firebase.initializeApp(options, <- expects an Object but got '${typeof options}'`),\n    );\n  }\n\n  if (!isString(options.apiKey)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'apiKey'.\"));\n  }\n\n  if (!isString(options.appId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'appId'.\"));\n  }\n\n  // TODO - make required only if database module exists - init app on native ios&android needs changing also\n  if (!isString(options.databaseURL)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'databaseURL'.\"));\n  }\n\n  // TODO - make required only if messaging/notifications module exists - init app on native ios&android needs changing also\n  if (!isString(options.messagingSenderId)) {\n    return Promise.reject(\n      new Error(\"Missing or invalid FirebaseOptions property 'messagingSenderId'.\"),\n    );\n  }\n\n  if (!isString(options.projectId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'projectId'.\"));\n  }\n\n  // TODO - make required only if database module exists - init app on native ios&android needs changing also\n  if (!isString(options.storageBucket)) {\n    return Promise.reject(\n      new Error(\"Missing or invalid FirebaseOptions property 'storageBucket'.\"),\n    );\n  }\n\n  const app = new FirebaseApp(options, { name }, false, deleteApp.bind(null, name, true));\n\n  APP_REGISTRY[name] = app;\n  onAppCreateFn(APP_REGISTRY[name]);\n\n  return getAppModule()\n    .initializeApp(options, { name })\n    .then(() => {\n      app._initialized = true;\n      return app;\n    });\n}\n\n/**\n *\n */\nexport function deleteApp(name, nativeInitialized) {\n  if (name === DEFAULT_APP_NAME && nativeInitialized) {\n    return Promise.reject(new Error('Unable to delete the default native firebase app instance.'));\n  }\n\n  const app = APP_REGISTRY[name];\n\n  const nativeModule = getAppModule();\n\n  return nativeModule.deleteApp(name).then(() => {\n    app._deleted = true;\n    onAppDestroyFn(app);\n    delete APP_REGISTRY[name];\n  });\n}\n"]},"metadata":{},"sourceType":"script"}