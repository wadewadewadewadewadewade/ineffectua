{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SimpleStackScreen;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _AuthContext = _interopRequireDefault(require(\"../shared/AuthContext\"));\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/AuthFlow.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SplashScreen = function SplashScreen() {\n  return React.createElement(_reactNative.View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar SignInScreen = function SignInScreen() {\n  var _React$useContext = React.useContext(_AuthContext.default),\n      signIn = _React$useContext.signIn;\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState('Email'),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      email = _React$useState2[0],\n      onChangeEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Password'),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      password = _React$useState4[0],\n      onChangePassword = _React$useState4[1];\n\n  return React.createElement(_reactNative.View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.TextInput, {\n    placeholder: \"Email\",\n    autoCompleteType: \"email\",\n    style: [styles.input, {\n      backgroundColor: colors.card,\n      color: colors.text\n    }],\n    onChangeText: function onChangeText(email) {\n      return email;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNative.TextInput, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    style: [styles.input, {\n      backgroundColor: colors.card,\n      color: colors.text\n    }],\n    onChangeText: function onChangeText(password) {\n      return password;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return signIn(email, password);\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Sign in\"));\n};\n\nvar HomeScreen = function HomeScreen() {\n  var _React$useContext2 = React.useContext(_AuthContext.default),\n      signOut = _React$useContext2.signOut;\n\n  return React.createElement(_reactNative.View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNativePaper.Title, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Signed in successfully \\uD83C\\uDF89\"), React.createElement(_reactNativePaper.Button, {\n    onPress: signOut,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Sign out\"));\n};\n\nvar SimpleStack = (0, _stack.createStackNavigator)();\n\nfunction SimpleStackScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    dispatch({\n      type: 'RESTORE_TOKEN',\n      token: state.userToken\n    });\n  }, []);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n  var authContext = React.useMemo(function () {\n    return {\n      user: firebase.auth().currentUser,\n      signIn: function signIn(email, password) {\n        console.log('signin', email, password);\n        var provider = new firebase.auth.FacebookAuthProvider();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {\n          return firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n            if (user !== null && user.credential !== null) {\n              dispatch({\n                type: 'SIGN_IN',\n                token: user.user\n              });\n            }\n          });\n        });\n      },\n      signOut: function signOut() {\n        return dispatch({\n          type: 'SIGN_OUT'\n        });\n      }\n    };\n  }, []);\n\n  if (state.isLoading) {\n    return React.createElement(SplashScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(_AuthContext.default.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, React.createElement(SimpleStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, state.userToken === null ? React.createElement(SimpleStack.Screen, {\n    name: \"SignIn\",\n    options: {\n      title: 'Sign in',\n      animationTypeForReplace: state.isSignout ? 'pop' : 'push'\n    },\n    component: SignInScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }) : React.createElement(SimpleStack.Screen, {\n    name: \"Home\",\n    options: {\n      title: 'Home'\n    },\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  content: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center'\n  },\n  input: {\n    margin: 8,\n    padding: 10,\n    borderRadius: 3,\n    borderWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: 'rgba(0, 0, 0, 0.08)'\n  },\n  button: {\n    margin: 8\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/AuthFlow.tsx"],"names":["SplashScreen","styles","content","SignInScreen","React","useContext","AuthContext","signIn","colors","useState","email","onChangeEmail","password","onChangePassword","input","backgroundColor","card","color","text","button","HomeScreen","signOut","SimpleStack","SimpleStackScreen","navigation","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","useEffect","useLayoutEffect","setOptions","headerShown","authContext","useMemo","user","firebase","auth","currentUser","console","log","provider","FacebookAuthProvider","setPersistence","Auth","Persistence","LOCAL","then","signInWithEmailAndPassword","credential","title","animationTypeForReplace","StyleSheet","create","flex","padding","justifyContent","margin","borderRadius","borderWidth","hairlineWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, TextInput, ActivityIndicator, StyleSheet } from 'react-native';\nimport { Title, Button } from 'react-native-paper';\nimport { useTheme, ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport AuthContext from '../shared/AuthContext'\n\nimport * as firebase from 'firebase';\n\ntype AuthStackParams = {\n  Splash: undefined;\n  Home: undefined;\n  SignIn: undefined;\n  PostSignOut: undefined;\n};\n\nconst SplashScreen = () => {\n  return (\n    <View style={styles.content}>\n      <ActivityIndicator />\n    </View>\n  );\n};\n\nconst SignInScreen = () => {\n  const { signIn } = React.useContext(AuthContext);\n  const { colors } = useTheme();\n  const [email, onChangeEmail] = React.useState('Email');\n  const [password, onChangePassword] = React.useState('Password');\n\n  return (\n    <View style={styles.content}>\n      <TextInput\n        placeholder=\"Email\"\n        autoCompleteType=\"email\"\n        style={[\n          styles.input,\n          { backgroundColor: colors.card, color: colors.text },\n        ]}\n        onChangeText={(email) => email}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        secureTextEntry\n        style={[\n          styles.input,\n          { backgroundColor: colors.card, color: colors.text },\n        ]}\n        onChangeText={(password) => password}\n      />\n      <Button mode=\"contained\" onPress={() => signIn(email, password)} style={styles.button}>\n        Sign in\n      </Button>\n    </View>\n  );\n};\n\nconst HomeScreen = () => {\n  const { signOut } = React.useContext(AuthContext);\n\n  return (\n    <View style={styles.content}>\n      <Title style={styles.text}>Signed in successfully 🎉</Title>\n      <Button onPress={signOut} style={styles.button}>\n        Sign out\n      </Button>\n    </View>\n  );\n};\n\nconst SimpleStack = createStackNavigator<AuthStackParams>();\n\ntype State = {\n  isLoading: boolean;\n  isSignout: boolean;\n  userToken: null | firebase.User;\n};\n\ntype Action =\n  | { type: 'RESTORE_TOKEN'; token: null | firebase.User }\n  | { type: 'SIGN_IN'; token: null | firebase.User }\n  | { type: 'SIGN_OUT' };\n\nexport default function SimpleStackScreen({\n  navigation,\n}: StackScreenProps<ParamListBase>) {\n  const [state, dispatch] = React.useReducer<React.Reducer<State, Action>>(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'RESTORE_TOKEN':\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    }\n  );\n\n  React.useEffect(() => {\n    dispatch({ type: 'RESTORE_TOKEN', token: state.userToken });\n  }, []);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  const authContext = React.useMemo(\n    () => ({\n      user: firebase.auth().currentUser,\n      signIn: (email: string, password: string) => {\n        console.log('signin', email, password)\n        const provider = new firebase.auth.FacebookAuthProvider();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n          .then(() => \n            firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n              if (user !== null && user.credential !== null) {\n                dispatch({ type: 'SIGN_IN', token: user.user })\n              }\n            })\n          )\n      },\n      signOut: () => dispatch({ type: 'SIGN_OUT' }),\n    }),\n    []\n  );\n\n  if (state.isLoading) {\n    return <SplashScreen />;\n  }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <SimpleStack.Navigator\n        // take out the back button so as to disable the users ability to bail out of authentication\n        /*screenOptions={{\n          headerLeft: () => (\n            <HeaderBackButton onPress={() => navigation.goBack()} />\n          ),\n        }}*/\n      >\n        {state.userToken === null ? (\n          <SimpleStack.Screen\n            name=\"SignIn\"\n            options={{\n              title: 'Sign in',\n              animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n            }}\n            component={SignInScreen}\n          />\n        ) : (\n          <SimpleStack.Screen\n            name=\"Home\"\n            options={{ title: 'Home' }}\n            component={HomeScreen}\n          />\n        )}\n      </SimpleStack.Navigator>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n  },\n  input: {\n    margin: 8,\n    padding: 10,\n    borderRadius: 3,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'rgba(0, 0, 0, 0.08)',\n  },\n  button: {\n    margin: 8,\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}