{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNativeModule = getNativeModule;\nexports.getAppModule = getAppModule;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _constants = require(\"../constants\");\n\nvar _NativeFirebaseError = _interopRequireDefault(require(\"../NativeFirebaseError\"));\n\nvar _RNFBNativeEventEmitter = _interopRequireDefault(require(\"../RNFBNativeEventEmitter\"));\n\nvar _SharedEventEmitter = _interopRequireDefault(require(\"../SharedEventEmitter\"));\n\nvar NATIVE_MODULE_REGISTRY = {};\nvar NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\n\nfunction nativeModuleKey(module) {\n  return (module._customUrlOrRegion || '') + \":\" + module.app.name + \":\" + module._config.namespace;\n}\n\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var possiblePromise = method.apply(void 0, [].concat((0, _toConsumableArray2.default)(argToPrepend), args));\n\n    if (possiblePromise && possiblePromise.then) {\n      var jsStack = new Error().stack;\n      return possiblePromise.catch(function (nativeError) {\n        return Promise.reject(new _NativeFirebaseError.default(nativeError, jsStack, namespace));\n      });\n    }\n\n    return possiblePromise;\n  };\n}\n\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  var native = {};\n\n  if (!NativeModule) {\n    return NativeModule;\n  }\n\n  var properties = Object.keys(NativeModule);\n\n  for (var i = 0, len = properties.length; i < len; i++) {\n    var property = properties[i];\n\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n\n  return native;\n}\n\nfunction initialiseNativeModule(module) {\n  var config = module._config;\n  var key = nativeModuleKey(module);\n  var namespace = config.namespace,\n      nativeEvents = config.nativeEvents,\n      nativeModuleName = config.nativeModuleName,\n      hasMultiAppSupport = config.hasMultiAppSupport,\n      hasCustomUrlOrRegionSupport = config.hasCustomUrlOrRegionSupport,\n      disablePrependCustomUrlOrRegion = config.disablePrependCustomUrlOrRegion;\n  var multiModuleRoot = {};\n  var multiModule = Array.isArray(nativeModuleName);\n  var nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n\n  for (var i = 0; i < nativeModuleNames.length; i++) {\n    var nativeModule = _reactNative.NativeModules[nativeModuleNames[i]];\n\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n\n    var argToPrepend = [];\n\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n\n    (0, _extends2.default)(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n\n  if (nativeEvents && nativeEvents.length) {\n    for (var _i = 0, len = nativeEvents.length; _i < len; _i++) {\n      subscribeToNativeModuleEvent(nativeEvents[_i]);\n    }\n  }\n\n  Object.freeze(multiModuleRoot);\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n  return NATIVE_MODULE_REGISTRY[key];\n}\n\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    _RNFBNativeEventEmitter.default.addListener(eventName, function (event) {\n      if (event.appName) {\n        _SharedEventEmitter.default.emit(event.appName + \"-\" + eventName, event);\n      } else {\n        _SharedEventEmitter.default.emit(eventName, event);\n      }\n    });\n\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\n\nfunction getMissingModuleHelpText(namespace) {\n  var snippet = \"firebase.\" + namespace + \"()\";\n  var nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n\n  if (_reactNative.Platform.OS === 'ios') {\n    return \"You attempted to use a firebase module that's not installed natively on your iOS project by calling \" + snippet + \".\" + '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' + '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.';\n  }\n\n  var rnFirebasePackage = \"'io.invertase.firebase.\" + namespace + \".ReactNativeFirebase\" + nativeModule + \"Package'\";\n  var newInstance = \"'new ReactNativeFirebase\" + nativeModule + \"Package()'\";\n  return \"You attempted to use a firebase module that's not installed on your Android project by calling \" + snippet + \".\" + (\"\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the \" + rnFirebasePackage + \" module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the \") + (newInstance + \" line inside of the RN 'getPackages()' method list.\") + '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.';\n}\n\nfunction getNativeModule(module) {\n  var key = nativeModuleKey(module);\n\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n\n  return initialiseNativeModule(module);\n}\n\nfunction getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE];\n  }\n\n  var namespace = 'app';\n  var nativeModule = _reactNative.NativeModules[_constants.APP_NATIVE_MODULE];\n\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n\n  NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n  return NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE];\n}","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/@react-native-firebase/app/lib/internal/registry/nativeModule.js"],"names":["NATIVE_MODULE_REGISTRY","NATIVE_MODULE_EVENT_SUBSCRIPTIONS","nativeModuleKey","module","_customUrlOrRegion","app","name","_config","namespace","nativeModuleMethodWrapped","method","argToPrepend","args","possiblePromise","then","jsStack","Error","stack","catch","nativeError","Promise","reject","NativeFirebaseError","nativeModuleWrapped","NativeModule","native","properties","Object","keys","i","len","length","property","initialiseNativeModule","config","key","nativeEvents","nativeModuleName","hasMultiAppSupport","hasCustomUrlOrRegionSupport","disablePrependCustomUrlOrRegion","multiModuleRoot","multiModule","Array","isArray","nativeModuleNames","nativeModule","NativeModules","getMissingModuleHelpText","push","subscribeToNativeModuleEvent","freeze","eventName","RNFBNativeEventEmitter","addListener","event","appName","SharedEventEmitter","emit","snippet","charAt","toUpperCase","slice","Platform","OS","rnFirebasePackage","newInstance","getNativeModule","getAppModule","APP_NATIVE_MODULE"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeModules, Platform } from 'react-native';\nimport { APP_NATIVE_MODULE } from '../constants';\nimport NativeFirebaseError from '../NativeFirebaseError';\nimport RNFBNativeEventEmitter from '../RNFBNativeEventEmitter';\nimport SharedEventEmitter from '../SharedEventEmitter';\n\nconst NATIVE_MODULE_REGISTRY = {};\nconst NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\n\nfunction nativeModuleKey(module) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\n\n/**\n * Wraps a native module method to provide\n * auto prepended args and custom Error classes.\n *\n * @param namespace\n * @param method\n * @param argToPrepend\n * @returns {Function}\n */\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return (...args) => {\n    const possiblePromise = method(...[...argToPrepend, ...args]);\n\n    if (possiblePromise && possiblePromise.then) {\n      const jsStack = new Error().stack;\n      return possiblePromise.catch(nativeError =>\n        Promise.reject(new NativeFirebaseError(nativeError, jsStack, namespace)),\n      );\n    }\n\n    return possiblePromise;\n  };\n}\n\n/**\n * Prepends all arguments in prependArgs to all native method calls\n *\n * @param namespace\n * @param NativeModule\n * @param argToPrepend\n */\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  const native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n\n  const properties = Object.keys(NativeModule);\n\n  for (let i = 0, len = properties.length; i < len; i++) {\n    const property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n\n  return native;\n}\n\n/**\n * Initialises and wraps all the native module methods.\n *\n * @param module\n * @returns {*}\n */\nfunction initialiseNativeModule(module) {\n  const config = module._config;\n  const key = nativeModuleKey(module);\n  const {\n    namespace,\n    nativeEvents,\n    nativeModuleName,\n    hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion,\n  } = config;\n  const multiModuleRoot = {};\n  const multiModule = Array.isArray(nativeModuleName);\n  const nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n\n  for (let i = 0; i < nativeModuleNames.length; i++) {\n    const nativeModule = NativeModules[nativeModuleNames[i]];\n\n    // only error if there's a single native module\n    // as multi modules can mean some are optional\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n\n    const argToPrepend = [];\n\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n\n  if (nativeEvents && nativeEvents.length) {\n    for (let i = 0, len = nativeEvents.length; i < len; i++) {\n      subscribeToNativeModuleEvent(nativeEvents[i]);\n    }\n  }\n\n  Object.freeze(multiModuleRoot);\n\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n\n  return NATIVE_MODULE_REGISTRY[key];\n}\n\n/**\n * Subscribe to a native event for js side distribution by appName\n *    React Native events are hard set at compile - cant do dynamic event names\n *    so we use a single event send it to js and js then internally can prefix it\n *    and distribute dynamically.\n *\n * @param eventName\n * @private\n */\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    RNFBNativeEventEmitter.addListener(eventName, event => {\n      if (event.appName) {\n        // native event has an appName property - auto prefix and internally emit\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        // standard event - no need to prefix\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\n\n/**\n * Help text for integrating the native counter parts for each firebase module.\n *\n * @param namespace\n * @returns {string}\n */\nfunction getMissingModuleHelpText(namespace) {\n  const snippet = `firebase.${namespace}()`;\n  const nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n\n  if (Platform.OS === 'ios') {\n    return (\n      `You attempted to use a firebase module that's not installed natively on your iOS project by calling ${snippet}.` +\n      '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' +\n      '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.'\n    );\n  }\n\n  const rnFirebasePackage = `'io.invertase.firebase.${namespace}.ReactNativeFirebase${nativeModule}Package'`;\n  const newInstance = `'new ReactNativeFirebase${nativeModule}Package()'`;\n\n  return (\n    `You attempted to use a firebase module that's not installed on your Android project by calling ${snippet}.` +\n    `\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the ${rnFirebasePackage} module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the ` +\n    `${newInstance} line inside of the RN 'getPackages()' method list.` +\n    '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.'\n  );\n}\n\n/**\n * Gets a wrapped native module instance for the provided firebase module.\n * Will attempt to create a new instance if non previously created.\n *\n * @param module\n * @returns {*}\n */\nexport function getNativeModule(module) {\n  const key = nativeModuleKey(module);\n\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n\n  return initialiseNativeModule(module);\n}\n\n/**\n * Custom wrapped app module as it does not have it's own FirebaseModule based class.\n *\n * @returns {*}\n */\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n\n  const namespace = 'app';\n  const nativeModule = NativeModules[APP_NATIVE_MODULE];\n\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}\n"]},"metadata":{},"sourceType":"script"}