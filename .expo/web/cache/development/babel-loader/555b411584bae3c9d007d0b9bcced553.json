{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SimpleStackScreen;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _Article = _interopRequireDefault(require(\"../Shared/Article\"));\n\nvar _Albums = _interopRequireDefault(require(\"../Shared/Albums\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/ModalPresentationStack.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar scrollEnabled = _reactNative.Platform.select({\n  web: true,\n  default: false\n});\n\nvar ArticleScreen = function ArticleScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.push('Albums');\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Push album\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_Article.default, {\n    author: {\n      name: route.params.author\n    },\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AlbumsScreen = function AlbumsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.push('Article', {\n        author: 'Babel fish'\n      });\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Push article\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_Albums.default, {\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar ModalPresentationStack = (0, _stack.createStackNavigator)();\n\nfunction SimpleStackScreen(_ref3) {\n  var navigation = _ref3.navigation,\n      options = _ref3.options;\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n  return React.createElement(ModalPresentationStack.Navigator, (0, _extends2.default)({\n    mode: \"modal\",\n    screenOptions: function screenOptions(_ref4) {\n      var route = _ref4.route,\n          navigation = _ref4.navigation;\n      return _objectSpread(_objectSpread({}, _stack.TransitionPresets.ModalPresentationIOS), {}, {\n        cardOverlayEnabled: true,\n        gestureEnabled: true,\n        headerStatusBarHeight: navigation.dangerouslyGetState().routes.indexOf(route) > 0 ? 0 : undefined\n      });\n    }\n  }, options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), React.createElement(ModalPresentationStack.Screen, {\n    name: \"Article\",\n    component: ArticleScreen,\n    options: function options(_ref5) {\n      var route = _ref5.route;\n      return {\n        title: \"Article by \" + route.params.author\n      };\n    },\n    initialParams: {\n      author: 'Gandalf'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(ModalPresentationStack.Screen, {\n    name: \"Albums\",\n    component: AlbumsScreen,\n    options: {\n      title: 'Albums'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8\n  },\n  button: {\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/ModalPresentationStack.tsx"],"names":["scrollEnabled","Platform","select","web","default","ArticleScreen","navigation","route","styles","buttons","push","button","goBack","name","params","author","AlbumsScreen","ModalPresentationStack","SimpleStackScreen","options","React","useLayoutEffect","setOptions","headerShown","TransitionPresets","ModalPresentationIOS","cardOverlayEnabled","gestureEnabled","headerStatusBarHeight","dangerouslyGetState","routes","indexOf","undefined","title","StyleSheet","create","flexDirection","padding","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport type { ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n  StackNavigationOptions,\n  TransitionPresets,\n} from '@react-navigation/stack';\nimport Article from '../Shared/Article';\nimport Albums from '../Shared/Albums';\n\ntype ModalStackParams = {\n  Article: { author: string };\n  Albums: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst ArticleScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<ModalStackParams, 'Article'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('Albums')}\n          style={styles.button}\n        >\n          Push album\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <Article\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst AlbumsScreen = ({ navigation }: StackScreenProps<ModalStackParams>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('Article', { author: 'Babel fish' })}\n          style={styles.button}\n        >\n          Push article\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <Albums scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst ModalPresentationStack = createStackNavigator<ModalStackParams>();\n\ntype Props = StackScreenProps<ParamListBase> & {\n  options?: StackNavigationOptions;\n};\n\nexport default function SimpleStackScreen({ navigation, options }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <ModalPresentationStack.Navigator\n      mode=\"modal\"\n      screenOptions={({ route, navigation }) => ({\n        ...TransitionPresets.ModalPresentationIOS,\n        cardOverlayEnabled: true,\n        gestureEnabled: true,\n        headerStatusBarHeight:\n          navigation.dangerouslyGetState().routes.indexOf(route) > 0\n            ? 0\n            : undefined,\n      })}\n      {...options}\n    >\n      <ModalPresentationStack.Screen\n        name=\"Article\"\n        component={ArticleScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params.author}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <ModalPresentationStack.Screen\n        name=\"Albums\"\n        component={AlbumsScreen}\n        options={{ title: 'Albums' }}\n      />\n    </ModalPresentationStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}