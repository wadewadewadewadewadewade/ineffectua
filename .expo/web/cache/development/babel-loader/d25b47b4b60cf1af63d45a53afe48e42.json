{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar ReactNative = _interopRequireWildcard(require(\"react-native\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _interface = require(\"../interface\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _basic = _interopRequireDefault(require(\"./day/basic\"));\n\nvar _period = _interopRequireDefault(require(\"./day/period\"));\n\nvar _multiDot = _interopRequireDefault(require(\"./day/multi-dot\"));\n\nvar _multiPeriod = _interopRequireDefault(require(\"./day/multi-period\"));\n\nvar _custom = _interopRequireDefault(require(\"./day/custom\"));\n\nvar _header = _interopRequireDefault(require(\"./header\"));\n\nvar _updater = _interopRequireDefault(require(\"./updater\"));\n\nvar _reactNativeSwipeGestures = _interopRequireWildcard(require(\"react-native-swipe-gestures\"));\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _jsxFileName = \"/home/wade/projects/ineffectua/node_modules/react-native-calendars/src/calendar/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar View = ReactNative.View,\n    ViewPropTypes = ReactNative.ViewPropTypes;\nvar viewPropTypes = ViewPropTypes || View.propTypes;\nvar EmptyArray = [];\n\nvar Calendar = function (_Component) {\n  (0, _inherits2.default)(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Calendar);\n    _this = _super.call(this, props);\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.isDateNotInTheRange = function (minDate, maxDate, date) {\n      return minDate && !_dateutils.default.isGTE(date, minDate) || maxDate && !_dateutils.default.isLTE(date, maxDate);\n    };\n\n    _this.getAccessibilityLabel = function (state, day) {\n      var today = _xdate.default.locales[_xdate.default.defaultLocale].today;\n      var formatAccessibilityLabel = _xdate.default.locales[_xdate.default.defaultLocale].formatAccessibilityLabel;\n      var isToday = state === 'today';\n\n      var markingLabel = _this.getDateMarking(day);\n\n      if (formatAccessibilityLabel) {\n        return (isToday ? today : '') + \" \" + day.toString(formatAccessibilityLabel) + \" \" + markingLabel;\n      }\n\n      return (isToday ? 'today' : '') + \" \" + day.toString('dddd d MMMM yyyy') + \" \" + markingLabel;\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var enableSwipeMonths = _this.props.enableSwipeMonths;\n\n      if (!enableSwipeMonths) {\n        return;\n      }\n\n      var SWIPE_UP = _reactNativeSwipeGestures.swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = _reactNativeSwipeGestures.swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = _reactNativeSwipeGestures.swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = _reactNativeSwipeGestures.swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      _this.header.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      _this.header.onPressLeft();\n    };\n\n    _this.style = (0, _style.default)(_this.props.theme);\n    _this.state = {\n      currentMonth: props.current ? (0, _interface.parseDate)(props.current) : (0, _xdate.default)()\n    };\n    _this.updateMonth = _this.updateMonth.bind((0, _assertThisInitialized2.default)(_this));\n    _this.pressDay = _this.pressDay.bind((0, _assertThisInitialized2.default)(_this));\n    _this.longPressDay = _this.longPressDay.bind((0, _assertThisInitialized2.default)(_this));\n    _this.shouldComponentUpdate = _updater.default;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Calendar, [{\n    key: \"updateMonth\",\n    value: function updateMonth(day, doNotTriggerListeners) {\n      var _this2 = this;\n\n      if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this2.state.currentMonth.clone();\n\n          if (_this2.props.onMonthChange) {\n            _this2.props.onMonthChange((0, _interface.xdateToData)(currMont));\n          }\n\n          if (_this2.props.onVisibleMonthsChange) {\n            _this2.props.onVisibleMonthsChange([(0, _interface.xdateToData)(currMont)]);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_handleDayInteraction\",\n    value: function _handleDayInteraction(date, interaction) {\n      var day = (0, _interface.parseDate)(date);\n      var minDate = (0, _interface.parseDate)(this.props.minDate);\n      var maxDate = (0, _interface.parseDate)(this.props.maxDate);\n\n      if (!(minDate && !_dateutils.default.isGTE(day, minDate)) && !(maxDate && !_dateutils.default.isLTE(day, maxDate))) {\n        var shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction((0, _interface.xdateToData)(day));\n        }\n      }\n    }\n  }, {\n    key: \"pressDay\",\n    value: function pressDay(date) {\n      this._handleDayInteraction(date, this.props.onDayPress);\n    }\n  }, {\n    key: \"longPressDay\",\n    value: function longPressDay(date) {\n      this._handleDayInteraction(date, this.props.onDayLongPress);\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var minDate = (0, _interface.parseDate)(this.props.minDate);\n      var maxDate = (0, _interface.parseDate)(this.props.maxDate);\n      var state = '';\n\n      if (this.props.disabledByDefault) {\n        state = 'disabled';\n      } else if (this.isDateNotInTheRange(minDate, maxDate, day)) {\n        state = 'disabled';\n      } else if (!_dateutils.default.sameMonth(day, this.state.currentMonth)) {\n        state = 'disabled';\n      } else if (_dateutils.default.sameDate(day, (0, _xdate.default)())) {\n        state = 'today';\n      }\n\n      if (!_dateutils.default.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n        return _react.default.createElement(View, {\n          key: id,\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }\n        });\n      }\n\n      var DayComp = this.getDayComponent();\n      var date = day.getDate();\n      var dateAsObject = (0, _interface.xdateToData)(day);\n      var accessibilityLabel = this.getAccessibilityLabel(state, day);\n      return _react.default.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(DayComp, {\n        testID: _testIDs.SELECT_DATE_SLOT + \"-\" + dateAsObject.dateString,\n        state: state,\n        theme: this.props.theme,\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        date: dateAsObject,\n        marking: this.getDateMarking(day),\n        accessibilityLabel: accessibilityLabel,\n        disableAllTouchEventsForDisabledDays: this.props.disableAllTouchEventsForDisabledDays,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, date));\n    }\n  }, {\n    key: \"getMarkingLabel\",\n    value: function getMarkingLabel(day) {\n      var label = '';\n      var marking = this.getDateMarking(day);\n\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n\n      if (marking.selected) {\n        label += 'selected ';\n\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n\n      return label;\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      if (this.props.dayComponent) {\n        return this.props.dayComponent;\n      }\n\n      switch (this.props.markingType) {\n        case 'period':\n          return _period.default;\n\n        case 'multi-dot':\n          return _multiDot.default;\n\n        case 'multi-period':\n          return _multiPeriod.default;\n\n        case 'custom':\n          return _custom.default;\n\n        default:\n          return _basic.default;\n      }\n    }\n  }, {\n    key: \"getDateMarking\",\n    value: function getDateMarking(day) {\n      if (!this.props.markedDates) {\n        return false;\n      }\n\n      var dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n      if (dates.length || dates) {\n        return dates;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"renderWeekNumber\",\n    value: function renderWeekNumber(weekNumber) {\n      return _react.default.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: \"week-container-\" + weekNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_basic.default, {\n        key: \"week-\" + weekNumber,\n        theme: this.props.theme,\n        marking: {\n          disableTouchEvent: true\n        },\n        state: \"disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this3 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this3.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return _react.default.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }, week);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var currentMonth = this.state.currentMonth;\n      var _this$props = this.props,\n          firstDay = _this$props.firstDay,\n          showSixWeeks = _this$props.showSixWeeks,\n          hideExtraDays = _this$props.hideExtraDays;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n\n      var days = _dateutils.default.page(currentMonth, firstDay, shouldShowSixWeeks);\n\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      var indicator;\n      var current = (0, _interface.parseDate)(this.props.current);\n\n      if (current) {\n        var lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n\n        if (this.props.displayLoadingIndicator && !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      return _react.default.createElement(_reactNativeSwipeGestures.default, {\n        onSwipe: function onSwipe(direction, state) {\n          return _this4.onSwipe(direction, state);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(View, {\n        style: [this.style.container, this.props.style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_header.default, {\n        testID: this.props.testID,\n        ref: function ref(c) {\n          return _this4.header = c;\n        },\n        style: this.props.headerStyle,\n        theme: this.props.theme,\n        hideArrows: this.props.hideArrows,\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        showIndicator: indicator,\n        firstDay: this.props.firstDay,\n        showSixWeeks: this.props.showSixWeeks,\n        renderArrow: this.props.renderArrow,\n        monthFormat: this.props.monthFormat,\n        hideDayNames: this.props.hideDayNames,\n        weekNumbers: this.props.showWeekNumbers,\n        onPressArrowLeft: this.props.onPressArrowLeft,\n        onPressArrowRight: this.props.onPressArrowRight,\n        webAriaLevel: this.props.webAriaLevel,\n        disableArrowLeft: this.props.disableArrowLeft,\n        disableArrowRight: this.props.disableArrowRight,\n        disabledDaysIndexes: this.props.disabledDaysIndexes,\n        renderHeader: this.props.renderHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      }, weeks)));\n    }\n  }]);\n  return Calendar;\n}(_react.Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n  theme: _propTypes.default.object,\n  markedDates: _propTypes.default.object,\n  style: viewPropTypes.style,\n  current: _propTypes.default.any,\n  minDate: _propTypes.default.any,\n  maxDate: _propTypes.default.any,\n  firstDay: _propTypes.default.number,\n  markingType: _propTypes.default.string,\n  hideArrows: _propTypes.default.bool,\n  displayLoadingIndicator: _propTypes.default.bool,\n  hideExtraDays: _propTypes.default.bool,\n  showSixWeeks: _propTypes.default.bool,\n  onDayPress: _propTypes.default.func,\n  onDayLongPress: _propTypes.default.func,\n  onMonthChange: _propTypes.default.func,\n  onVisibleMonthsChange: _propTypes.default.func,\n  renderArrow: _propTypes.default.func,\n  dayComponent: _propTypes.default.any,\n  monthFormat: _propTypes.default.string,\n  disableMonthChange: _propTypes.default.bool,\n  hideDayNames: _propTypes.default.bool,\n  disabledByDefault: _propTypes.default.bool,\n  showWeekNumbers: _propTypes.default.bool,\n  onPressArrowLeft: _propTypes.default.func,\n  onPressArrowRight: _propTypes.default.func,\n  disableArrowLeft: _propTypes.default.bool,\n  disableArrowRight: _propTypes.default.bool,\n  headerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  webAriaLevel: _propTypes.default.number,\n  disabledDaysIndexes: _propTypes.default.arrayOf(_propTypes.default.number),\n  disableAllTouchEventsForDisabledDays: _propTypes.default.bool,\n  renderHeader: _propTypes.default.any,\n  enableSwipeMonths: _propTypes.default.bool\n};\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nvar _default = Calendar;\nexports.default = _default;","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/react-native-calendars/src/calendar/index.js"],"names":["View","ReactNative","ViewPropTypes","viewPropTypes","propTypes","EmptyArray","Calendar","props","addMonth","count","updateMonth","state","currentMonth","clone","addMonths","isDateNotInTheRange","minDate","maxDate","date","dateutils","isGTE","isLTE","getAccessibilityLabel","day","today","XDate","locales","defaultLocale","formatAccessibilityLabel","isToday","markingLabel","getDateMarking","toString","onSwipe","gestureName","enableSwipeMonths","SWIPE_UP","swipeDirections","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","header","onPressRight","onPressLeft","style","theme","current","bind","pressDay","longPressDay","shouldComponentUpdate","doNotTriggerListeners","setState","currMont","onMonthChange","onVisibleMonthsChange","interaction","shouldUpdateMonth","disableMonthChange","undefined","_handleDayInteraction","onDayPress","onDayLongPress","id","disabledByDefault","sameMonth","sameDate","hideExtraDays","flex","DayComp","getDayComponent","getDate","dateAsObject","accessibilityLabel","alignItems","SELECT_DATE_SLOT","dateString","disableAllTouchEventsForDisabledDays","label","marking","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","dayComponent","markingType","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","Day","markedDates","dates","length","weekNumber","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","renderWeekNumber","getWeek","firstDay","showSixWeeks","shouldShowSixWeeks","page","weeks","renderWeek","splice","indicator","lastMonthOfDay","setDate","addDays","displayLoadingIndicator","direction","container","accessibilityElementsHidden","importantForAccessibility","testID","c","headerStyle","hideArrows","renderArrow","monthFormat","hideDayNames","onPressArrowLeft","onPressArrowRight","webAriaLevel","disableArrowLeft","disableArrowRight","disabledDaysIndexes","renderHeader","monthView","Component","displayName","PropTypes","object","any","number","string","bool","func","oneOfType","array","arrayOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAIOA,I,GAAuBC,W,CAAvBD,I;IAAME,a,GAAiBD,W,CAAjBC,a;AACb,IAAMC,aAAa,GAAGD,aAAa,IAAIF,IAAI,CAACI,SAA5C;AACA,IAAMC,UAAU,GAAG,EAAnB;;IAOMC,Q;;;;;AA4EJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;;AADiB,UAwDnBC,QAxDmB,GAwDR,UAACC,KAAD,EAAW;AACpB,YAAKC,WAAL,CAAiB,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,GAAgCC,SAAhC,CAA0CL,KAA1C,EAAiD,IAAjD,CAAjB;AACD,KA1DkB;;AAAA,UA4DnBM,mBA5DmB,GA4DG,UAACC,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAA4B;AAChD,aAAQF,OAAO,IAAI,CAACG,mBAAUC,KAAV,CAAgBF,IAAhB,EAAsBF,OAAtB,CAAb,IAAiDC,OAAO,IAAI,CAACE,mBAAUE,KAAV,CAAgBH,IAAhB,EAAsBD,OAAtB,CAApE;AACD,KA9DkB;;AAAA,UAgEnBK,qBAhEmB,GAgEK,UAACX,KAAD,EAAQY,GAAR,EAAgB;AACtC,UAAMC,KAAK,GAAGC,eAAMC,OAAN,CAAcD,eAAME,aAApB,EAAmCH,KAAjD;AACA,UAAMI,wBAAwB,GAAGH,eAAMC,OAAN,CAAcD,eAAME,aAApB,EAAmCC,wBAApE;AACA,UAAMC,OAAO,GAAGlB,KAAK,KAAK,OAA1B;;AACA,UAAMmB,YAAY,GAAG,MAAKC,cAAL,CAAoBR,GAApB,CAArB;;AAEA,UAAIK,wBAAJ,EAA8B;AAC5B,gBAAUC,OAAO,GAAGL,KAAH,GAAW,EAA5B,UAAkCD,GAAG,CAACS,QAAJ,CAAaJ,wBAAb,CAAlC,SAA4EE,YAA5E;AACD;;AAED,cAAUD,OAAO,GAAG,OAAH,GAAa,EAA9B,UAAoCN,GAAG,CAACS,QAAJ,CAAa,kBAAb,CAApC,SAAwEF,YAAxE;AACD,KA3EkB;;AAAA,UAqLnBG,OArLmB,GAqLT,UAACC,WAAD,EAAiB;AAAA,UAClBC,iBADkB,GACG,MAAK5B,KADR,CAClB4B,iBADkB;;AAEzB,UAAI,CAACA,iBAAL,EAAwB;AACtB;AACD;;AAJwB,UAMlBC,QANkB,GAM+BC,yCAN/B,CAMlBD,QANkB;AAAA,UAMRE,UANQ,GAM+BD,yCAN/B,CAMRC,UANQ;AAAA,UAMIC,UANJ,GAM+BF,yCAN/B,CAMIE,UANJ;AAAA,UAMgBC,WANhB,GAM+BH,yCAN/B,CAMgBG,WANhB;;AAOzB,cAAQN,WAAR;AACA,aAAKE,QAAL;AACA,aAAKE,UAAL;AACE;;AACF,aAAKC,UAAL;AACE,gBAAKE,WAAL;;AACA;;AACF,aAAKD,WAAL;AACE,gBAAKE,YAAL;;AACA;AATF;AAWD,KAvMkB;;AAAA,UAyMnBD,WAzMmB,GAyML,YAAM;AAClB,YAAKE,MAAL,CAAYC,YAAZ;AACD,KA3MkB;;AAAA,UA6MnBF,YA7MmB,GA6MJ,YAAM;AACnB,YAAKC,MAAL,CAAYE,WAAZ;AACD,KA/MkB;;AAGjB,UAAKC,KAAL,GAAa,oBAAiB,MAAKvC,KAAL,CAAWwC,KAA5B,CAAb;AACA,UAAKpC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEL,KAAK,CAACyC,OAAN,GAAgB,0BAAUzC,KAAK,CAACyC,OAAhB,CAAhB,GAA2C;AAD9C,KAAb;AAIA,UAAKtC,WAAL,GAAmB,MAAKA,WAAL,CAAiBuC,IAAjB,6CAAnB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,6CAAhB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,6CAApB;AACA,UAAKG,qBAAL,GAA6BA,gBAA7B;AAXiB;AAYlB;;;;gCAEW7B,G,EAAK8B,qB,EAAuB;AAAA;;AACtC,UAAI9B,GAAG,CAACS,QAAJ,CAAa,SAAb,MAA4B,KAAKrB,KAAL,CAAWC,YAAX,CAAwBoB,QAAxB,CAAiC,SAAjC,CAAhC,EAA6E;AAC3E;AACD;;AACD,WAAKsB,QAAL,CAAc;AACZ1C,QAAAA,YAAY,EAAEW,GAAG,CAACV,KAAJ;AADF,OAAd,EAEG,YAAM;AACP,YAAI,CAACwC,qBAAL,EAA4B;AAC1B,cAAME,QAAQ,GAAG,MAAI,CAAC5C,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,EAAjB;;AACA,cAAI,MAAI,CAACN,KAAL,CAAWiD,aAAf,EAA8B;AAC5B,YAAA,MAAI,CAACjD,KAAL,CAAWiD,aAAX,CAAyB,4BAAYD,QAAZ,CAAzB;AACD;;AACD,cAAI,MAAI,CAAChD,KAAL,CAAWkD,qBAAf,EAAsC;AACpC,YAAA,MAAI,CAAClD,KAAL,CAAWkD,qBAAX,CAAiC,CAAC,4BAAYF,QAAZ,CAAD,CAAjC;AACD;AACF;AACF,OAZD;AAaD;;;0CAEqBrC,I,EAAMwC,W,EAAa;AACvC,UAAMnC,GAAG,GAAG,0BAAUL,IAAV,CAAZ;AACA,UAAMF,OAAO,GAAG,0BAAU,KAAKT,KAAL,CAAWS,OAArB,CAAhB;AACA,UAAMC,OAAO,GAAG,0BAAU,KAAKV,KAAL,CAAWU,OAArB,CAAhB;;AACA,UAAI,EAAED,OAAO,IAAI,CAACG,mBAAUC,KAAV,CAAgBG,GAAhB,EAAqBP,OAArB,CAAd,KAAgD,EAAEC,OAAO,IAAI,CAACE,mBAAUE,KAAV,CAAgBE,GAAhB,EAAqBN,OAArB,CAAd,CAApD,EAAkG;AAChG,YAAM0C,iBAAiB,GAAG,KAAKpD,KAAL,CAAWqD,kBAAX,KAAkCC,SAAlC,IAA+C,CAAC,KAAKtD,KAAL,CAAWqD,kBAArF;;AACA,YAAID,iBAAJ,EAAuB;AACrB,eAAKjD,WAAL,CAAiBa,GAAjB;AACD;;AACD,YAAImC,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAAC,4BAAYnC,GAAZ,CAAD,CAAX;AACD;AACF;AACF;;;6BAEQL,I,EAAM;AACb,WAAK4C,qBAAL,CAA2B5C,IAA3B,EAAiC,KAAKX,KAAL,CAAWwD,UAA5C;AACD;;;iCAEY7C,I,EAAM;AACjB,WAAK4C,qBAAL,CAA2B5C,IAA3B,EAAiC,KAAKX,KAAL,CAAWyD,cAA5C;AACD;;;8BAwBSzC,G,EAAK0C,E,EAAI;AACjB,UAAMjD,OAAO,GAAG,0BAAU,KAAKT,KAAL,CAAWS,OAArB,CAAhB;AACA,UAAMC,OAAO,GAAG,0BAAU,KAAKV,KAAL,CAAWU,OAArB,CAAhB;AACA,UAAIN,KAAK,GAAG,EAAZ;;AACA,UAAI,KAAKJ,KAAL,CAAW2D,iBAAf,EAAkC;AAChCvD,QAAAA,KAAK,GAAG,UAAR;AACD,OAFD,MAEO,IAAI,KAAKI,mBAAL,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2CM,GAA3C,CAAJ,EAAqD;AAC1DZ,QAAAA,KAAK,GAAG,UAAR;AACD,OAFM,MAEA,IAAI,CAACQ,mBAAUgD,SAAV,CAAoB5C,GAApB,EAAyB,KAAKZ,KAAL,CAAWC,YAApC,CAAL,EAAwD;AAC7DD,QAAAA,KAAK,GAAG,UAAR;AACD,OAFM,MAEA,IAAIQ,mBAAUiD,QAAV,CAAmB7C,GAAnB,EAAwB,qBAAxB,CAAJ,EAAsC;AAC3CZ,QAAAA,KAAK,GAAG,OAAR;AACD;;AAED,UAAI,CAACQ,mBAAUgD,SAAV,CAAoB5C,GAApB,EAAyB,KAAKZ,KAAL,CAAWC,YAApC,CAAD,IAAsD,KAAKL,KAAL,CAAW8D,aAArE,EAAoF;AAClF,eAAQ,6BAAC,IAAD;AAAM,UAAA,GAAG,EAAEJ,EAAX;AAAe,UAAA,KAAK,EAAE;AAACK,YAAAA,IAAI,EAAE;AAAP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;AAED,UAAMC,OAAO,GAAG,KAAKC,eAAL,EAAhB;AACA,UAAMtD,IAAI,GAAGK,GAAG,CAACkD,OAAJ,EAAb;AACA,UAAMC,YAAY,GAAG,4BAAYnD,GAAZ,CAArB;AACA,UAAMoD,kBAAkB,GAAG,KAAKrD,qBAAL,CAA2BX,KAA3B,EAAkCY,GAAlC,CAA3B;AAEA,aACE,6BAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC+C,UAAAA,IAAI,EAAE,CAAP;AAAUM,UAAAA,UAAU,EAAE;AAAtB,SAAb;AAA8C,QAAA,GAAG,EAAEX,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,OAAD;AACE,QAAA,MAAM,EAAKY,yBAAL,SAAyBH,YAAY,CAACI,UAD9C;AAEE,QAAA,KAAK,EAAEnE,KAFT;AAGE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWwC,KAHpB;AAIE,QAAA,OAAO,EAAE,KAAKG,QAJhB;AAKE,QAAA,WAAW,EAAE,KAAKC,YALpB;AAME,QAAA,IAAI,EAAEuB,YANR;AAOE,QAAA,OAAO,EAAE,KAAK3C,cAAL,CAAoBR,GAApB,CAPX;AAQE,QAAA,kBAAkB,EAAEoD,kBARtB;AASE,QAAA,oCAAoC,EAAE,KAAKpE,KAAL,CAAWwE,oCATnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWG7D,IAXH,CADF,CADF;AAiBD;;;oCAEeK,G,EAAK;AACnB,UAAIyD,KAAK,GAAG,EAAZ;AACA,UAAMC,OAAO,GAAG,KAAKlD,cAAL,CAAoBR,GAApB,CAAhB;;AAEA,UAAI0D,OAAO,CAACN,kBAAZ,EAAgC;AAC9B,eAAOM,OAAO,CAACN,kBAAf;AACD;;AAED,UAAIM,OAAO,CAACC,QAAZ,EAAsB;AACpBF,QAAAA,KAAK,IAAI,WAAT;;AACA,YAAI,CAACC,OAAO,CAACE,MAAb,EAAqB;AACnBH,UAAAA,KAAK,IAAI,mCAAT;AACD;AACF;;AACD,UAAIC,OAAO,CAACE,MAAZ,EAAoB;AAClBH,QAAAA,KAAK,IAAI,gCAAT;AACD;;AACD,UAAIC,OAAO,CAACG,WAAZ,EAAyB;AACvBJ,QAAAA,KAAK,IAAI,eAAT;AACD;;AACD,UAAIC,OAAO,CAACI,SAAZ,EAAuB;AACrBL,QAAAA,KAAK,IAAI,aAAT;AACD;;AACD,UAAIC,OAAO,CAACK,QAAR,IAAoBL,OAAO,CAACM,iBAAhC,EAAmD;AACjDP,QAAAA,KAAK,IAAI,WAAT;AACD;;AACD,aAAOA,KAAP;AACD;;;sCAEiB;AAChB,UAAI,KAAKzE,KAAL,CAAWiF,YAAf,EAA6B;AAC3B,eAAO,KAAKjF,KAAL,CAAWiF,YAAlB;AACD;;AAED,cAAQ,KAAKjF,KAAL,CAAWkF,WAAnB;AACA,aAAK,QAAL;AACE,iBAAOC,eAAP;;AACF,aAAK,WAAL;AACE,iBAAOC,iBAAP;;AACF,aAAK,cAAL;AACE,iBAAOC,oBAAP;;AACF,aAAK,QAAL;AACE,iBAAOC,eAAP;;AACF;AACE,iBAAOC,cAAP;AAVF;AAYD;;;mCAEcvE,G,EAAK;AAClB,UAAI,CAAC,KAAKhB,KAAL,CAAWwF,WAAhB,EAA6B;AAC3B,eAAO,KAAP;AACD;;AAED,UAAMC,KAAK,GAAG,KAAKzF,KAAL,CAAWwF,WAAX,CAAuBxE,GAAG,CAACS,QAAJ,CAAa,YAAb,CAAvB,KAAsD3B,UAApE;;AACA,UAAI2F,KAAK,CAACC,MAAN,IAAgBD,KAApB,EAA2B;AACzB,eAAOA,KAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;;;qCA8BgBE,U,EAAY;AAC3B,aACE,6BAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC5B,UAAAA,IAAI,EAAE,CAAP;AAAUM,UAAAA,UAAU,EAAE;AAAtB,SAAb;AAA8C,QAAA,GAAG,sBAAoBsB,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,cAAD;AACE,QAAA,GAAG,YAAUA,UADf;AAEE,QAAA,KAAK,EAAE,KAAK3F,KAAL,CAAWwC,KAFpB;AAGE,QAAA,OAAO,EAAE;AAACwC,UAAAA,iBAAiB,EAAE;AAApB,SAHX;AAIE,QAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGW,UANH,CADF,CADF;AAYD;;;+BAEUC,I,EAAMlC,E,EAAI;AAAA;;AACnB,UAAMmC,IAAI,GAAG,EAAb;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAAC9E,GAAD,EAAM+E,GAAN,EAAc;AACzBF,QAAAA,IAAI,CAACG,IAAL,CAAU,MAAI,CAACC,SAAL,CAAejF,GAAf,EAAoB+E,GAApB,CAAV;AACD,OAFD,EAEG,IAFH;;AAIA,UAAI,KAAK/F,KAAL,CAAWkG,eAAf,EAAgC;AAC9BL,QAAAA,IAAI,CAACM,OAAL,CAAa,KAAKC,gBAAL,CAAsBR,IAAI,CAACA,IAAI,CAACF,MAAL,GAAc,CAAf,CAAJ,CAAsBW,OAAtB,EAAtB,CAAb;AACD;;AAED,aAAQ,6BAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAK9D,KAAL,CAAWsD,IAAxB;AAA8B,QAAA,GAAG,EAAEnC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCmC,IAAxC,CAAR;AACD;;;6BAEQ;AAAA;;AAAA,UACAxF,YADA,GACgB,KAAKD,KADrB,CACAC,YADA;AAAA,wBAEyC,KAAKL,KAF9C;AAAA,UAEAsG,QAFA,eAEAA,QAFA;AAAA,UAEUC,YAFV,eAEUA,YAFV;AAAA,UAEwBzC,aAFxB,eAEwBA,aAFxB;AAGP,UAAM0C,kBAAkB,GAAGD,YAAY,IAAI,CAACzC,aAA5C;;AACA,UAAM8B,IAAI,GAAGhF,mBAAU6F,IAAV,CAAepG,YAAf,EAA6BiG,QAA7B,EAAuCE,kBAAvC,CAAb;;AAEA,UAAME,KAAK,GAAG,EAAd;;AACA,aAAOd,IAAI,CAACF,MAAZ,EAAoB;AAClBgB,QAAAA,KAAK,CAACV,IAAN,CAAW,KAAKW,UAAL,CAAgBf,IAAI,CAACgB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAhB,EAAmCF,KAAK,CAAChB,MAAzC,CAAX;AACD;;AAED,UAAImB,SAAJ;AACA,UAAMpE,OAAO,GAAG,0BAAU,KAAKzC,KAAL,CAAWyC,OAArB,CAAhB;;AACA,UAAIA,OAAJ,EAAa;AACX,YAAMqE,cAAc,GAAGrE,OAAO,CAACnC,KAAR,GAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,IAA7B,EAAmCwG,OAAnC,CAA2C,CAA3C,EAA8CC,OAA9C,CAAsD,CAAC,CAAvD,EAA0DvF,QAA1D,CAAmE,YAAnE,CAAvB;;AACA,YAAI,KAAKzB,KAAL,CAAWiH,uBAAX,IACF,EAAE,KAAKjH,KAAL,CAAWwF,WAAX,IAA0B,KAAKxF,KAAL,CAAWwF,WAAX,CAAuBsB,cAAvB,CAA5B,CADF,EACuE;AACrED,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF;;AAED,aACE,6BAAC,iCAAD;AACE,QAAA,OAAO,EAAE,iBAACK,SAAD,EAAY9G,KAAZ;AAAA,iBAAsB,MAAI,CAACsB,OAAL,CAAawF,SAAb,EAAwB9G,KAAxB,CAAtB;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,6BAAC,IAAD;AACE,QAAA,KAAK,EAAE,CAAC,KAAKmC,KAAL,CAAW4E,SAAZ,EAAuB,KAAKnH,KAAL,CAAWuC,KAAlC,CADT;AAEE,QAAA,2BAA2B,EAAE,KAAKvC,KAAL,CAAWoH,2BAF1C;AAGE,QAAA,yBAAyB,EAAE,KAAKpH,KAAL,CAAWqH,yBAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,6BAAC,eAAD;AACE,QAAA,MAAM,EAAE,KAAKrH,KAAL,CAAWsH,MADrB;AAEE,QAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,iBAAI,MAAI,CAACnF,MAAL,GAAcmF,CAAlB;AAAA,SAFR;AAGE,QAAA,KAAK,EAAE,KAAKvH,KAAL,CAAWwH,WAHpB;AAIE,QAAA,KAAK,EAAE,KAAKxH,KAAL,CAAWwC,KAJpB;AAKE,QAAA,UAAU,EAAE,KAAKxC,KAAL,CAAWyH,UALzB;AAME,QAAA,KAAK,EAAE,KAAKrH,KAAL,CAAWC,YANpB;AAOE,QAAA,QAAQ,EAAE,KAAKJ,QAPjB;AAQE,QAAA,aAAa,EAAE4G,SARjB;AASE,QAAA,QAAQ,EAAE,KAAK7G,KAAL,CAAWsG,QATvB;AAUE,QAAA,YAAY,EAAE,KAAKtG,KAAL,CAAWuG,YAV3B;AAWE,QAAA,WAAW,EAAE,KAAKvG,KAAL,CAAW0H,WAX1B;AAYE,QAAA,WAAW,EAAE,KAAK1H,KAAL,CAAW2H,WAZ1B;AAaE,QAAA,YAAY,EAAE,KAAK3H,KAAL,CAAW4H,YAb3B;AAcE,QAAA,WAAW,EAAE,KAAK5H,KAAL,CAAWkG,eAd1B;AAeE,QAAA,gBAAgB,EAAE,KAAKlG,KAAL,CAAW6H,gBAf/B;AAgBE,QAAA,iBAAiB,EAAE,KAAK7H,KAAL,CAAW8H,iBAhBhC;AAiBE,QAAA,YAAY,EAAE,KAAK9H,KAAL,CAAW+H,YAjB3B;AAkBE,QAAA,gBAAgB,EAAE,KAAK/H,KAAL,CAAWgI,gBAlB/B;AAmBE,QAAA,iBAAiB,EAAE,KAAKhI,KAAL,CAAWiI,iBAnBhC;AAoBE,QAAA,mBAAmB,EAAE,KAAKjI,KAAL,CAAWkI,mBApBlC;AAqBE,QAAA,YAAY,EAAE,KAAKlI,KAAL,CAAWmI,YArB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EA4BE,6BAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAK5F,KAAL,CAAW6F,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC1B,KAApC,CA5BF,CAHF,CADF;AAoCD;;;EAlXoB2B,gB;;AAAjBtI,Q,CACGuI,W,GAAc,U;AADjBvI,Q,CAGGF,S,GAAY;AAEjB2C,EAAAA,KAAK,EAAE+F,mBAAUC,MAFA;AAIjBhD,EAAAA,WAAW,EAAE+C,mBAAUC,MAJN;AAMjBjG,EAAAA,KAAK,EAAE3C,aAAa,CAAC2C,KANJ;AAQjBE,EAAAA,OAAO,EAAE8F,mBAAUE,GARF;AAUjBhI,EAAAA,OAAO,EAAE8H,mBAAUE,GAVF;AAYjB/H,EAAAA,OAAO,EAAE6H,mBAAUE,GAZF;AAcjBnC,EAAAA,QAAQ,EAAEiC,mBAAUG,MAdH;AAgBjBxD,EAAAA,WAAW,EAAEqD,mBAAUI,MAhBN;AAkBjBlB,EAAAA,UAAU,EAAEc,mBAAUK,IAlBL;AAoBjB3B,EAAAA,uBAAuB,EAAEsB,mBAAUK,IApBlB;AAsBjB9E,EAAAA,aAAa,EAAEyE,mBAAUK,IAtBR;AAwBjBrC,EAAAA,YAAY,EAAEgC,mBAAUK,IAxBP;AA0BjBpF,EAAAA,UAAU,EAAE+E,mBAAUM,IA1BL;AA4BjBpF,EAAAA,cAAc,EAAE8E,mBAAUM,IA5BT;AA8BjB5F,EAAAA,aAAa,EAAEsF,mBAAUM,IA9BR;AAgCjB3F,EAAAA,qBAAqB,EAAEqF,mBAAUM,IAhChB;AAkCjBnB,EAAAA,WAAW,EAAEa,mBAAUM,IAlCN;AAoCjB5D,EAAAA,YAAY,EAAEsD,mBAAUE,GApCP;AAsCjBd,EAAAA,WAAW,EAAEY,mBAAUI,MAtCN;AAwCjBtF,EAAAA,kBAAkB,EAAEkF,mBAAUK,IAxCb;AA0CjBhB,EAAAA,YAAY,EAAEW,mBAAUK,IA1CP;AA4CjBjF,EAAAA,iBAAiB,EAAE4E,mBAAUK,IA5CZ;AA8CjB1C,EAAAA,eAAe,EAAEqC,mBAAUK,IA9CV;AAgDjBf,EAAAA,gBAAgB,EAAEU,mBAAUM,IAhDX;AAkDjBf,EAAAA,iBAAiB,EAAES,mBAAUM,IAlDZ;AAoDjBb,EAAAA,gBAAgB,EAAEO,mBAAUK,IApDX;AAsDjBX,EAAAA,iBAAiB,EAAEM,mBAAUK,IAtDZ;AAwDjBpB,EAAAA,WAAW,EAAEe,mBAAUO,SAAV,CAAoB,CAACP,mBAAUC,MAAX,EAAmBD,mBAAUG,MAA7B,EAAqCH,mBAAUQ,KAA/C,CAApB,CAxDI;AA0DjBhB,EAAAA,YAAY,EAAEQ,mBAAUG,MA1DP;AA4DjBR,EAAAA,mBAAmB,EAAEK,mBAAUS,OAAV,CAAkBT,mBAAUG,MAA5B,CA5DJ;AA8DjBlE,EAAAA,oCAAoC,EAAE+D,mBAAUK,IA9D/B;AAgEjBT,EAAAA,YAAY,EAAEI,mBAAUE,GAhEP;AAkEjB7G,EAAAA,iBAAiB,EAAE2G,mBAAUK;AAlEZ,C;AAHf7I,Q,CAwEGkJ,Y,GAAe;AACpBrH,EAAAA,iBAAiB,EAAE;AADC,C;eA6ST7B,Q","sourcesContent":["import React, {Component} from 'react';\nimport * as ReactNative from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate} from '../interface';\nimport styleConstructor from './style';\nimport Day from './day/basic';\nimport UnitDay from './day/period';\nimport MultiDotDay from './day/multi-dot';\nimport MultiPeriodDay from './day/multi-period';\nimport SingleDay from './day/custom';\nimport CalendarHeader from './header';\nimport shouldComponentUpdate from './updater';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport {SELECT_DATE_SLOT} from '../testIDs';\n\n\n//Fallback when RN version is < 0.44\nconst {View, ViewPropTypes} = ReactNative;\nconst viewPropTypes = ViewPropTypes || View.propTypes;\nconst EmptyArray = [];\n\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n  static displayName = 'Calendar';\n\n  static propTypes = {\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n    theme: PropTypes.object,\n    /** Collection of dates that have to be marked. Default = {} */\n    markedDates: PropTypes.object,\n    /** Specify style for calendar container element. Default = {} */\n    style: viewPropTypes.style,\n    /** Initially visible month. Default = Date() */\n    current: PropTypes.any,\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n    minDate: PropTypes.any,\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n    maxDate: PropTypes.any,\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n    firstDay: PropTypes.number,\n    /** Date marking style [simple/period/multi-dot/multi-period]. Default = 'simple' */\n    markingType: PropTypes.string,\n    /** Hide month navigation arrows. Default = false */\n    hideArrows: PropTypes.bool,\n    /** Display loading indicator. Default = false */\n    displayLoadingIndicator: PropTypes.bool,\n    /** Do not show days of other months in month page. Default = false */\n    hideExtraDays: PropTypes.bool,\n    /** Always show six weeks on each month. Default = false */\n    showSixWeeks: PropTypes.bool,\n    /** Handler which gets executed on day press. Default = undefined */\n    onDayPress: PropTypes.func,\n    /** Handler which gets executed on day long press. Default = undefined */\n    onDayLongPress: PropTypes.func,\n    /** Handler which gets executed when month changes in calendar. Default = undefined */\n    onMonthChange: PropTypes.func,\n    /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n    onVisibleMonthsChange: PropTypes.func,\n    /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n    renderArrow: PropTypes.func,\n    /** Provide custom day rendering component */\n    dayComponent: PropTypes.any,\n    /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    monthFormat: PropTypes.string,\n    /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n    disableMonthChange: PropTypes.bool,\n    /**  Hide day names. Default = false */\n    hideDayNames: PropTypes.bool,\n    /** Disable days by default. Default = false */\n    disabledByDefault: PropTypes.bool,\n    /** Show week numbers. Default = false */\n    showWeekNumbers: PropTypes.bool,\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n    onPressArrowLeft: PropTypes.func,\n    /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n    onPressArrowRight: PropTypes.func,\n    /** Disable left arrow. Default = false */\n    disableArrowLeft: PropTypes.bool,\n    /** Disable right arrow. Default = false */\n    disableArrowRight: PropTypes.bool,\n    /** Style passed to the header */\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n    webAriaLevel: PropTypes.number,\n    /** Apply custom disable color to selected day indexes */\n    disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n    /** Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates*/\n    disableAllTouchEventsForDisabledDays: PropTypes.bool,\n    /** Replace default month and year title with custom one. the function receive a date as parameter. */\n    renderHeader: PropTypes.any,\n    /** Enable the option to swipe between months. Default: false */\n    enableSwipeMonths: PropTypes.bool\n  };\n\n  static defaultProps = {\n    enableSwipeMonths: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(this.props.theme);\n    this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n\n    this.updateMonth = this.updateMonth.bind(this);\n    this.pressDay = this.pressDay.bind(this);\n    this.longPressDay = this.longPressDay.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate;\n  }\n\n  updateMonth(day, doNotTriggerListeners) {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n    this.setState({\n      currentMonth: day.clone()\n    }, () => {\n      if (!doNotTriggerListeners) {\n        const currMont = this.state.currentMonth.clone();\n        if (this.props.onMonthChange) {\n          this.props.onMonthChange(xdateToData(currMont));\n        }\n        if (this.props.onVisibleMonthsChange) {\n          this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n        }\n      }\n    });\n  }\n\n  _handleDayInteraction(date, interaction) {\n    const day = parseDate(date);\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n      const shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n      if (shouldUpdateMonth) {\n        this.updateMonth(day);\n      }\n      if (interaction) {\n        interaction(xdateToData(day));\n      }\n    }\n  }\n\n  pressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayPress);\n  }\n\n  longPressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayLongPress);\n  }\n\n  addMonth = (count) => {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  }\n\n  isDateNotInTheRange = (minDate, maxDate, date) => {\n    return (minDate && !dateutils.isGTE(date, minDate)) || (maxDate && !dateutils.isLTE(date, maxDate));\n  }\n\n  getAccessibilityLabel = (state, day) => {\n    const today = XDate.locales[XDate.defaultLocale].today;\n    const formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n    const isToday = state === 'today';\n    const markingLabel = this.getDateMarking(day);\n\n    if (formatAccessibilityLabel) {\n      return `${isToday ? today : ''} ${day.toString(formatAccessibilityLabel)} ${markingLabel}`;\n    }\n\n    return `${isToday ? 'today' : ''} ${day.toString('dddd d MMMM yyyy')} ${markingLabel}`;\n  }\n\n\n  renderDay(day, id) {\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    let state = '';\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if (this.isDateNotInTheRange(minDate, maxDate, day)) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n      return (<View key={id} style={{flex: 1}}/>);\n    }\n\n    const DayComp = this.getDayComponent();\n    const date = day.getDate();\n    const dateAsObject = xdateToData(day);\n    const accessibilityLabel = this.getAccessibilityLabel(state, day);\n\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\n        <DayComp\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\n          state={state}\n          theme={this.props.theme}\n          onPress={this.pressDay}\n          onLongPress={this.longPressDay}\n          date={dateAsObject}\n          marking={this.getDateMarking(day)}\n          accessibilityLabel={accessibilityLabel}\n          disableAllTouchEventsForDisabledDays={this.props.disableAllTouchEventsForDisabledDays}\n        >\n          {date}\n        </DayComp>\n      </View>\n    );\n  }\n\n  getMarkingLabel(day) {\n    let label = '';\n    const marking = this.getDateMarking(day);\n\n    if (marking.accessibilityLabel) {\n      return marking.accessibilityLabel;\n    }\n\n    if (marking.selected) {\n      label += 'selected ';\n      if (!marking.marked) {\n        label += 'You have no entries for this day ';\n      }\n    }\n    if (marking.marked) {\n      label += 'You have entries for this day ';\n    }\n    if (marking.startingDay) {\n      label += 'period start ';\n    }\n    if (marking.endingDay) {\n      label += 'period end ';\n    }\n    if (marking.disabled || marking.disableTouchEvent) {\n      label += 'disabled ';\n    }\n    return label;\n  }\n\n  getDayComponent() {\n    if (this.props.dayComponent) {\n      return this.props.dayComponent;\n    }\n\n    switch (this.props.markingType) {\n    case 'period':\n      return UnitDay;\n    case 'multi-dot':\n      return MultiDotDay;\n    case 'multi-period':\n      return MultiPeriodDay;\n    case 'custom':\n      return SingleDay;\n    default:\n      return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    if (!this.props.markedDates) {\n      return false;\n    }\n\n    const dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  onSwipe = (gestureName) => {\n    const {enableSwipeMonths} = this.props;\n    if (!enableSwipeMonths) {\n      return;\n    }\n\n    const {SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT} = swipeDirections;\n    switch (gestureName) {\n    case SWIPE_UP:\n    case SWIPE_DOWN:\n      break;\n    case SWIPE_LEFT:\n      this.onSwipeLeft();\n      break;\n    case SWIPE_RIGHT:\n      this.onSwipeRight();\n      break;\n    }\n  }\n\n  onSwipeLeft = () => {\n    this.header.onPressRight();\n  }\n\n  onSwipeRight = () => {\n    this.header.onPressLeft();\n  }\n\n  renderWeekNumber(weekNumber) {\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={`week-container-${weekNumber}`}>\n        <Day\n          key={`week-${weekNumber}`}\n          theme={this.props.theme}\n          marking={{disableTouchEvent: true}}\n          state='disabled'\n        >\n          {weekNumber}\n        </Day>\n      </View>\n    );\n  }\n\n  renderWeek(days, id) {\n    const week = [];\n    days.forEach((day, id2) => {\n      week.push(this.renderDay(day, id2));\n    }, this);\n\n    if (this.props.showWeekNumbers) {\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return (<View style={this.style.week} key={id}>{week}</View>);\n  }\n\n  render() {\n    const {currentMonth} = this.state;\n    const {firstDay, showSixWeeks, hideExtraDays} = this.props;\n    const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    const days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n\n    const weeks = [];\n    while (days.length) {\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    let indicator;\n    const current = parseDate(this.props.current);\n    if (current) {\n      const lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n      if (this.props.displayLoadingIndicator &&\n        !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    return (\n      <GestureRecognizer\n        onSwipe={(direction, state) => this.onSwipe(direction, state)}\n      >\n        <View\n          style={[this.style.container, this.props.style]}\n          accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n          importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          <CalendarHeader\n            testID={this.props.testID}\n            ref={c => this.header = c}\n            style={this.props.headerStyle}\n            theme={this.props.theme}\n            hideArrows={this.props.hideArrows}\n            month={this.state.currentMonth}\n            addMonth={this.addMonth}\n            showIndicator={indicator}\n            firstDay={this.props.firstDay}\n            showSixWeeks={this.props.showSixWeeks}\n            renderArrow={this.props.renderArrow}\n            monthFormat={this.props.monthFormat}\n            hideDayNames={this.props.hideDayNames}\n            weekNumbers={this.props.showWeekNumbers}\n            onPressArrowLeft={this.props.onPressArrowLeft}\n            onPressArrowRight={this.props.onPressArrowRight}\n            webAriaLevel={this.props.webAriaLevel}\n            disableArrowLeft={this.props.disableArrowLeft}\n            disableArrowRight={this.props.disableArrowRight}\n            disabledDaysIndexes={this.props.disabledDaysIndexes}\n            renderHeader={this.props.renderHeader}\n          />\n          <View style={this.style.monthView}>{weeks}</View>\n        </View>\n      </GestureRecognizer>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"script"}