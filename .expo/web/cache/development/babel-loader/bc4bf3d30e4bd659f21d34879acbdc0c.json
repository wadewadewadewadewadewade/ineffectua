{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SimpleStackScreen;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _CalendarEntry = _interopRequireDefault(require(\"../shared/CalendarEntry\"));\n\nvar _PainLogEntry = _interopRequireDefault(require(\"../shared/PainLogEntry\"));\n\nvar _Agenda = _interopRequireDefault(require(\"../shared/Agenda\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/SimpleStack.tsx\";\n\nvar scrollEnabled = _reactNative.Platform.select({\n  web: true,\n  default: false\n});\n\nvar CalendarEntryScreen = function CalendarEntryScreen(_ref) {\n  var _route$params$author, _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.replace('Agenda');\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Replace with feed\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.pop();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Pop screen\")), React.createElement(_CalendarEntry.default, {\n    author: {\n      name: (_route$params$author = (_route$params = route.params) == null ? void 0 : _route$params.author) != null ? _route$params$author : 'Unknown'\n    },\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AgendaScreen = function AgendaScreen(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate('PainLogEntry', {\n        date: Date.now()\n      });\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Navigate to album\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_Agenda.default, {\n    scrollEnabled: scrollEnabled,\n    date: Date.now(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar PainLogEntryScreen = function PainLogEntryScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.push('CalendarEntry', {\n        author: 'Babel fish'\n      });\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Push article\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.pop(2);\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Pop by 2\")), React.createElement(_PainLogEntry.default, {\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar SimpleStack = (0, _stack.createStackNavigator)();\n\nfunction SimpleStackScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n  return React.createElement(SimpleStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(SimpleStack.Screen, {\n    name: \"CalendarEntry\",\n    component: CalendarEntryScreen,\n    options: function options(_ref5) {\n      var _route$params$author2, _route$params2;\n\n      var route = _ref5.route;\n      return {\n        title: \"Article by \" + ((_route$params$author2 = (_route$params2 = route.params) == null ? void 0 : _route$params2.author) != null ? _route$params$author2 : 'Unknown')\n      };\n    },\n    initialParams: {\n      author: 'Gandalf'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"Agenda\",\n    component: _Agenda.default,\n    options: {\n      title: 'Feed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"PainLogEntry\",\n    component: PainLogEntryScreen,\n    options: {\n      title: 'Albums'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8\n  },\n  button: {\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/SimpleStack.tsx"],"names":["scrollEnabled","Platform","select","web","default","CalendarEntryScreen","navigation","route","styles","buttons","replace","button","pop","name","params","author","AgendaScreen","navigate","date","Date","now","goBack","PainLogEntryScreen","push","SimpleStack","SimpleStackScreen","React","useLayoutEffect","setOptions","headerShown","title","Agenda","StyleSheet","create","flexDirection","padding","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Platform, StyleSheet, ScrollView } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport type { ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\nimport PainLogEntry from '../shared/PainLogEntry';\nimport Agenda from '../shared/Agenda';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string } | undefined;\n  PainLogEntry: { date: number };\n  Agenda: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.replace('Agenda')}\n          style={styles.button}\n        >\n          Replace with feed\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.pop()}\n          style={styles.button}\n        >\n          Pop screen\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params?.author ?? 'Unknown' }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst AgendaScreen = ({\n  route,\n  navigation,\n}: StackScreenProps<SimpleStackParams, 'Agenda'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.navigate('PainLogEntry', { date: Date.now() })}\n          style={styles.button}\n        >\n          Navigate to album\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <Agenda scrollEnabled={scrollEnabled} date={Date.now()} />\n    </ScrollView>\n  );\n};\n\nconst PainLogEntryScreen = ({\n  navigation,\n}: StackScreenProps<SimpleStackParams, 'PainLogEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('CalendarEntry', { author: 'Babel fish' })}\n          style={styles.button}\n        >\n          Push article\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.pop(2)}\n          style={styles.button}\n        >\n          Pop by 2\n        </Button>\n      </View>\n      <PainLogEntry scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\nexport default function SimpleStackScreen({\n  navigation,\n}: StackScreenProps<ParamListBase>) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params?.author ?? 'Unknown'}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"Agenda\"\n        component={Agenda}\n        options={{ title: 'Feed' }}\n      />\n      <SimpleStack.Screen\n        name=\"PainLogEntry\"\n        component={PainLogEntryScreen}\n        options={{ title: 'Albums' }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}