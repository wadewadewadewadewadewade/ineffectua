{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AUTH_CONTEXT_ERROR = 'Authentication context not found. Have your wrapped your components with AuthContext.Consumer?';\n\nvar _React$useReducer = _react.default.useReducer(function (prevState, action) {\n  switch (action.type) {\n    case 'RESTORE_TOKEN':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userToken: action.token,\n        isLoading: false\n      });\n\n    case 'SIGN_IN':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isSignout: false,\n        userToken: action.token\n      });\n\n    case 'SIGN_OUT':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isSignout: true,\n        userToken: null\n      });\n  }\n}, {\n  isLoading: true,\n  isSignout: false,\n  userToken: null\n}),\n    _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n    state = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n\nvar AuthContext = _react.default.createContext({\n  user: null,\n  signIn: function signIn(email, password) {\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      if (user !== null) {\n        dispatch({\n          type: 'SIGN_IN',\n          token: user.user\n        });\n      }\n    });\n  },\n  signOut: function signOut() {\n    return firebase.auth().signOut().then(function () {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    });\n  }\n});\n\nvar _default = AuthContext;\nexports.default = _default;","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/shared/AuthContext.ts"],"names":["AUTH_CONTEXT_ERROR","React","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","AuthContext","createContext","user","signIn","email","password","firebase","auth","signInWithEmailAndPassword","then","signOut"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,kBAAkB,GACtB,gGADF;;wBAc0BC,eAAMC,UAAN,CACxB,UAACC,SAAD,EAAYC,MAAZ,EAAuB;AACrB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,6CACKF,SADL;AAEEG,QAAAA,SAAS,EAAEF,MAAM,CAACG,KAFpB;AAGEC,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAK,SAAL;AACE,6CACKL,SADL;AAEEM,QAAAA,SAAS,EAAE,KAFb;AAGEH,QAAAA,SAAS,EAAEF,MAAM,CAACG;AAHpB;;AAKF,SAAK,UAAL;AACE,6CACKJ,SADL;AAEEM,QAAAA,SAAS,EAAE,IAFb;AAGEH,QAAAA,SAAS,EAAE;AAHb;AAdJ;AAoBD,CAtBuB,EAuBxB;AACEE,EAAAA,SAAS,EAAE,IADb;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEH,EAAAA,SAAS,EAAE;AAHb,CAvBwB,C;;IAAnBI,K;IAAOC,Q;;AA8Bd,IAAMC,WAAW,GAAGX,eAAMY,aAAN,CAIjB;AACDC,EAAAA,IAAI,EAAE,IADL;AAEDC,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAgBC,QAAhB;AAAA,WAAqCC,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,EAAkDC,QAAlD,EAA4DI,IAA5D,CAAiE,UAAAP,IAAI,EAAI;AACpH,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBH,QAAAA,QAAQ,CAAC;AAAEN,UAAAA,IAAI,EAAE,SAAR;AAAmBE,UAAAA,KAAK,EAAEO,IAAI,CAACA;AAA/B,SAAD,CAAR;AACD;AACF,KAJ4C,CAArC;AAAA,GAFP;AAODQ,EAAAA,OAAO,EAAE;AAAA,WAAMJ,QAAQ,CAACC,IAAT,GAAgBG,OAAhB,GAA0BD,IAA1B,CAA+B;AAAA,aAAMV,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAA/B,CAAN;AAAA;AAPR,CAJiB,CAApB;;eAceO,W","sourcesContent":["import React from 'react';\nimport * as firebase from 'firebase';\n\nconst AUTH_CONTEXT_ERROR =\n  'Authentication context not found. Have your wrapped your components with AuthContext.Consumer?';\n\ntype State = {\n  isLoading: boolean;\n  isSignout: boolean;\n  userToken: null | firebase.User;\n};\n\ntype Action =\n  | { type: 'RESTORE_TOKEN'; token: null | firebase.User }\n  | { type: 'SIGN_IN'; token: null | firebase.User }\n  | { type: 'SIGN_OUT' };\n\nconst [state, dispatch] = React.useReducer<React.Reducer<State, Action>>(\n  (prevState, action) => {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'SIGN_IN':\n        return {\n          ...prevState,\n          isSignout: false,\n          userToken: action.token,\n        };\n      case 'SIGN_OUT':\n        return {\n          ...prevState,\n          isSignout: true,\n          userToken: null,\n        };\n    }\n  },\n  {\n    isLoading: true,\n    isSignout: false,\n    userToken: null,\n  }\n);\n\nconst AuthContext = React.createContext<{\n  user: null | firebase.User;\n  signIn: (email: string, password: string) => Promise<string | void>;\n  signOut: () => Promise<void>;\n}>({\n  user: null,\n  signIn: (email: string, password: string) => firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n    if (user !== null) {\n      dispatch({ type: 'SIGN_IN', token: user.user })\n    }\n  }),\n  signOut: () => firebase.auth().signOut().then(() => dispatch({ type: 'SIGN_OUT' }))\n});\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"script"}