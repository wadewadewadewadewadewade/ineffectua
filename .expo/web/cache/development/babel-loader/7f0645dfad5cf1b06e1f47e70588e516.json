{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar ReactNative = _interopRequireWildcard(require(\"react-native\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _interface = require(\"../interface\");\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _calendarList = _interopRequireDefault(require(\"../calendar-list\"));\n\nvar _reservationList = _interopRequireDefault(require(\"./reservation-list\"));\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _input = require(\"../input\");\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _jsxFileName = \"/home/wade/projects/ineffectua/node_modules/react-native-calendars/src/agenda/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\nvar Text = ReactNative.Text,\n    View = ReactNative.View,\n    Dimensions = ReactNative.Dimensions,\n    Animated = ReactNative.Animated,\n    ViewPropTypes = ReactNative.ViewPropTypes;\nvar viewPropTypes = ViewPropTypes || View.propTypes;\n\nvar AgendaView = function (_Component) {\n  (0, _inherits2.default)(AgendaView, _Component);\n\n  var _super = _createSuper(AgendaView);\n\n  function AgendaView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AgendaView);\n    _this = _super.call(this, props);\n\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n\n    _this.setScrollPadPosition = function (y, animated) {\n      if (_this.scrollPad.scrollTo) {\n        _this.scrollPad.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        _this.scrollPad.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n\n    _this.styles = (0, _style.default)(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstResevationLoad: false,\n      selectedDay: (0, _interface.parseDate)(_this.props.selected) || (0, _xdate.default)(true),\n      topDay: (0, _interface.parseDate)(_this.props.selected) || (0, _xdate.default)(true)\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.onLayout = _this.onLayout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onTouchStart = _this.onTouchStart.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onTouchEnd = _this.onTouchEnd.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onStartDrag = _this.onStartDrag.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onSnapAfterDrag = _this.onSnapAfterDrag.bind((0, _assertThisInitialized2.default)(_this));\n    _this.generateMarkings = _this.generateMarkings.bind((0, _assertThisInitialized2.default)(_this));\n    _this.knobTracker = new _input.VelocityTracker();\n\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AgendaView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      if (props.items) {\n        this.setState({\n          firstResevationLoad: false\n        });\n      } else {\n        this.loadReservations(props);\n      }\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(event) {\n      this.viewHeight = event.nativeEvent.layout.height;\n      this.viewWidth = event.nativeEvent.layout.width;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart() {\n      this.headerState = 'touched';\n\n      if (this.knob) {\n        this.knob.setNativeProps({\n          style: {\n            opacity: 0.5\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd() {\n      if (this.knob) {\n        this.knob.setNativeProps({\n          style: {\n            opacity: 1\n          }\n        });\n      }\n\n      if (this.headerState === 'touched') {\n        this.setScrollPadPosition(0, true);\n        this.enableCalendarScrolling();\n      }\n\n      this.headerState = 'idle';\n    }\n  }, {\n    key: \"onStartDrag\",\n    value: function onStartDrag() {\n      this.headerState = 'dragged';\n      this.knobTracker.reset();\n    }\n  }, {\n    key: \"onSnapAfterDrag\",\n    value: function onSnapAfterDrag(e) {\n      this.onTouchEnd();\n      var currentY = e.nativeEvent.contentOffset.y;\n      this.knobTracker.add(currentY);\n      var projectedY = currentY + this.knobTracker.estimateSpeed() * 250;\n      var maxY = this.initialScrollPadPosition();\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n      this.setScrollPadPosition(snapY, true);\n\n      if (snapY === 0) {\n        this.enableCalendarScrolling();\n      }\n    }\n  }, {\n    key: \"onVisibleMonthsChange\",\n    value: function onVisibleMonthsChange(months) {\n      var _this2 = this;\n\n      if (this.props.onVisibleMonthsChange) {\n        this.props.onVisibleMonthsChange(months);\n      }\n\n      if (this.props.items && !this.state.firstResevationLoad) {\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = setTimeout(function () {\n          if (_this2.props.loadItemsForMonth && _this2._isMounted) {\n            _this2.props.loadItemsForMonth(months[0]);\n          }\n        }, 200);\n      }\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this3 = this;\n\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstResevationLoad) {\n        this.setState({\n          firstResevationLoad: true\n        }, function () {\n          if (_this3.props.loadItemsForMonth) {\n            _this3.props.loadItemsForMonth((0, _interface.xdateToData)(_this3.state.selectedDay));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      this.setState({\n        calendarScrollable: true\n      });\n\n      if (this.props.onCalendarToggled) {\n        this.props.onCalendarToggled(true);\n      }\n\n      this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"_chooseDayFromCalendar\",\n    value: function _chooseDayFromCalendar(d) {\n      this.chooseDay(d, !this.state.calendarScrollable);\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var day = (0, _interface.parseDate)(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n\n      if (this.props.onCalendarToggled) {\n        this.props.onCalendarToggled(false);\n      }\n\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n      if (this.props.loadItemsForMonth) {\n        this.props.loadItemsForMonth((0, _interface.xdateToData)(day));\n      }\n\n      if (this.props.onDayPress) {\n        this.props.onDayPress((0, _interface.xdateToData)(day));\n      }\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var _this4 = this;\n\n      return _react.default.createElement(_reservationList.default, {\n        onScrollBeginDrag: this.props.onScrollBeginDrag,\n        onScrollEndDrag: this.props.onScrollEndDrag,\n        onMomentumScrollBegin: this.props.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.props.onMomentumScrollEnd,\n        refreshControl: this.props.refreshControl,\n        refreshing: this.props.refreshing,\n        onRefresh: this.props.onRefresh,\n        rowHasChanged: this.props.rowHasChanged,\n        renderItem: this.props.renderItem,\n        renderDay: this.props.renderDay,\n        renderEmptyDate: this.props.renderEmptyDate,\n        reservations: this.props.items,\n        selectedDay: this.state.selectedDay,\n        renderEmptyData: this.props.renderEmptyData,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange.bind(this),\n        onScroll: function onScroll() {},\n        ref: function ref(c) {\n          return _this4.list = c;\n        },\n        theme: this.props.theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"onDayChange\",\n    value: function onDayChange(day) {\n      var newDate = (0, _interface.parseDate)(day);\n\n      var withAnimation = _dateutils.default.sameMonth(newDate, this.state.selectedDay);\n\n      this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\n      this.setState({\n        selectedDay: (0, _interface.parseDate)(day)\n      });\n\n      if (this.props.onDayChange) {\n        this.props.onDayChange((0, _interface.xdateToData)(newDate));\n      }\n    }\n  }, {\n    key: \"generateMarkings\",\n    value: function generateMarkings() {\n      var _this5 = this;\n\n      var markings = this.props.markedDates;\n\n      if (!markings) {\n        markings = {};\n        Object.keys(this.props.items || {}).forEach(function (key) {\n          if (_this5.props.items[key] && _this5.props.items[key].length) {\n            markings[key] = {\n              marked: true\n            };\n          }\n        });\n      }\n\n      var key = this.state.selectedDay.toString('yyyy-MM-dd');\n      return _objectSpread(_objectSpread({}, markings), {}, (0, _defineProperty2.default)({}, key, _objectSpread(_objectSpread({}, markings[key] || {}), {\n        selected: true\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var agendaHeight = this.initialScrollPadPosition();\n\n      var weekDaysNames = _dateutils.default.weekDayNames(this.props.firstDay);\n\n      var weekdaysStyle = [this.styles.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.styles.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n\n      var shouldAllowDragging = !this.props.hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        position: 'absolute',\n        width: 80,\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition,\n        left: (this.viewWidth - 80) / 2\n      };\n\n      var knob = _react.default.createElement(View, {\n        style: this.styles.knobContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }\n      });\n\n      if (!this.props.hideKnob) {\n        var knobView = this.props.renderKnob ? this.props.renderKnob() : _react.default.createElement(View, {\n          style: this.styles.knob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 75\n          }\n        });\n        knob = this.state.calendarScrollable ? null : _react.default.createElement(View, {\n          style: this.styles.knobContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(View, {\n          ref: function ref(c) {\n            return _this6.knob = c;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 11\n          }\n        }, knobView));\n      }\n\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      return _react.default.createElement(View, {\n        testID: this.props.testID,\n        onLayout: this.onLayout,\n        style: [this.props.style, {\n          flex: 1,\n          overflow: 'hidden'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(View, {\n        style: this.styles.reservations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }\n      }, this.renderReservations()), _react.default.createElement(Animated.View, {\n        style: headerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(Animated.View, {\n        style: {\n          flex: 1,\n          transform: [{\n            translateY: contentTranslate\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_calendarList.default, {\n        onLayout: function onLayout() {\n          _this6.calendar.scrollToDay(_this6.state.selectedDay.clone(), _this6.calendarOffset(), false);\n        },\n        calendarWidth: this.viewWidth,\n        theme: this.props.theme,\n        onVisibleMonthsChange: this.onVisibleMonthsChange.bind(this),\n        ref: function ref(c) {\n          return _this6.calendar = c;\n        },\n        minDate: this.props.minDate,\n        maxDate: this.props.maxDate,\n        current: this.currentMonth,\n        markedDates: this.generateMarkings(),\n        markingType: this.props.markingType,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        onDayPress: this._chooseDayFromCalendar.bind(this),\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        firstDay: this.props.firstDay,\n        monthFormat: this.props.monthFormat,\n        pastScrollRange: this.props.pastScrollRange,\n        futureScrollRange: this.props.futureScrollRange,\n        dayComponent: this.props.dayComponent,\n        disabledByDefault: this.props.disabledByDefault,\n        displayLoadingIndicator: this.props.displayLoadingIndicator,\n        showWeekNumbers: this.props.showWeekNumbers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }\n      })), knob), _react.default.createElement(Animated.View, {\n        style: weekdaysStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 9\n        }\n      }, this.props.showWeekNumbers && _react.default.createElement(Text, {\n        allowFontScaling: false,\n        style: this.styles.weekday,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 42\n        }\n      }), weekDaysNames.map(function (day, index) {\n        return _react.default.createElement(Text, {\n          allowFontScaling: false,\n          key: day + index,\n          style: _this6.styles.weekday,\n          numberOfLines: 1,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }\n        }, day);\n      })), _react.default.createElement(Animated.ScrollView, {\n        ref: function ref(_ref2) {\n          return _this6.scrollPad = _ref2;\n        },\n        overScrollMode: \"never\",\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        style: scrollPadStyle,\n        scrollEventThrottle: 8,\n        scrollsToTop: false,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        onScrollBeginDrag: this.onStartDrag,\n        onScrollEndDrag: this.onSnapAfterDrag,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(View, {\n        testID: _testIDs.AGENDA_CALENDAR_KNOB,\n        style: {\n          height: agendaHeight + KNOB_HEIGHT\n        },\n        onLayout: this.onScrollPadLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return AgendaView;\n}(_react.Component);\n\nexports.default = AgendaView;\nAgendaView.displayName = 'Agenda';\nAgendaView.propTypes = {\n  theme: _propTypes.default.object,\n  style: viewPropTypes.style,\n  items: _propTypes.default.object,\n  loadItemsForMonth: _propTypes.default.func,\n  onCalendarToggled: _propTypes.default.func,\n  onDayPress: _propTypes.default.func,\n  onDaychange: _propTypes.default.func,\n  renderItem: _propTypes.default.func,\n  renderDay: _propTypes.default.func,\n  renderKnob: _propTypes.default.func,\n  renderEmptyDay: _propTypes.default.func,\n  renderEmptyData: _propTypes.default.func,\n  rowHasChanged: _propTypes.default.func,\n  pastScrollRange: _propTypes.default.number,\n  futureScrollRange: _propTypes.default.number,\n  selected: _propTypes.default.any,\n  minDate: _propTypes.default.any,\n  maxDate: _propTypes.default.any,\n  firstDay: _propTypes.default.number,\n  markedDates: _propTypes.default.object,\n  markingType: _propTypes.default.string,\n  hideKnob: _propTypes.default.bool,\n  monthFormat: _propTypes.default.string,\n  refreshControl: _propTypes.default.element,\n  onRefresh: _propTypes.default.func,\n  refreshing: _propTypes.default.bool,\n  displayLoadingIndicator: _propTypes.default.bool,\n  onScrollBeginDrag: _propTypes.default.func,\n  onScrollEndDrag: _propTypes.default.func,\n  onMomentumScrollBegin: _propTypes.default.func,\n  onMomentumScrollEnd: _propTypes.default.func\n};","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/react-native-calendars/src/agenda/index.js"],"names":["HEADER_HEIGHT","KNOB_HEIGHT","Text","ReactNative","View","Dimensions","Animated","ViewPropTypes","viewPropTypes","propTypes","AgendaView","props","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","scrollPad","scrollTo","x","getNode","onScrollPadLayout","setTimeout","setState","calendarIsReady","styles","theme","windowSize","get","height","viewWidth","width","scrollTimeout","undefined","headerState","state","scrollY","Value","calendarScrollable","firstResevationLoad","selectedDay","selected","topDay","currentMonth","clone","onLayout","bind","onTouchStart","onTouchEnd","onStartDrag","onSnapAfterDrag","generateMarkings","knobTracker","VelocityTracker","addListener","value","add","_isMounted","loadReservations","removeAllListeners","items","event","nativeEvent","layout","forceUpdate","knob","setNativeProps","style","opacity","enableCalendarScrolling","reset","e","currentY","contentOffset","projectedY","estimateSpeed","maxY","snapY","months","onVisibleMonthsChange","clearTimeout","loadItemsForMonth","Object","keys","length","onCalendarToggled","calendar","scrollToDay","calendarOffset","d","chooseDay","optimisticScroll","day","onDayPress","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","refreshControl","refreshing","onRefresh","rowHasChanged","renderItem","renderDay","renderEmptyDate","renderEmptyData","onDayChange","c","list","newDate","withAnimation","dateutils","sameMonth","markings","markedDates","forEach","key","marked","toString","agendaHeight","weekDaysNames","weekDayNames","firstDay","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","shouldAllowDragging","hideKnob","scrollPadPosition","scrollPadStyle","position","top","left","knobContainer","knobView","renderKnob","shouldHideExtraDays","hideExtraDays","testID","flex","overflow","reservations","renderReservations","minDate","maxDate","markingType","removeClippedSubviews","_chooseDayFromCalendar","monthFormat","pastScrollRange","futureScrollRange","dayComponent","disabledByDefault","displayLoadingIndicator","showWeekNumbers","weekday","map","index","ref","useNativeDriver","AGENDA_CALENDAR_KNOB","Component","displayName","PropTypes","object","func","onDaychange","renderEmptyDay","number","any","string","bool","element"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as ReactNative from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport {parseDate, xdateToData} from '../interface';\nimport dateutils from '../dateutils';\nimport CalendarList from '../calendar-list';\nimport ReservationsList from './reservation-list';\nimport styleConstructor from './style';\nimport {VelocityTracker} from '../input';\nimport {AGENDA_CALENDAR_KNOB} from '../testIDs';\n\n\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n// Fallback when RN version is < 0.44\nconst {Text, View, Dimensions, Animated, ViewPropTypes} = ReactNative;\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/agenda.gif\n */\nexport default class AgendaView extends Component {\n  static displayName = 'Agenda';\n\n  static propTypes = {\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n    theme: PropTypes.object,\n    /** agenda container style */\n    style: viewPropTypes.style,\n    /** the list of items that have to be displayed in agenda. If you want to render item as empty date\n    the value of date key has to be an empty array []. If there exists no value for date key it is\n    considered that the date in question is not yet loaded */\n    items: PropTypes.object,\n    /** callback that gets called when items for a certain month should be loaded (month became visible) */\n    loadItemsForMonth: PropTypes.func,\n    /** callback that fires when the calendar is opened or closed */\n    onCalendarToggled: PropTypes.func,\n    /** callback that gets called on day press */\n    onDayPress: PropTypes.func,\n    /** callback that gets called when day changes while scrolling agenda list */\n    onDaychange: PropTypes.func,\n    /** specify how each item should be rendered in agenda */\n    renderItem: PropTypes.func,\n    /** specify how each date should be rendered. day can be undefined if the item is not first in that day. */\n    renderDay: PropTypes.func,\n    /** specify how agenda knob should look like */\n    renderKnob: PropTypes.func,\n    /** specify how empty date content with no items should be rendered */\n    renderEmptyDay: PropTypes.func,\n    /** specify what should be rendered instead of ActivityIndicator */\n    renderEmptyData: PropTypes.func,\n    /** specify your item comparison function for increased performance */\n    rowHasChanged: PropTypes.func,\n    /** Max amount of months allowed to scroll to the past. Default = 50 */\n    pastScrollRange: PropTypes.number,\n    /** Max amount of months allowed to scroll to the future. Default = 50 */\n    futureScrollRange: PropTypes.number,\n    /** initially selected day */\n    selected: PropTypes.any,\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n    minDate: PropTypes.any,\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n    maxDate: PropTypes.any,\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n    firstDay: PropTypes.number,\n    /** Collection of dates that have to be marked. Default = items */\n    markedDates: PropTypes.object,\n    /** Optional marking type if custom markedDates are provided */\n    markingType: PropTypes.string,/*\n    /** Hide knob button. Default = false */\n    hideKnob: PropTypes.bool,\n    /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    monthFormat: PropTypes.string,\n    /** A RefreshControl component, used to provide pull-to-refresh functionality for the ScrollView. */\n    refreshControl: PropTypes.element,\n    /** If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make sure to also set the refreshing prop correctly. */\n    onRefresh: PropTypes.func,\n    /** Set this true while waiting for new data from a refresh. */\n    refreshing: PropTypes.bool,\n    /** Display loading indicator. Default = false */\n    displayLoadingIndicator: PropTypes.bool,\n    /** Called when the user begins dragging the agenda list. **/\n    onScrollBeginDrag: PropTypes.func,\n    /** Called when the user stops dragging the agenda list. **/\n    onScrollEndDrag: PropTypes.func,\n    /** Called when the momentum scroll starts for the agenda list. **/\n    onMomentumScrollBegin: PropTypes.func,\n    /** Called when the momentum scroll stops for the agenda list. **/\n    onMomentumScrollEnd: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.styles = styleConstructor(props.theme);\n\n    const windowSize = Dimensions.get('window');\n    this.viewHeight = windowSize.height;\n    this.viewWidth = windowSize.width;\n    this.scrollTimeout = undefined;\n    this.headerState = 'idle';\n\n    this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstResevationLoad: false,\n      selectedDay: parseDate(this.props.selected) || XDate(true),\n      topDay: parseDate(this.props.selected) || XDate(true)\n    };\n\n    this.currentMonth = this.state.selectedDay.clone();\n    this.onLayout = this.onLayout.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onStartDrag = this.onStartDrag.bind(this);\n    this.onSnapAfterDrag = this.onSnapAfterDrag.bind(this);\n    this.generateMarkings = this.generateMarkings.bind(this);\n    this.knobTracker = new VelocityTracker();\n    this.state.scrollY.addListener(({value}) => this.knobTracker.add(value));\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.loadReservations(this.props);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.state.scrollY.removeAllListeners();\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    if (props.items) {\n      this.setState({\n        firstResevationLoad: false\n      });\n    } else {\n      this.loadReservations(props);\n    }\n  }\n\n  calendarOffset() {\n    return 96 - (this.viewHeight / 2);\n  }\n\n  initialScrollPadPosition = () => {\n    return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n  }\n\n  setScrollPadPosition = (y, animated) => {\n    if (this.scrollPad.scrollTo) {\n      this.scrollPad.scrollTo({x: 0, y, animated});\n    } else {\n      // Support for RN O.61 (Expo 37)\n      this.scrollPad.getNode().scrollTo({x: 0, y, animated});\n    }\n  }\n\n  onScrollPadLayout = () => {\n    // When user touches knob, the actual component that receives touch events is a ScrollView.\n    // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n    // scroll position actually changes (it would stay at 0, when scrolled to the top).\n    this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n    // delay rendering calendar in full height because otherwise it still flickers sometimes\n    setTimeout(() => this.setState({calendarIsReady: true}), 0);\n  }\n\n  onLayout(event) {\n    this.viewHeight = event.nativeEvent.layout.height;\n    this.viewWidth = event.nativeEvent.layout.width;\n    this.forceUpdate();\n  }\n\n  onTouchStart() {\n    this.headerState = 'touched';\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 0.5}});\n    }\n  }\n\n  onTouchEnd() {\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 1}});\n    }\n\n    if (this.headerState === 'touched') {\n      this.setScrollPadPosition(0, true);\n      this.enableCalendarScrolling();\n    }\n\n    this.headerState = 'idle';\n  }\n\n  onStartDrag() {\n    this.headerState = 'dragged';\n    this.knobTracker.reset();\n  }\n\n  onSnapAfterDrag(e) {\n    // on Android onTouchEnd is not called if dragging was started\n    this.onTouchEnd();\n    const currentY = e.nativeEvent.contentOffset.y;\n    this.knobTracker.add(currentY);\n    const projectedY = currentY + this.knobTracker.estimateSpeed() * 250/*ms*/;\n    const maxY = this.initialScrollPadPosition();\n    const snapY = (projectedY > maxY / 2) ? maxY : 0;\n    this.setScrollPadPosition(snapY, true);\n\n    if (snapY === 0) {\n      this.enableCalendarScrolling();\n    }\n  }\n\n  onVisibleMonthsChange(months) {\n    if (this.props.onVisibleMonthsChange) {\n      this.props.onVisibleMonthsChange(months);\n    }\n    if (this.props.items && !this.state.firstResevationLoad) {\n      clearTimeout(this.scrollTimeout);\n      this.scrollTimeout = setTimeout(() => {\n        if (this.props.loadItemsForMonth && this._isMounted) {\n          this.props.loadItemsForMonth(months[0]);\n        }\n      }, 200);\n    }\n  }\n\n  loadReservations(props) {\n    if ((!props.items || !Object.keys(props.items).length) && !this.state.firstResevationLoad) {\n      this.setState({\n        firstResevationLoad: true\n      }, () => {\n        if (this.props.loadItemsForMonth) {\n          this.props.loadItemsForMonth(xdateToData(this.state.selectedDay));\n        }\n      });\n    }\n  }\n\n  enableCalendarScrolling() {\n    this.setState({\n      calendarScrollable: true\n    });\n\n    if (this.props.onCalendarToggled) {\n      this.props.onCalendarToggled(true);\n    }\n    // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n    // Otherwise the month after current one or before current one remains invisible.\n    // The problem is caused by overflow: 'hidden' style, which we need for dragging\n    // to be performant.\n    // Another working solution for this bug would be to set removeClippedSubviews={false}\n    // in CalendarList listView, but that might impact performance when scrolling\n    // month list in expanded CalendarList.\n    // Further info https://github.com/facebook/react-native/issues/1831\n    this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n  }\n\n  _chooseDayFromCalendar(d) {\n    this.chooseDay(d, !this.state.calendarScrollable);\n  }\n\n  chooseDay(d, optimisticScroll) {\n    const day = parseDate(d);\n\n    this.setState({\n      calendarScrollable: false,\n      selectedDay: day.clone()\n    });\n\n    if (this.props.onCalendarToggled) {\n      this.props.onCalendarToggled(false);\n    }\n\n    if (!optimisticScroll) {\n      this.setState({\n        topDay: day.clone()\n      });\n    }\n\n    this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n    this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n    if (this.props.loadItemsForMonth) {\n      this.props.loadItemsForMonth(xdateToData(day));\n    }\n\n    if (this.props.onDayPress) {\n      this.props.onDayPress(xdateToData(day));\n    }\n  }\n\n  renderReservations() {\n    return (\n      <ReservationsList\n        onScrollBeginDrag={this.props.onScrollBeginDrag}\n        onScrollEndDrag={this.props.onScrollEndDrag}\n        onMomentumScrollBegin={this.props.onMomentumScrollBegin}\n        onMomentumScrollEnd={this.props.onMomentumScrollEnd}\n        refreshControl={this.props.refreshControl}\n        refreshing={this.props.refreshing}\n        onRefresh={this.props.onRefresh}\n        rowHasChanged={this.props.rowHasChanged}\n        renderItem={this.props.renderItem}\n        renderDay={this.props.renderDay}\n        renderEmptyDate={this.props.renderEmptyDate}\n        reservations={this.props.items}\n        selectedDay={this.state.selectedDay}\n        renderEmptyData={this.props.renderEmptyData}\n        topDay={this.state.topDay}\n        onDayChange={this.onDayChange.bind(this)}\n        onScroll={() => { }}\n        ref={(c) => this.list = c}\n        theme={this.props.theme}\n      />\n    );\n  }\n\n  onDayChange(day) {\n    const newDate = parseDate(day);\n    const withAnimation = dateutils.sameMonth(newDate, this.state.selectedDay);\n\n    this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\n    this.setState({\n      selectedDay: parseDate(day)\n    });\n\n    if (this.props.onDayChange) {\n      this.props.onDayChange(xdateToData(newDate));\n    }\n  }\n\n  generateMarkings() {\n    let markings = this.props.markedDates;\n\n    if (!markings) {\n      markings = {};\n      Object.keys(this.props.items || {}).forEach(key => {\n        if (this.props.items[key] && this.props.items[key].length) {\n          markings[key] = {marked: true};\n        }\n      });\n    }\n\n    const key = this.state.selectedDay.toString('yyyy-MM-dd');\n    return {...markings, [key]: {...(markings[key] || {}), ...{selected: true}}};\n  }\n\n  render() {\n    const agendaHeight = this.initialScrollPadPosition();\n    const weekDaysNames = dateutils.weekDayNames(this.props.firstDay);\n\n    const weekdaysStyle = [this.styles.weekdays, {\n      opacity: this.state.scrollY.interpolate({\n        inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n      }),\n      transform: [{\n        translateY: this.state.scrollY.interpolate({\n          inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n          outputRange: [-HEADER_HEIGHT, 0],\n          extrapolate: 'clamp'\n        })\n      }]\n    }];\n\n    const headerTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [agendaHeight, 0],\n      extrapolate: 'clamp'\n    });\n\n    const contentTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [0, agendaHeight / 2],\n      extrapolate: 'clamp'\n    });\n\n    const headerStyle = [\n      this.styles.header,\n      {bottom: agendaHeight, transform: [{translateY: headerTranslate}]}\n    ];\n\n    if (!this.state.calendarIsReady) {\n      // limit header height until everything is setup for calendar dragging\n      headerStyle.push({height: 0});\n      // fill header with appStyle.calendarBackground background to reduce flickering\n      weekdaysStyle.push({height: HEADER_HEIGHT});\n    }\n\n    const shouldAllowDragging = !this.props.hideKnob && !this.state.calendarScrollable;\n    const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n\n    const scrollPadStyle = {\n      position: 'absolute',\n      width: 80,\n      height: KNOB_HEIGHT,\n      top: scrollPadPosition,\n      left: (this.viewWidth - 80) / 2\n    };\n\n    let knob = (<View style={this.styles.knobContainer}/>);\n\n    if (!this.props.hideKnob) {\n      const knobView = this.props.renderKnob ? this.props.renderKnob() : (<View style={this.styles.knob}/>);\n      knob = this.state.calendarScrollable ? null : (\n        <View style={this.styles.knobContainer}>\n          <View ref={(c) => this.knob = c}>{knobView}</View>\n        </View>\n      );\n    }\n    const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n\n    return (\n      <View testID={this.props.testID} onLayout={this.onLayout} style={[this.props.style, {flex: 1, overflow: 'hidden'}]}>\n        <View style={this.styles.reservations}>\n          {this.renderReservations()}\n        </View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={{flex: 1, transform: [{translateY: contentTranslate}]}}>\n            <CalendarList\n              onLayout={() => {\n                this.calendar.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n              }}\n              calendarWidth={this.viewWidth}\n              theme={this.props.theme}\n              onVisibleMonthsChange={this.onVisibleMonthsChange.bind(this)}\n              ref={(c) => this.calendar = c}\n              minDate={this.props.minDate}\n              maxDate={this.props.maxDate}\n              current={this.currentMonth}\n              markedDates={this.generateMarkings()}\n              markingType={this.props.markingType}\n              removeClippedSubviews={this.props.removeClippedSubviews}\n              onDayPress={this._chooseDayFromCalendar.bind(this)}\n              scrollEnabled={this.state.calendarScrollable}\n              hideExtraDays={shouldHideExtraDays}\n              firstDay={this.props.firstDay}\n              monthFormat={this.props.monthFormat}\n              pastScrollRange={this.props.pastScrollRange}\n              futureScrollRange={this.props.futureScrollRange}\n              dayComponent={this.props.dayComponent}\n              disabledByDefault={this.props.disabledByDefault}\n              displayLoadingIndicator={this.props.displayLoadingIndicator}\n              showWeekNumbers={this.props.showWeekNumbers}\n            />\n          </Animated.View>\n          {knob}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {this.props.showWeekNumbers && <Text allowFontScaling={false} style={this.styles.weekday} numberOfLines={1}></Text>}\n          {weekDaysNames.map((day, index) => (\n            <Text allowFontScaling={false} key={day + index} style={this.styles.weekday} numberOfLines={1}>{day}</Text>\n          ))}\n        </Animated.View>\n        <Animated.ScrollView\n          ref={ref => this.scrollPad = ref}\n          overScrollMode='never'\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          style={scrollPadStyle}\n          scrollEventThrottle={8}\n          scrollsToTop={false}\n          onTouchStart={this.onTouchStart}\n          onTouchEnd={this.onTouchEnd}\n          onScrollBeginDrag={this.onStartDrag}\n          onScrollEndDrag={this.onSnapAfterDrag}\n          onScroll={Animated.event(\n            [{nativeEvent: {contentOffset: {y: this.state.scrollY}}}],\n            {useNativeDriver: true}\n          )}\n        >\n          <View\n            testID={AGENDA_CALENDAR_KNOB}\n            style={{height: agendaHeight + KNOB_HEIGHT}}\n            onLayout={this.onScrollPadLayout}\n          />\n        </Animated.ScrollView>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}