{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SimpleStackScreen;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _CalendarEntry = _interopRequireDefault(require(\"../shared/CalendarEntry\"));\n\nvar _PainLogEntry = _interopRequireDefault(require(\"../shared/PainLogEntry\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/LinkComponent.tsx\";\n\nvar scrollEnabled = _reactNative.Platform.select({\n  web: true,\n  default: false\n});\n\nvar LinkButton = function LinkButton(_ref) {\n  var to = _ref.to,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"to\"]);\n\n  var _useLinkProps = (0, _native.useLinkProps)({\n    to: to\n  }),\n      onPress = _useLinkProps.onPress,\n      props = (0, _objectWithoutProperties2.default)(_useLinkProps, [\"onPress\"]);\n\n  return React.createElement(_reactNativePaper.Button, (0, _extends2.default)({}, props, rest, _reactNative.Platform.select({\n    web: {\n      onClick: onPress\n    },\n    default: {\n      onPress: onPress\n    }\n  }), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar CalendarEntryScreen = function CalendarEntryScreen(_ref2) {\n  var navigation = _ref2.navigation,\n      route = _ref2.route;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(_native.Link, {\n    to: \"/link-component/music\",\n    style: [styles.button, {\n      padding: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Go to /link-component/music\"), React.createElement(_native.Link, {\n    to: \"/link-component/music\",\n    action: _native.StackActions.replace('PainLogEntry'),\n    style: [styles.button, {\n      padding: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Replace with /link-component/music\"), React.createElement(LinkButton, {\n    to: \"/link-component/music\",\n    mode: \"contained\",\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Go to /link-component/music\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_CalendarEntry.default, {\n    author: {\n      name: route.params.author\n    },\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar PainLogEntryScreen = function PainLogEntryScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(_native.Link, {\n    to: \"/link-component/article/babel\",\n    style: [styles.button, {\n      padding: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Go to /link-component/article\"), React.createElement(LinkButton, {\n    to: \"/link-component/article/babel\",\n    mode: \"contained\",\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Go to /link-component/article\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_PainLogEntry.default, {\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar SimpleStack = (0, _stack.createStackNavigator)();\n\nfunction SimpleStackScreen(_ref4) {\n  var navigation = _ref4.navigation,\n      rest = (0, _objectWithoutProperties2.default)(_ref4, [\"navigation\"]);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n  return React.createElement(SimpleStack.Navigator, (0, _extends2.default)({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"CalendarEntry\",\n    component: CalendarEntryScreen,\n    options: function options(_ref5) {\n      var route = _ref5.route;\n      return {\n        title: \"Article by \" + route.params.author\n      };\n    },\n    initialParams: {\n      author: 'Gandalf'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"PainLogEntry\",\n    component: PainLogEntryScreen,\n    options: {\n      title: 'Albums'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  buttons: {\n    padding: 8\n  },\n  button: {\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/LinkComponent.tsx"],"names":["scrollEnabled","Platform","select","web","default","LinkButton","to","rest","onPress","props","onClick","CalendarEntryScreen","navigation","route","styles","buttons","button","padding","StackActions","replace","goBack","name","params","author","PainLogEntryScreen","SimpleStack","SimpleStackScreen","React","useLayoutEffect","setOptions","headerShown","title","StyleSheet","create","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport {\n  Link,\n  StackActions,\n  ParamListBase,\n  useLinkProps,\n} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\nimport PainLogEntry from '../shared/PainLogEntry';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string };\n  PainLogEntry: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst LinkButton = ({\n  to,\n  ...rest\n}: React.ComponentProps<typeof Button> & { to: string }) => {\n  const { onPress, ...props } = useLinkProps({ to });\n\n  return (\n    <Button\n      {...props}\n      {...rest}\n      {...Platform.select({\n        web: { onClick: onPress } as any,\n        default: { onPress },\n      })}\n    />\n  );\n};\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Link\n          to=\"/link-component/music\"\n          style={[styles.button, { padding: 8 }]}\n        >\n          Go to /link-component/music\n        </Link>\n        <Link\n          to=\"/link-component/music\"\n          action={StackActions.replace('PainLogEntry')}\n          style={[styles.button, { padding: 8 }]}\n        >\n          Replace with /link-component/music\n        </Link>\n        <LinkButton\n          to=\"/link-component/music\"\n          mode=\"contained\"\n          style={styles.button}\n        >\n          Go to /link-component/music\n        </LinkButton>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst PainLogEntryScreen = ({ navigation }: StackScreenProps<SimpleStackParams>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Link\n          to=\"/link-component/article/babel\"\n          style={[styles.button, { padding: 8 }]}\n        >\n          Go to /link-component/article\n        </Link>\n        <LinkButton\n          to=\"/link-component/article/babel\"\n          mode=\"contained\"\n          style={styles.button}\n        >\n          Go to /link-component/article\n        </LinkButton>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <PainLogEntry scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\ntype Props = Partial<React.ComponentProps<typeof SimpleStack.Navigator>> &\n  StackScreenProps<ParamListBase>;\n\nexport default function SimpleStackScreen({ navigation, ...rest }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator {...rest}>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params.author}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"PainLogEntry\"\n        component={PainLogEntryScreen}\n        options={{ title: 'Albums' }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}