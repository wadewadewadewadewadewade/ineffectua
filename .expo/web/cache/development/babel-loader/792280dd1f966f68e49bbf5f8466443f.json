{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ThemeReducer;\nexports.paperTheme = exports.ToggleTemeeAction = exports.TOGGLE_THEME = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Types = require(\"../Types\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar TOGGLE_THEME = 'TOGGLE_THEME';\nexports.TOGGLE_THEME = TOGGLE_THEME;\n\nvar ToggleTemeeAction = function ToggleTemeeAction() {\n  return {\n    type: TOGGLE_THEME\n  };\n};\n\nexports.ToggleTemeeAction = ToggleTemeeAction;\n\nvar paperTheme = function paperTheme(theme) {\n  var t = theme.dark ? _reactNativePaper.DarkTheme : _reactNativePaper.DefaultTheme;\n  return _objectSpread(_objectSpread({}, t), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, t.colors), theme.colors), {}, {\n      surface: theme.colors.surface,\n      accent: theme.dark ? 'rgb(255, 55, 95)' : 'rgb(255, 45, 85)'\n    })\n  });\n};\n\nexports.paperTheme = paperTheme;\n\nfunction ThemeReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Types.initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_THEME:\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        theme: prevState.theme.dark ? _reactNativePaper.DefaultTheme : _reactNativePaper.DarkTheme\n      });\n\n    default:\n      return prevState;\n  }\n}\n\n;","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/reducers/ThemeReducer.ts"],"names":["TOGGLE_THEME","ToggleTemeeAction","type","paperTheme","theme","t","dark","DarkTheme","DefaultTheme","colors","surface","accent","ThemeReducer","prevState","initialState","action"],"mappings":";;;;;;;;;;AAEA;;AACA;;;;;;AAKO,IAAMA,YAAY,GAAE,cAApB;;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAe;AAAEC,IAAAA,IAAI,EAAEF;AAAR,GAAf;AAAA,CAA1B;;;;AAEA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAkB;AAC1C,MAAMC,CAAC,GAAGD,KAAK,CAACE,IAAN,GAAaC,2BAAb,GAAyBC,8BAAnC;AAEA,yCACKH,CADL;AAEEI,IAAAA,MAAM,gDACDJ,CAAC,CAACI,MADD,GAEDL,KAAK,CAACK,MAFL;AAGJC,MAAAA,OAAO,EAAEN,KAAK,CAACK,MAAN,CAAaC,OAHlB;AAIJC,MAAAA,MAAM,EAAEP,KAAK,CAACE,IAAN,GAAa,kBAAb,GAAkC;AAJtC;AAFR;AASD,CAZM;;;;AAcQ,SAASM,YAAT,GAAuE;AAAA,MAAjDC,SAAiD,uEAArCC,mBAAqC;AAAA,MAAvBC,MAAuB;;AACpF,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKF,YAAL;AACE,6CACKa,SADL;AAEET,QAAAA,KAAK,EAAES,SAAS,CAACT,KAAV,CAAgBE,IAAhB,GAAuBE,8BAAvB,GAAsCD;AAF/C;;AAIF;AACE,aAAOM,SAAP;AAPJ;AASD;;AAAA","sourcesContent":["\nimport { Theme } from 'react-native-paper/lib/typescript/src/types';\nimport { State, initialState } from \"../Types\";\nimport {\n  DefaultTheme,\n  DarkTheme,\n} from 'react-native-paper';\n\nexport const TOGGLE_THEME= 'TOGGLE_THEME';\n\nexport type Action =\n  | { type: 'TOGGLE_THEME'; };\n\nexport const ToggleTemeeAction = (): Action => ({ type: TOGGLE_THEME });\n\nexport const paperTheme = (theme: Theme) => {\n  const t = theme.dark ? DarkTheme : DefaultTheme;\n\n  return {\n    ...t,\n    colors: {\n      ...t.colors,\n      ...theme.colors,\n      surface: theme.colors.surface,\n      accent: theme.dark ? 'rgb(255, 55, 95)' : 'rgb(255, 45, 85)',\n    },\n  };\n};\n\nexport default function ThemeReducer(prevState = initialState, action: Action): State {\n  switch (action.type) {\n    case TOGGLE_THEME:\n      return {\n        ...prevState,\n        theme: prevState.theme.dark ? DefaultTheme : DarkTheme,\n      };\n    default:\n      return prevState\n  }\n};\n"]},"metadata":{},"sourceType":"script"}