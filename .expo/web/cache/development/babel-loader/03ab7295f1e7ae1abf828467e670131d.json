{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SimpleStackScreen;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _Article = _interopRequireDefault(require(\"../Shared/Article\"));\n\nvar _Albums = _interopRequireDefault(require(\"../Shared/Albums\"));\n\nvar _NewsFeed = _interopRequireDefault(require(\"../Shared/NewsFeed\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/SimpleStack.tsx\";\n\nvar scrollEnabled = _reactNative.Platform.select({\n  web: true,\n  default: false\n});\n\nvar ArticleScreen = function ArticleScreen(_ref) {\n  var _route$params$author, _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.replace('NewsFeed', {\n        date: Date.now()\n      });\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Replace with feed\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.pop();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Pop screen\")), React.createElement(_Article.default, {\n    author: {\n      name: (_route$params$author = (_route$params = route.params) == null ? void 0 : _route$params.author) != null ? _route$params$author : 'Unknown'\n    },\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar NewsFeedScreen = function NewsFeedScreen(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate('Albums');\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Navigate to album\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Go back\")), React.createElement(_NewsFeed.default, {\n    scrollEnabled: scrollEnabled,\n    date: route.params.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AlbumsScreen = function AlbumsScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.push('Article', {\n        author: 'Babel fish'\n      });\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Push article\"), React.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return navigation.pop(2);\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Pop by 2\")), React.createElement(_Albums.default, {\n    scrollEnabled: scrollEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar SimpleStack = (0, _stack.createStackNavigator)();\n\nfunction SimpleStackScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n  return React.createElement(SimpleStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(SimpleStack.Screen, {\n    name: \"Article\",\n    component: ArticleScreen,\n    options: function options(_ref5) {\n      var _route$params$author2, _route$params2;\n\n      var route = _ref5.route;\n      return {\n        title: \"Article by \" + ((_route$params$author2 = (_route$params2 = route.params) == null ? void 0 : _route$params2.author) != null ? _route$params$author2 : 'Unknown')\n      };\n    },\n    initialParams: {\n      author: 'Gandalf'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"NewsFeed\",\n    component: NewsFeedScreen,\n    options: {\n      title: 'Feed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(SimpleStack.Screen, {\n    name: \"Albums\",\n    component: AlbumsScreen,\n    options: {\n      title: 'Albums'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8\n  },\n  button: {\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/SimpleStack.tsx"],"names":["scrollEnabled","Platform","select","web","default","ArticleScreen","navigation","route","styles","buttons","replace","date","Date","now","button","pop","name","params","author","NewsFeedScreen","navigate","goBack","AlbumsScreen","push","SimpleStack","SimpleStackScreen","React","useLayoutEffect","setOptions","headerShown","title","StyleSheet","create","flexDirection","padding","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Platform, StyleSheet, ScrollView } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport type { ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport Article from '../Shared/Article';\nimport Albums from '../Shared/Albums';\nimport NewsFeed from '../Shared/NewsFeed';\n\ntype SimpleStackParams = {\n  Article: { author: string } | undefined;\n  NewsFeed: { date: number };\n  Albums: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst ArticleScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'Article'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.replace('NewsFeed', { date: Date.now() })}\n          style={styles.button}\n        >\n          Replace with feed\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.pop()}\n          style={styles.button}\n        >\n          Pop screen\n        </Button>\n      </View>\n      <Article\n        author={{ name: route.params?.author ?? 'Unknown' }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst NewsFeedScreen = ({\n  route,\n  navigation,\n}: StackScreenProps<SimpleStackParams, 'NewsFeed'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.navigate('Albums')}\n          style={styles.button}\n        >\n          Navigate to album\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <NewsFeed scrollEnabled={scrollEnabled} date={route.params.date} />\n    </ScrollView>\n  );\n};\n\nconst AlbumsScreen = ({\n  navigation,\n}: StackScreenProps<SimpleStackParams, 'Albums'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('Article', { author: 'Babel fish' })}\n          style={styles.button}\n        >\n          Push article\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.pop(2)}\n          style={styles.button}\n        >\n          Pop by 2\n        </Button>\n      </View>\n      <Albums scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\nexport default function SimpleStackScreen({\n  navigation,\n}: StackScreenProps<ParamListBase>) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator>\n      <SimpleStack.Screen\n        name=\"Article\"\n        component={ArticleScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params?.author ?? 'Unknown'}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"NewsFeed\"\n        component={NewsFeedScreen}\n        options={{ title: 'Feed' }}\n      />\n      <SimpleStack.Screen\n        name=\"Albums\"\n        component={AlbumsScreen}\n        options={{ title: 'Albums' }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}