{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.firebase = exports.default = exports.SDK_VERSION = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar _internal = require(\"@react-native-firebase/app/lib/internal\");\n\nvar _ConfirmationResult = _interopRequireDefault(require(\"./ConfirmationResult\"));\n\nvar _PhoneAuthListener = _interopRequireDefault(require(\"./PhoneAuthListener\"));\n\nvar _EmailAuthProvider = _interopRequireDefault(require(\"./providers/EmailAuthProvider\"));\n\nvar _FacebookAuthProvider = _interopRequireDefault(require(\"./providers/FacebookAuthProvider\"));\n\nvar _GithubAuthProvider = _interopRequireDefault(require(\"./providers/GithubAuthProvider\"));\n\nvar _GoogleAuthProvider = _interopRequireDefault(require(\"./providers/GoogleAuthProvider\"));\n\nvar _OAuthProvider = _interopRequireDefault(require(\"./providers/OAuthProvider\"));\n\nvar _PhoneAuthProvider = _interopRequireDefault(require(\"./providers/PhoneAuthProvider\"));\n\nvar _TwitterAuthProvider = _interopRequireDefault(require(\"./providers/TwitterAuthProvider\"));\n\nvar _AppleAuthProvider = _interopRequireDefault(require(\"./providers/AppleAuthProvider\"));\n\nvar _Settings = _interopRequireDefault(require(\"./Settings\"));\n\nvar _User = _interopRequireDefault(require(\"./User\"));\n\nvar _version = _interopRequireDefault(require(\"./version\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar statics = {\n  AppleAuthProvider: _AppleAuthProvider.default,\n  EmailAuthProvider: _EmailAuthProvider.default,\n  PhoneAuthProvider: _PhoneAuthProvider.default,\n  GoogleAuthProvider: _GoogleAuthProvider.default,\n  GithubAuthProvider: _GithubAuthProvider.default,\n  TwitterAuthProvider: _TwitterAuthProvider.default,\n  FacebookAuthProvider: _FacebookAuthProvider.default,\n  OAuthProvider: _OAuthProvider.default,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error'\n  }\n};\nvar namespace = 'auth';\nvar nativeModuleName = 'RNFBAuthModule';\n\nvar FirebaseAuthModule = function (_FirebaseModule) {\n  (0, _inherits2.default)(FirebaseAuthModule, _FirebaseModule);\n\n  var _super = _createSuper(FirebaseAuthModule);\n\n  function FirebaseAuthModule() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FirebaseAuthModule);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._user = null;\n    _this._settings = null;\n    _this._authResult = false;\n    _this._languageCode = _this.native.APP_LANGUAGE[_this.app._name];\n\n    if (!_this.languageCode) {\n      _this._languageCode = _this.native.APP_LANGUAGE['[DEFAULT]'];\n    }\n\n    if (_this.native.APP_USER[_this.app._name]) {\n      _this._setUser(_this.native.APP_USER[_this.app._name]);\n    }\n\n    _this.emitter.addListener(_this.eventNameForApp('auth_state_changed'), function (event) {\n      _this._setUser(event.user);\n\n      _this.emitter.emit(_this.eventNameForApp('onAuthStateChanged'), _this._user);\n    });\n\n    _this.emitter.addListener(_this.eventNameForApp('phone_auth_state_changed'), function (event) {\n      var eventKey = \"phone:auth:\" + event.requestKey + \":\" + event.type;\n\n      _this.emitter.emit(eventKey, event.state);\n    });\n\n    _this.emitter.addListener(_this.eventNameForApp('auth_id_token_changed'), function (auth) {\n      _this._setUser(auth.user);\n\n      _this.emitter.emit(_this.eventNameForApp('onIdTokenChanged'), _this._user);\n    });\n\n    _this.native.addAuthStateListener();\n\n    _this.native.addIdTokenListener();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(FirebaseAuthModule, [{\n    key: \"_setUser\",\n    value: function _setUser(user) {\n      this._user = user ? new _User.default(this, user) : null;\n      this._authResult = true;\n      this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n      return this._user;\n    }\n  }, {\n    key: \"_setUserCredential\",\n    value: function _setUserCredential(userCredential) {\n      var user = new _User.default(this, userCredential.user);\n      this._user = user;\n      this._authResult = true;\n      this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n      return {\n        additionalUserInfo: userCredential.additionalUserInfo,\n        user: user\n      };\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(listener) {\n      var _this2 = this;\n\n      var subscription = this.emitter.addListener(this.eventNameForApp('onAuthStateChanged'), listener);\n\n      if (this._authResult) {\n        Promise.resolve().then(function () {\n          listener(_this2._user || null);\n        });\n      }\n\n      return function () {\n        return subscription.remove();\n      };\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(listener) {\n      var _this3 = this;\n\n      var subscription = this.emitter.addListener(this.eventNameForApp('onIdTokenChanged'), listener);\n\n      if (this._authResult) {\n        Promise.resolve().then(function () {\n          listener(_this3._user || null);\n        });\n      }\n\n      return function () {\n        return subscription.remove();\n      };\n    }\n  }, {\n    key: \"onUserChanged\",\n    value: function onUserChanged(listener) {\n      var _this4 = this;\n\n      var subscription = this.emitter.addListener(this.eventNameForApp('onUserChanged'), listener);\n\n      if (this._authResult) {\n        Promise.resolve().then(function () {\n          listener(_this4._user || null);\n        });\n      }\n\n      return function () {\n        subscription.remove();\n      };\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      var _this5 = this;\n\n      return this.native.signOut().then(function () {\n        _this5._setUser();\n      });\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      var _this6 = this;\n\n      return this.native.signInAnonymously().then(function (userCredential) {\n        return _this6._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, forceResend) {\n      var _this7 = this;\n\n      if (_common.isAndroid) {\n        return this.native.signInWithPhoneNumber(phoneNumber, forceResend || false).then(function (result) {\n          return new _ConfirmationResult.default(_this7, result.verificationId);\n        });\n      }\n\n      return this.native.signInWithPhoneNumber(phoneNumber).then(function (result) {\n        return new _ConfirmationResult.default(_this7, result.verificationId);\n      });\n    }\n  }, {\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n      var _forceResend = forceResend;\n      var _autoVerifyTimeout = 60;\n\n      if ((0, _common.isBoolean)(autoVerifyTimeoutOrForceResend)) {\n        _forceResend = autoVerifyTimeoutOrForceResend;\n      } else {\n        _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n      }\n\n      return new _PhoneAuthListener.default(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function createUserWithEmailAndPassword(email, password) {\n      var _this8 = this;\n\n      return this.native.createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this8._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      var _this9 = this;\n\n      return this.native.signInWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this9._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(customToken) {\n      var _this10 = this;\n\n      return this.native.signInWithCustomToken(customToken).then(function (userCredential) {\n        return _this10._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      var _this11 = this;\n\n      return this.native.signInWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this11._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email) {\n      var actionCodeSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this.native.sendPasswordResetEmail(email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email) {\n      var actionCodeSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.native.sendSignInLinkToEmail(email, actionCodeSettings);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return typeof emailLink === 'string' && (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) && (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      var _this12 = this;\n\n      return this.native.signInWithEmailLink(email, emailLink).then(function (userCredential) {\n        return _this12._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return this.native.confirmPasswordReset(code, newPassword);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      var _this13 = this;\n\n      return this.native.applyActionCode(code).then(function (user) {\n        _this13._setUser(user);\n      });\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return this.native.checkActionCode(code);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return this.native.fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return this.native.verifyPasswordResetCode(code);\n    }\n  }, {\n    key: \"useUserAccessGroup\",\n    value: function useUserAccessGroup(userAccessGroup) {\n      if (_common.isAndroid) {\n        return Promise.resolve();\n      }\n\n      return this.native.useUserAccessGroup(userAccessGroup);\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function getRedirectResult() {\n      throw new Error('firebase.auth().getRedirectResult() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function setPersistence() {\n      throw new Error('firebase.auth().setPersistence() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function signInWithPopup() {\n      throw new Error('firebase.auth().signInWithPopup() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"signInWithRedirect\",\n    value: function signInWithRedirect() {\n      throw new Error('firebase.auth().signInWithRedirect() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      throw new Error('firebase.auth().useDeviceLanguage() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._languageCode;\n    },\n    set: function set(code) {\n      this._languageCode = code;\n      this.native.setLanguageCode(code);\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      if (!this._settings) {\n        this._settings = new _Settings.default(this);\n      }\n\n      return this._settings;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      return this._user;\n    }\n  }]);\n  return FirebaseAuthModule;\n}(_internal.FirebaseModule);\n\nvar SDK_VERSION = _version.default;\nexports.SDK_VERSION = SDK_VERSION;\n\nvar _default = (0, _internal.createModuleNamespace)({\n  statics: statics,\n  version: _version.default,\n  namespace: namespace,\n  nativeModuleName: nativeModuleName,\n  nativeEvents: ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'],\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseAuthModule\n});\n\nexports.default = _default;\nvar firebase = (0, _internal.getFirebaseRoot)();\nexports.firebase = firebase;","map":{"version":3,"sources":["/home/wade/projects/ineffectua/node_modules/@react-native-firebase/auth/lib/index.js"],"names":["statics","AppleAuthProvider","EmailAuthProvider","PhoneAuthProvider","GoogleAuthProvider","GithubAuthProvider","TwitterAuthProvider","FacebookAuthProvider","OAuthProvider","PhoneAuthState","CODE_SENT","AUTO_VERIFY_TIMEOUT","AUTO_VERIFIED","ERROR","namespace","nativeModuleName","FirebaseAuthModule","args","_user","_settings","_authResult","_languageCode","native","APP_LANGUAGE","app","_name","languageCode","APP_USER","_setUser","emitter","addListener","eventNameForApp","event","user","emit","eventKey","requestKey","type","state","auth","addAuthStateListener","addIdTokenListener","User","userCredential","additionalUserInfo","listener","subscription","Promise","resolve","then","remove","signOut","signInAnonymously","_setUserCredential","phoneNumber","forceResend","isAndroid","signInWithPhoneNumber","result","ConfirmationResult","verificationId","autoVerifyTimeoutOrForceResend","_forceResend","_autoVerifyTimeout","PhoneAuthListener","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","customToken","signInWithCustomToken","credential","signInWithCredential","providerId","token","secret","actionCodeSettings","sendPasswordResetEmail","sendSignInLinkToEmail","emailLink","includes","signInWithEmailLink","code","newPassword","confirmPasswordReset","applyActionCode","checkActionCode","fetchSignInMethodsForEmail","verifyPasswordResetCode","userAccessGroup","useUserAccessGroup","Error","setLanguageCode","Settings","FirebaseModule","SDK_VERSION","version","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","firebase"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isAndroid, isBoolean } from '@react-native-firebase/app/lib/common';\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport ConfirmationResult from './ConfirmationResult';\nimport PhoneAuthListener from './PhoneAuthListener';\nimport EmailAuthProvider from './providers/EmailAuthProvider';\nimport FacebookAuthProvider from './providers/FacebookAuthProvider';\nimport GithubAuthProvider from './providers/GithubAuthProvider';\nimport GoogleAuthProvider from './providers/GoogleAuthProvider';\nimport OAuthProvider from './providers/OAuthProvider';\nimport PhoneAuthProvider from './providers/PhoneAuthProvider';\nimport TwitterAuthProvider from './providers/TwitterAuthProvider';\nimport AppleAuthProvider from './providers/AppleAuthProvider';\nimport Settings from './Settings';\nimport User from './User';\nimport version from './version';\n\nconst statics = {\n  AppleAuthProvider,\n  EmailAuthProvider,\n  PhoneAuthProvider,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  TwitterAuthProvider,\n  FacebookAuthProvider,\n  OAuthProvider,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error',\n  },\n};\n\nconst namespace = 'auth';\n\nconst nativeModuleName = 'RNFBAuthModule';\n\nclass FirebaseAuthModule extends FirebaseModule {\n  constructor(...args) {\n    super(...args);\n    this._user = null;\n    this._settings = null;\n    this._authResult = false;\n    this._languageCode = this.native.APP_LANGUAGE[this.app._name];\n\n    if (!this.languageCode) {\n      this._languageCode = this.native.APP_LANGUAGE['[DEFAULT]'];\n    }\n\n    if (this.native.APP_USER[this.app._name]) {\n      this._setUser(this.native.APP_USER[this.app._name]);\n    }\n\n    this.emitter.addListener(this.eventNameForApp('auth_state_changed'), event => {\n      this._setUser(event.user);\n      this.emitter.emit(this.eventNameForApp('onAuthStateChanged'), this._user);\n    });\n\n    this.emitter.addListener(this.eventNameForApp('phone_auth_state_changed'), event => {\n      const eventKey = `phone:auth:${event.requestKey}:${event.type}`;\n      this.emitter.emit(eventKey, event.state);\n    });\n\n    this.emitter.addListener(this.eventNameForApp('auth_id_token_changed'), auth => {\n      this._setUser(auth.user);\n      this.emitter.emit(this.eventNameForApp('onIdTokenChanged'), this._user);\n    });\n\n    this.native.addAuthStateListener();\n    this.native.addIdTokenListener();\n  }\n\n  get languageCode() {\n    return this._languageCode;\n  }\n\n  set languageCode(code) {\n    this._languageCode = code;\n    this.native.setLanguageCode(code);\n  }\n\n  get settings() {\n    if (!this._settings) {\n      this._settings = new Settings(this);\n    }\n    return this._settings;\n  }\n\n  get currentUser() {\n    return this._user;\n  }\n\n  _setUser(user) {\n    this._user = user ? new User(this, user) : null;\n    this._authResult = true;\n    this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n    return this._user;\n  }\n\n  _setUserCredential(userCredential) {\n    const user = new User(this, userCredential.user);\n    this._user = user;\n    this._authResult = true;\n    this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n    return {\n      additionalUserInfo: userCredential.additionalUserInfo,\n      user,\n    };\n  }\n\n  onAuthStateChanged(listener) {\n    const subscription = this.emitter.addListener(\n      this.eventNameForApp('onAuthStateChanged'),\n      listener,\n    );\n\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n    return () => subscription.remove();\n  }\n\n  onIdTokenChanged(listener) {\n    const subscription = this.emitter.addListener(\n      this.eventNameForApp('onIdTokenChanged'),\n      listener,\n    );\n\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n    return () => subscription.remove();\n  }\n\n  onUserChanged(listener) {\n    const subscription = this.emitter.addListener(this.eventNameForApp('onUserChanged'), listener);\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n\n    return () => {\n      subscription.remove();\n    };\n  }\n\n  signOut() {\n    return this.native.signOut().then(() => {\n      this._setUser();\n    });\n  }\n\n  signInAnonymously() {\n    return this.native\n      .signInAnonymously()\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithPhoneNumber(phoneNumber, forceResend) {\n    if (isAndroid) {\n      return this.native\n        .signInWithPhoneNumber(phoneNumber, forceResend || false)\n        .then(result => new ConfirmationResult(this, result.verificationId));\n    }\n\n    return this.native\n      .signInWithPhoneNumber(phoneNumber)\n      .then(result => new ConfirmationResult(this, result.verificationId));\n  }\n\n  verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n    let _forceResend = forceResend;\n    let _autoVerifyTimeout = 60;\n\n    if (isBoolean(autoVerifyTimeoutOrForceResend)) {\n      _forceResend = autoVerifyTimeoutOrForceResend;\n    } else {\n      _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n    }\n\n    return new PhoneAuthListener(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n  }\n\n  createUserWithEmailAndPassword(email, password) {\n    return this.native\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithEmailAndPassword(email, password) {\n    return this.native\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithCustomToken(customToken) {\n    return this.native\n      .signInWithCustomToken(customToken)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithCredential(credential) {\n    return this.native\n      .signInWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  sendPasswordResetEmail(email, actionCodeSettings = null) {\n    return this.native.sendPasswordResetEmail(email, actionCodeSettings);\n  }\n\n  sendSignInLinkToEmail(email, actionCodeSettings = {}) {\n    return this.native.sendSignInLinkToEmail(email, actionCodeSettings);\n  }\n\n  isSignInWithEmailLink(emailLink) {\n    return (\n      typeof emailLink === 'string' &&\n      (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) &&\n      (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'))\n    );\n  }\n\n  signInWithEmailLink(email, emailLink) {\n    return this.native\n      .signInWithEmailLink(email, emailLink)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  confirmPasswordReset(code, newPassword) {\n    return this.native.confirmPasswordReset(code, newPassword);\n  }\n\n  applyActionCode(code) {\n    return this.native.applyActionCode(code).then(user => {\n      this._setUser(user);\n    });\n  }\n\n  checkActionCode(code) {\n    return this.native.checkActionCode(code);\n  }\n\n  fetchSignInMethodsForEmail(email) {\n    return this.native.fetchSignInMethodsForEmail(email);\n  }\n\n  verifyPasswordResetCode(code) {\n    return this.native.verifyPasswordResetCode(code);\n  }\n\n  useUserAccessGroup(userAccessGroup) {\n    if (isAndroid) {\n      return Promise.resolve();\n    }\n    return this.native.useUserAccessGroup(userAccessGroup);\n  }\n\n  getRedirectResult() {\n    throw new Error(\n      'firebase.auth().getRedirectResult() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  setPersistence() {\n    throw new Error('firebase.auth().setPersistence() is unsupported by the native Firebase SDKs.');\n  }\n\n  signInWithPopup() {\n    throw new Error(\n      'firebase.auth().signInWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  signInWithRedirect() {\n    throw new Error(\n      'firebase.auth().signInWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  // firebase issue - https://github.com/invertase/react-native-firebase/pull/655#issuecomment-349904680\n  useDeviceLanguage() {\n    throw new Error(\n      'firebase.auth().useDeviceLanguage() is unsupported by the native Firebase SDKs.',\n    );\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/auth';\nexport const SDK_VERSION = version;\n\n// import auth from '@react-native-firebase/auth';\n// auth().X(...);\nexport default createModuleNamespace({\n  statics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents: ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'],\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseAuthModule,\n});\n\n// import auth, { firebase } from '@react-native-firebase/auth';\n// auth().X(...);\n// firebase.auth().X(...);\nexport const firebase = getFirebaseRoot();\n"]},"metadata":{},"sourceType":"script"}