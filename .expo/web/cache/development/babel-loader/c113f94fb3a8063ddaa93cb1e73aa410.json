{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Profile;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _SettingsItem = _interopRequireDefault(require(\"../shared/SettingsItem\"));\n\nvar _AsyncStorage = _interopRequireDefault(require(\"../AsyncStorage\"));\n\nvar _Types = require(\"../../Types\");\n\nvar _jsxFileName = \"/home/wade/projects/ineffectua/src/components/screens/Profile.tsx\";\n\nfunction Profile(_ref, user, theme, setTheme) {\n  var navigation = _ref.navigation;\n  var thumbnail = null;\n  return user !== null ? React.createElement(_reactNative.ScrollView, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, thumbnail ? React.createElement(_reactNativePaper.Avatar.Image, {\n    source: thumbnail,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }\n  }) : null, React.createElement(_reactNativePaper.Subheading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Hi\", (user == null ? void 0 : user.displayName) ? ' ' + (user == null ? void 0 : user.displayName) : null, \"!\"), React.createElement(_SettingsItem.default, {\n    label: \"Dark theme\",\n    value: theme.dark,\n    onValueChange: function onValueChange() {\n      _AsyncStorage.default.setItem(_Types.THEME_PERSISTENCE_KEY, theme.dark ? 'light' : 'dark');\n\n      setTheme(function (t) {\n        return t.dark ? _native.DefaultTheme : _native.DarkTheme;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(_reactNativePaper.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), React.createElement(_reactNativePaper.Button, {\n    onPress: function onPress() {\n      return navigation.navigate('/Tabs/AuthFlow', {\n        action: 'SIGN_OUT'\n      });\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Sign Out\")) : React.createElement(_reactNative.ScrollView, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativePaper.Button, {\n    onPress: function onPress() {\n      return navigation.navigate('/Tabs/AuthFlow', {\n        action: 'SIGN_IN'\n      });\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Sign In\"));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  content: {\n    flexDirection: 'column',\n    paddingHorizontal: 16,\n    paddingVertical: 12\n  },\n  button: {\n    margin: 8\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8\n  },\n  image: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/wade/projects/ineffectua/src/components/screens/Profile.tsx"],"names":["Profile","user","theme","setTheme","navigation","thumbnail","styles","content","image","displayName","dark","AsyncStorage","setItem","THEME_PERSISTENCE_KEY","t","DefaultTheme","DarkTheme","navigate","action","button","StyleSheet","create","flexDirection","paddingHorizontal","paddingVertical","margin","text","textAlign","alignItems"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,OAAT,OAAoFC,IAApF,EAAgHC,KAAhH,EAA8HC,QAA9H,EAAqL;AAAA,MAAlKC,UAAkK,QAAlKA,UAAkK;AAClM,MAAMC,SAAS,GAAG,IAAlB;AAEA,SACEJ,IAAI,KAAK,IAAT,GACE,oBAAC,uBAAD;AAAY,IAAA,KAAK,EAAEK,MAAM,CAACC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,GAAI,oBAAC,wBAAD,CAAQ,KAAR;AAAc,IAAA,MAAM,EAAEA,SAAtB;AAAiC,IAAA,KAAK,EAAEC,MAAM,CAACE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAAgE,IAD5E,EAEE,oBAAC,4BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAe,CAAAP,IAAI,QAAJ,YAAAA,IAAI,CAAEQ,WAAN,IAAoB,OAAMR,IAAN,oBAAMA,IAAI,CAAEQ,WAAZ,CAApB,GAA8C,IAA7D,MAFF,EAGE,oBAAC,qBAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,KAAK,EAAEP,KAAK,CAACQ,IAFf;AAGE,IAAA,aAAa,EAAE,yBAAM;AACnBC,4BAAaC,OAAb,CACEC,4BADF,EAEEX,KAAK,CAACQ,IAAN,GAAa,OAAb,GAAuB,MAFzB;;AAKAP,MAAAA,QAAQ,CAAC,UAACW,CAAD;AAAA,eAAQA,CAAC,CAACJ,IAAF,GAASK,oBAAT,GAAwBC,iBAAhC;AAAA,OAAD,CAAR;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAeE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,wBAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMZ,UAAU,CAACa,QAAX,CAAoB,gBAApB,EAAsC;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAtC,CAAN;AAAA,KAAjB;AAAoF,IAAA,KAAK,EAAEZ,MAAM,CAACa,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,CADF,GAsBE,oBAAC,uBAAD;AAAY,IAAA,KAAK,EAAEb,MAAM,CAACC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,CAACa,QAAX,CAAoB,gBAApB,EAAsC;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAtC,CAAN;AAAA,KAAjB;AAAmF,IAAA,KAAK,EAAEZ,MAAM,CAACa,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAvBJ;AA8BD;;AAED,IAAMb,MAAM,GAAGc,wBAAWC,MAAX,CAAkB;AAC/Bd,EAAAA,OAAO,EAAE;AACPe,IAAAA,aAAa,EAAE,QADR;AAEPC,IAAAA,iBAAiB,EAAE,EAFZ;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAM/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,MAAM,EAAE;AADF,GANuB;AAS/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,QADP;AAEJF,IAAAA,MAAM,EAAE;AAFJ,GATyB;AAa/BjB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,UAAU,EAAE;AADP;AAbwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Subheading, Avatar, Button, Divider } from 'react-native-paper';\n\nimport * as firebase from 'firebase';\nimport { DrawerContentComponentProps, DrawerContentOptions } from '@react-navigation/drawer';\nimport { DefaultTheme, DarkTheme, Theme } from '@react-navigation/native';\nimport SettingsItem from '../shared/SettingsItem';\nimport AsyncStorage from '../AsyncStorage';\nimport { THEME_PERSISTENCE_KEY } from '../../Types';\n\nexport default function Profile({ navigation }: DrawerContentComponentProps<DrawerContentOptions>, user: firebase.User | null, theme: Theme, setTheme: React.Dispatch<React.SetStateAction<Theme>>) {\n  const thumbnail = null //user !== null && user.photoURL !== null ? require(user.photoURL) : null;\n\n  return (\n    user !== null ? (\n      <ScrollView style={styles.content}>\n        {thumbnail ? (<Avatar.Image source={thumbnail} style={styles.image} />) : null}\n        <Subheading>Hi{user?.displayName ? ' ' + user?.displayName : null}!</Subheading>\n        <SettingsItem\n          label=\"Dark theme\"\n          value={theme.dark}\n          onValueChange={() => {\n            AsyncStorage.setItem(\n              THEME_PERSISTENCE_KEY,\n              theme.dark ? 'light' : 'dark'\n            );\n\n            setTheme((t) => (t.dark ? DefaultTheme : DarkTheme));\n          }}\n        />\n        <Divider />\n        <Button onPress={() => navigation.navigate('/Tabs/AuthFlow', {action: 'SIGN_OUT'})} style={styles.button}>\n          Sign Out\n        </Button>\n      </ScrollView>\n    ) : (\n      <ScrollView style={styles.content}>\n        <Button onPress={() => navigation.navigate('/Tabs/AuthFlow', {action: 'SIGN_IN'})} style={styles.button}>\n          Sign In\n        </Button>\n      </ScrollView>\n    )\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'column',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n  },\n  button: {\n    margin: 8,\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8,\n  },\n  image: {\n    alignItems: 'center'\n  }\n});\n"]},"metadata":{},"sourceType":"script"}