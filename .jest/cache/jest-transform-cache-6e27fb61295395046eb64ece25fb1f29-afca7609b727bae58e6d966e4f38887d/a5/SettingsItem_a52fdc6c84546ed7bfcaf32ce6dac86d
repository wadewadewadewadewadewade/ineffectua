3b953366c7b3a8831ba9babe74d12586
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_native_1 = require("react-native");
const react_native_paper_1 = require("react-native-paper");
function SettingsItem({ label, value, onValueChange }) {
    return (React.createElement(react_native_1.View, { style: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-between',
            paddingHorizontal: 16,
            paddingVertical: 12,
        } },
        React.createElement(react_native_paper_1.Subheading, null, label),
        React.createElement(react_native_paper_1.Switch, { value: value, onValueChange: onValueChange })));
}
exports.default = SettingsItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvd2FkZS9wcm9qZWN0cy9pbmVmZmVjdHVhL3NyYy9jb21wb25lbnRzL3NoYXJlZC9TZXR0aW5nc0l0ZW0udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUErQjtBQUMvQiwrQ0FBb0M7QUFDcEMsMkRBQXdEO0FBUXhELFNBQXdCLFlBQVksQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFTO0lBQ3pFLE9BQU8sQ0FDTCxvQkFBQyxtQkFBSSxJQUNILEtBQUssRUFBRTtZQUNMLGFBQWEsRUFBRSxLQUFLO1lBQ3BCLFVBQVUsRUFBRSxRQUFRO1lBQ3BCLGNBQWMsRUFBRSxlQUFlO1lBQy9CLGlCQUFpQixFQUFFLEVBQUU7WUFDckIsZUFBZSxFQUFFLEVBQUU7U0FDcEI7UUFFRCxvQkFBQywrQkFBVSxRQUFFLEtBQUssQ0FBYztRQUNoQyxvQkFBQywyQkFBTSxJQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLGFBQWEsR0FBSSxDQUNqRCxDQUNSLENBQUM7QUFDSixDQUFDO0FBZkQsK0JBZUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvd2FkZS9wcm9qZWN0cy9pbmVmZmVjdHVhL3NyYy9jb21wb25lbnRzL3NoYXJlZC9TZXR0aW5nc0l0ZW0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgU3ViaGVhZGluZywgU3dpdGNoIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcblxudHlwZSBQcm9wcyA9IHtcbiAgbGFiZWw6IHN0cmluZztcbiAgdmFsdWU6IGJvb2xlYW47XG4gIG9uVmFsdWVDaGFuZ2U6ICgpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTZXR0aW5nc0l0ZW0oeyBsYWJlbCwgdmFsdWUsIG9uVmFsdWVDaGFuZ2UgfTogUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8Vmlld1xuICAgICAgc3R5bGU9e3tcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTYsXG4gICAgICAgIHBhZGRpbmdWZXJ0aWNhbDogMTIsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxTdWJoZWFkaW5nPntsYWJlbH08L1N1YmhlYWRpbmc+XG4gICAgICA8U3dpdGNoIHZhbHVlPXt2YWx1ZX0gb25WYWx1ZUNoYW5nZT17b25WYWx1ZUNoYW5nZX0gLz5cbiAgICA8L1ZpZXc+XG4gICk7XG59Il0sInZlcnNpb24iOjN9