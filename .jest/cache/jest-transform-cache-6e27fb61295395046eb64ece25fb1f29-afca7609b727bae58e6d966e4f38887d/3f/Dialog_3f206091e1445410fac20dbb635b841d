493e13b0bf15ed7b6b12d60e35be4d0c
"use strict";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));



var _Modal = _interopRequireDefault(require("../Modal"));

var _DialogContent = _interopRequireDefault(require("./DialogContent"));

var _DialogActions = _interopRequireDefault(require("./DialogActions"));

var _DialogTitle2 = _interopRequireDefault(require("./DialogTitle"));

var _DialogScrollArea = _interopRequireDefault(require("./DialogScrollArea"));



function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var












































Dialog = function (_React$Component) {require("@babel/runtime/helpers/inherits")(Dialog, _React$Component);var _super = _createSuper(Dialog);function Dialog() {require("@babel/runtime/helpers/classCallCheck")(this, Dialog);return _super.apply(this, arguments);}require("@babel/runtime/helpers/createClass")(Dialog, [{ key: "render", value: function render()




    {var _this$props =







      this.props,children = _this$props.children,dismissable = _this$props.dismissable,onDismiss = _this$props.onDismiss,visible = _this$props.visible,style = _this$props.style,theme = _this$props.theme;
      return React.createElement(_Modal.default, {
        dismissable: dismissable,
        onDismiss: onDismiss,
        visible: visible,
        contentContainerStyle: [{
          borderRadius: theme.roundness,
          backgroundColor: theme.colors.surface },
        styles.container, style] },
      React.Children.toArray(children).filter(function (child) {return child != null && typeof child !== 'boolean';}).map(function (child, i) {
        if (i === 0 && React.isValidElement(child) && child.type === _DialogContent.default) {

          return React.cloneElement(child, {
            style: [{
              paddingTop: 24 },
            child.props.style] });

        }

        return child;
      }));
    } }]);return Dialog;}(React.Component);



_defineProperty(Dialog, "Content", _DialogContent.default);

_defineProperty(Dialog, "Actions", _DialogActions.default);

_defineProperty(Dialog, "Title", _DialogTitle2.default);

_defineProperty(Dialog, "ScrollArea", _DialogScrollArea.default);

_defineProperty(Dialog, "defaultProps", {
  dismissable: true,
  visible: false });


var styles = require("react-native").StyleSheet.create({
  container: {







    marginVertical: require("react-native").Platform.OS === 'android' ? 44 : 0,
    marginHorizontal: 26,
    elevation: 24,
    justifyContent: 'flex-start' } });



var _default = (0, require("../../core/theming").withTheme)(Dialog);

exports.default = _default;