{"file":"/home/wade/projects/ineffectua/src/components/screens/AuthFlow.tsx","mappings":"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","names":[],"sources":["/home/wade/projects/ineffectua/src/components/screens/AuthFlow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, TextInput, ActivityIndicator, StyleSheet, Text } from 'react-native';\nimport { Title, Button } from 'react-native-paper';\nimport { useTheme, ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport AuthContext from '../shared/AuthContext'\n\nimport * as firebase from 'firebase';\n\ntype AuthStackParams = {\n  Splash: undefined;\n  Home: undefined;\n  SignIn: undefined;\n  PostSignOut: undefined;\n};\n\nconst SplashScreen = () => {\n  return (\n    <View style={styles.content}>\n      <ActivityIndicator />\n    </View>\n  );\n};\n\nconst SignInScreen = () => {\n  const { signIn } = React.useContext(AuthContext);\n  const { colors } = useTheme();\n  const [email, onChangeEmail] = React.useState('Email');\n  const [password, onChangePassword] = React.useState('Password');\n  const [error, onChangeError] = React.useState('');\n\n  return (\n    <View style={styles.content}>\n      <TextInput\n        placeholder=\"Email\"\n        autoCompleteType=\"email\"\n        style={[\n          styles.input,\n          { backgroundColor: colors.card, color: colors.text },\n        ]}\n        onChangeText={onChangeEmail}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        secureTextEntry\n        style={[\n          styles.input,\n          { backgroundColor: colors.card, color: colors.text },\n        ]}\n        onChangeText={onChangePassword}\n      />\n      {error !== undefined ? (<Text style={{color: 'red'}}>{error}</Text>) : null}\n      <Button mode=\"contained\" onPress={() => {\n        signIn(email, password).then((errorMessage) => {\n          if (errorMessage && errorMessage.length > 0) {\n            onChangeError(errorMessage)\n          }\n        })\n      }} style={styles.button}>\n        Sign in\n      </Button>\n    </View>\n  );\n};\n\nconst AuthenticationSuccessScreen = () => {\n  const { signOut } = React.useContext(AuthContext);\n  \n  return (\n    <View style={styles.content}>\n      <Title style={styles.text}>Signed in successfully ðŸŽ‰</Title>\n      <Button onPress={signOut} style={styles.button}>\n        Sign out\n      </Button>\n    </View>\n  );\n};\n\nconst SimpleStack = createStackNavigator<AuthStackParams>();\n\ntype State = {\n  isLoading: boolean;\n  isSignout: boolean;\n  userToken: null | firebase.User;\n};\n\ntype Action =\n  | { type: 'RESTORE_TOKEN'; token: null | firebase.User }\n  | { type: 'SIGN_IN'; token: null | firebase.User }\n  | { type: 'SIGN_OUT' };\n\nexport default function SimpleStackScreen({\n  navigation,\n}: StackScreenProps<ParamListBase>) {\n  const [state, dispatch] = React.useReducer<React.Reducer<State, Action>>(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'RESTORE_TOKEN':\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    }\n  );\n\n  React.useEffect(() => {\n    dispatch({ type: 'RESTORE_TOKEN', token: state.userToken });\n  }, []);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  const authContext = React.useMemo(\n    () => ({\n      user: firebase.auth().currentUser,\n      signIn: (email: string, password: string) => new Promise<string | void>((success, error) => {\n        const provider = new firebase.auth.FacebookAuthProvider();\n        try {\n          firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n            .then(() => \n              firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n                if (user !== null) {\n                  dispatch({ type: 'SIGN_IN', token: user.user })\n                  success();\n                }\n              }).catch(err => error(err))\n            ).catch(err => error(err))\n        } catch (e) {\n          error(e.message);\n        }\n      }),\n      signOut: () => new Promise<void>((s) => dispatch({ type: 'SIGN_OUT' })),\n    }),\n    []\n  );\n\n  if (state.userToken !== null) {\n    navigation.popToTop()\n  }\n\n  if (state.isLoading) {\n    return <SplashScreen />;\n  }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <SimpleStack.Navigator\n        // take out the back button so as to disable the users ability to bail out of authentication\n        /*screenOptions={{\n          headerLeft: () => (\n            <HeaderBackButton onPress={() => navigation.goBack()} />\n          ),\n        }}*/\n      >\n        {state.userToken === null ? (\n          <SimpleStack.Screen\n            name=\"SignIn\"\n            options={{\n              title: 'Sign in',\n              animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n            }}\n            component={SignInScreen}\n          />\n        ) : (\n          <SimpleStack.Screen\n            name=\"Home\"\n            options={{ title: 'Authentication Success' }}\n            component={AuthenticationSuccessScreen}\n          />\n        )}\n      </SimpleStack.Navigator>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n  },\n  input: {\n    margin: 8,\n    padding: 10,\n    borderRadius: 3,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'rgba(0, 0, 0, 0.08)',\n  },\n  button: {\n    margin: 8,\n  },\n  text: {\n    textAlign: 'center',\n    margin: 8,\n  },\n});\n"],"version":3}