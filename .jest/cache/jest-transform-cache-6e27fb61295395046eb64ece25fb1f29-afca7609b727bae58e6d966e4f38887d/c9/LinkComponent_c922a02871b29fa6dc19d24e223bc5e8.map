{"file":"/home/wade/projects/ineffectua/src/components/screens/LinkComponent.tsx","mappings":"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","names":[],"sources":["/home/wade/projects/ineffectua/src/components/screens/LinkComponent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport {\n  Link,\n  StackActions,\n  ParamListBase,\n  useLinkProps,\n} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\nimport PainLogEntry from '../shared/PainLogEntry';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string };\n  PainLogEntry: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst LinkButton = ({\n  to,\n  ...rest\n}: React.ComponentProps<typeof Button> & { to: string }) => {\n  const { onPress, ...props } = useLinkProps({ to });\n\n  return (\n    <Button\n      {...props}\n      {...rest}\n      {...Platform.select({\n        web: { onClick: onPress } as any,\n        default: { onPress },\n      })}\n    />\n  );\n};\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Link\n          to=\"/link-component/music\"\n          style={[styles.button, { padding: 8 }]}\n        >\n          Go to /link-component/music\n        </Link>\n        <Link\n          to=\"/link-component/music\"\n          action={StackActions.replace('PainLogEntry')}\n          style={[styles.button, { padding: 8 }]}\n        >\n          Replace with /link-component/music\n        </Link>\n        <LinkButton\n          to=\"/link-component/music\"\n          mode=\"contained\"\n          style={styles.button}\n        >\n          Go to /link-component/music\n        </LinkButton>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst PainLogEntryScreen = ({ navigation }: StackScreenProps<SimpleStackParams>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Link\n          to=\"/link-component/article/babel\"\n          style={[styles.button, { padding: 8 }]}\n        >\n          Go to /link-component/article\n        </Link>\n        <LinkButton\n          to=\"/link-component/article/babel\"\n          mode=\"contained\"\n          style={styles.button}\n        >\n          Go to /link-component/article\n        </LinkButton>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <PainLogEntry scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\ntype Props = Partial<React.ComponentProps<typeof SimpleStack.Navigator>> &\n  StackScreenProps<ParamListBase>;\n\nexport default function SimpleStackScreen({ navigation, ...rest }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator {...rest}>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params.author}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"PainLogEntry\"\n        component={PainLogEntryScreen}\n        options={{ title: 'Albums' }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"],"version":3}