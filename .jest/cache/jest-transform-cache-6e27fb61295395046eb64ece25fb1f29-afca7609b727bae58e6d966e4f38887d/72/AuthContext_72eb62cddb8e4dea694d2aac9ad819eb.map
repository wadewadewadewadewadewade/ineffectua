{"file":"/home/wade/projects/ineffectua/src/components/shared/AuthContext.ts","mappings":";;;;;AAAA,kDAA0B;AAG1B,MAAM,kBAAkB,GACtB,gGAAgG,CAAC;AAEnG,MAAM,WAAW,GAAG,eAAK,CAAC,aAAa,CAIpC;IACD,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,GAAG,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACtC,CAAC;IACD,OAAO,EAAE,GAAG,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACtC,CAAC;CACF,CAAC,CAAC;AAEH,kBAAe,WAAW,CAAC","names":[],"sources":["/home/wade/projects/ineffectua/src/components/shared/AuthContext.ts"],"sourcesContent":["import React from 'react';\nimport * as firebase from 'firebase';\n\nconst AUTH_CONTEXT_ERROR =\n  'Authentication context not found. Have your wrapped your components with AuthContext.Consumer?';\n\nconst AuthContext = React.createContext<{\n  user: null | firebase.User;\n  signIn: (email: string, password: string) => Promise<string | void>;\n  signOut: () => Promise<void>;\n}>({\n  user: null,\n  signIn: () => {\n    throw new Error(AUTH_CONTEXT_ERROR);\n  },\n  signOut: () => {\n    throw new Error(AUTH_CONTEXT_ERROR);\n  }\n});\n\nexport default AuthContext;"],"version":3}