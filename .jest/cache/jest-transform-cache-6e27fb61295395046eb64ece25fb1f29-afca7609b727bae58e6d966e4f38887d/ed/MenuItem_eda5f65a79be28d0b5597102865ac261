9a51a8da667be7277fbeb6e82844833a
"use strict";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.MenuItem = exports.default = void 0;

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));



var _Icon = _interopRequireDefault(require("../Icon"));

var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple"));

var _Text = _interopRequireDefault(require("../Typography/Text"));





function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var





























MenuItem = function (_React$Component) {require("@babel/runtime/helpers/inherits")(MenuItem, _React$Component);var _super = _createSuper(MenuItem);function MenuItem() {require("@babel/runtime/helpers/classCallCheck")(this, MenuItem);return _super.apply(this, arguments);}require("@babel/runtime/helpers/createClass")(MenuItem, [{ key: "render", value: function render()
    {var _this$props =









      this.props,icon = _this$props.icon,title = _this$props.title,disabled = _this$props.disabled,onPress = _this$props.onPress,theme = _this$props.theme,style = _this$props.style,testID = _this$props.testID,titleStyle = _this$props.titleStyle;
      var disabledColor = (0, _color.default)(theme.dark ? require("../../styles/colors").white : require("../../styles/colors").black).alpha(0.32).rgb().string();
      var titleColor = disabled ? disabledColor : (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
      var iconColor = disabled ? disabledColor : (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
      return React.createElement(_TouchableRipple.default, {
        style: [styles.container, style],
        onPress: onPress,
        disabled: disabled,
        testID: testID },
      React.createElement(require("react-native").View, {
        style: styles.row },
      icon ? React.createElement(require("react-native").View, {
        style: [styles.item, styles.icon],
        pointerEvents: "box-none" },
      React.createElement(_Icon.default, {
        source: icon,
        size: 24,
        color: iconColor })) :
      null, React.createElement(require("react-native").View, {
        style: [styles.item, styles.content, icon ? styles.widthWithIcon : null],
        pointerEvents: "none" },
      React.createElement(_Text.default, {
        numberOfLines: 1,
        style: [styles.title, {
          color: titleColor },
        titleStyle] },
      title))));
    } }]);return MenuItem;}(React.Component);



exports.MenuItem = MenuItem;

_defineProperty(MenuItem, "displayName", 'Menu.Item');

var minWidth = 112;
var maxWidth = 280;
var iconWidth = 40;

var styles = require("react-native").StyleSheet.create({
  container: {
    paddingHorizontal: 8,
    minWidth: minWidth,
    maxWidth: maxWidth,
    height: 48,
    justifyContent: 'center' },

  row: {
    flexDirection: 'row' },

  icon: {
    width: iconWidth },

  title: {
    fontSize: 16 },

  item: {
    marginHorizontal: 8 },

  content: {
    justifyContent: 'center',
    minWidth: minWidth - 16,
    maxWidth: maxWidth - 16 },

  widthWithIcon: {
    maxWidth: maxWidth - (iconWidth + 48) } });



var _default = (0, require("../../core/theming").withTheme)(MenuItem);


exports.default = _default;