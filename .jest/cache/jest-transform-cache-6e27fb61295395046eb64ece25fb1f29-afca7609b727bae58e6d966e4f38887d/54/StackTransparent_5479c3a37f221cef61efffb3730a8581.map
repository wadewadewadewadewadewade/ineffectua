{"file":"/home/wade/projects/ineffectua/src/components/screens/StackTransparent.tsx","mappings":"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","names":[],"sources":["/home/wade/projects/ineffectua/src/components/screens/StackTransparent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { Button, Paragraph } from 'react-native-paper';\nimport { ParamListBase, useTheme } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string };\n  Dialog: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('Dialog')}\n          style={styles.button}\n        >\n          Show Dialog\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst DialogScreen = ({ navigation }: StackScreenProps<SimpleStackParams>) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.dialog, { backgroundColor: colors.card }]}>\n        <Paragraph>\n          Mise en place is a French term that literally means “put in place.” It\n          also refers to a way cooks in professional kitchens and restaurants\n          set up their work stations—first by gathering all ingredients for a\n          recipes, partially preparing them (like measuring out and chopping),\n          and setting them all near each other. Setting up mise en place before\n          cooking is another top tip for home cooks, as it seriously helps with\n          organization. It’ll pretty much guarantee you never forget to add an\n          ingredient and save you time from running back and forth from the\n          pantry ten times.\n        </Paragraph>\n        <Button style={styles.close} compact onPress={navigation.goBack}>\n          Okay\n        </Button>\n      </View>\n    </View>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\ntype Props = Partial<React.ComponentProps<typeof SimpleStack.Navigator>> &\n  StackScreenProps<ParamListBase>;\n\nexport default function SimpleStackScreen({ navigation, ...rest }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator mode=\"modal\" {...rest}>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"Dialog\"\n        component={DialogScreen}\n        options={{\n          headerShown: false,\n          cardStyle: { backgroundColor: 'transparent' },\n          cardOverlayEnabled: true,\n          cardStyleInterpolator: ({ current: { progress } }) => ({\n            cardStyle: {\n              opacity: progress.interpolate({\n                inputRange: [0, 0.5, 0.9, 1],\n                outputRange: [0, 0.25, 0.7, 1],\n              }),\n              transform: [\n                {\n                  scale: progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.9, 1],\n                    extrapolate: 'clamp',\n                  }),\n                },\n              ],\n            },\n            overlayStyle: {\n              opacity: progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, 0.5],\n                extrapolate: 'clamp',\n              }),\n            },\n          }),\n        }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dialog: {\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 3,\n  },\n  close: {\n    alignSelf: 'flex-end',\n  },\n});\n"],"version":3}