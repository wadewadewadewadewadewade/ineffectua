1f82b1c2fc7421050917943b50faa1f8
"use strict";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = exports.ToggleButtonGroupContext = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var ToggleButtonGroupContext = React.createContext(null);
































exports.ToggleButtonGroupContext = ToggleButtonGroupContext;var

ToggleButtonGroup = function (_React$Component) {require("@babel/runtime/helpers/inherits")(ToggleButtonGroup, _React$Component);var _super = _createSuper(ToggleButtonGroup);function ToggleButtonGroup() {require("@babel/runtime/helpers/classCallCheck")(this, ToggleButtonGroup);return _super.apply(this, arguments);}require("@babel/runtime/helpers/createClass")(ToggleButtonGroup, [{ key: "render", value: function render()
    {var _this$props =




      this.props,value = _this$props.value,onValueChange = _this$props.onValueChange,children = _this$props.children;
      return React.createElement(ToggleButtonGroupContext.Provider, {
        value: {
          value: value,
          onValueChange: onValueChange } },

      children);
    } }]);return ToggleButtonGroup;}(React.Component);



_defineProperty(ToggleButtonGroup, "displayName", 'ToggleButton.Group');

var _default = ToggleButtonGroup;
exports.default = _default;