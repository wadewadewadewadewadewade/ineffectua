3bc3bd7aa826ec424c6a8328d7a259ab
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_native_1 = require("react-native");
const native_1 = require("@react-navigation/native");
const react_native_paper_1 = require("react-native-paper");
const color_1 = __importDefault(require("color"));
const Author = () => {
    return (React.createElement(react_native_1.View, { style: [styles.row, styles.attribution] },
        React.createElement(react_native_paper_1.Avatar.Image, { source: { uri: "//static.invertase.io/assets/firebase/analytics.svg" }, size: 32 }),
        React.createElement(react_native_paper_1.Subheading, { style: styles.author }, "Joke bot")));
};
const Footer = () => {
    return (React.createElement(react_native_1.View, { style: styles.row },
        React.createElement(react_native_paper_1.IconButton, { style: styles.icon, size: 16, icon: "heart-outline" }),
        React.createElement(react_native_paper_1.IconButton, { style: styles.icon, size: 16, icon: "comment-outline" }),
        React.createElement(react_native_paper_1.IconButton, { style: styles.icon, size: 16, icon: "share-outline" })));
};
function Agenda(props) {
    const ref = React.useRef(null);
    native_1.useScrollToTop(ref);
    const { colors } = native_1.useTheme();
    return (React.createElement(react_native_1.ScrollView, Object.assign({ ref: ref }, props),
        React.createElement(react_native_paper_1.Card, { style: styles.card },
            React.createElement(react_native_1.TextInput, { placeholder: "What's on your mind?", placeholderTextColor: color_1.default(colors.text).alpha(0.5).rgb().string(), style: styles.input })),
        React.createElement(react_native_paper_1.Card, { style: styles.card },
            React.createElement(Author, null),
            React.createElement(react_native_paper_1.Card.Content, { style: styles.content },
                React.createElement(react_native_paper_1.Text, null, "If you aren't impressed with the picture of the first Black Hole, you clearly don't understand the gravity of the situation.")),
            React.createElement(react_native_paper_1.Divider, null),
            React.createElement(Footer, null)),
        React.createElement(react_native_paper_1.Card, { style: styles.card },
            React.createElement(Author, null),
            React.createElement(react_native_paper_1.Card.Content, { style: styles.content },
                React.createElement(react_native_paper_1.Text, null, "I went to the zoo and I saw a baguette in a cage. I asked the zookeeper about it and he said it was bread in captivity.")),
            React.createElement(react_native_1.Image, { source: { uri: "//static.invertase.io/assets/firebase/analytics.svg" }, style: styles.cover }),
            React.createElement(Footer, null)),
        React.createElement(react_native_paper_1.Card, { style: styles.card },
            React.createElement(Author, null),
            React.createElement(react_native_paper_1.Card.Content, { style: styles.content },
                React.createElement(react_native_paper_1.Text, null, "Why didn't 4 ask 5 out? Because he was 2\u00B2.")),
            React.createElement(react_native_paper_1.Divider, null),
            React.createElement(Footer, null)),
        React.createElement(react_native_paper_1.Card, { style: styles.card },
            React.createElement(Author, null),
            React.createElement(react_native_paper_1.Card.Content, { style: styles.content },
                React.createElement(react_native_paper_1.Text, null, "What did Master Yoda say when he first saw himself in 4k? HDMI.")),
            React.createElement(react_native_paper_1.Divider, null),
            React.createElement(Footer, null)),
        React.createElement(react_native_paper_1.Card, { style: styles.card },
            React.createElement(Author, null),
            React.createElement(react_native_paper_1.Card.Content, { style: styles.content },
                React.createElement(react_native_paper_1.Text, null, "Someone broke into my house and stole 20% of my couch. Ouch!")),
            React.createElement(react_native_paper_1.Divider, null),
            React.createElement(Footer, null))));
}
exports.default = Agenda;
const styles = react_native_1.StyleSheet.create({
    input: {
        padding: 16,
        backgroundColor: 'transparent',
        margin: 0,
    },
    card: {
        marginVertical: 8,
        borderRadius: 0,
    },
    cover: {
        height: 160,
        borderRadius: 0,
    },
    content: {
        marginBottom: 12,
    },
    attribution: {
        margin: 12,
    },
    author: {
        marginHorizontal: 8,
    },
    row: {
        flexDirection: 'row',
        alignItems: 'center',
    },
    icon: {
        flex: 1,
    },
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,