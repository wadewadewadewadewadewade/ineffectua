{"file":"/home/wade/projects/ineffectua/src/components/screens/ModalPresentationStack.tsx","mappings":"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","names":[],"sources":["/home/wade/projects/ineffectua/src/components/screens/ModalPresentationStack.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport type { ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n  StackNavigationOptions,\n  TransitionPresets,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\nimport PainLogEntry from '../shared/PainLogEntry';\n\ntype ModalStackParams = {\n  CalendarEntry: { author: string };\n  PainLogEntry: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<ModalStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('PainLogEntry')}\n          style={styles.button}\n        >\n          Push album\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst PainLogEntryScreen = ({ navigation }: StackScreenProps<ModalStackParams>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('CalendarEntry', { author: 'Babel fish' })}\n          style={styles.button}\n        >\n          Push article\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <PainLogEntry scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst ModalPresentationStack = createStackNavigator<ModalStackParams>();\n\ntype Props = StackScreenProps<ParamListBase> & {\n  options?: StackNavigationOptions;\n};\n\nexport default function SimpleStackScreen({ navigation, options }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <ModalPresentationStack.Navigator\n      mode=\"modal\"\n      screenOptions={({ route, navigation }) => ({\n        ...TransitionPresets.ModalPresentationIOS,\n        cardOverlayEnabled: true,\n        gestureEnabled: true,\n        headerStatusBarHeight:\n          navigation.dangerouslyGetState().routes.indexOf(route) > 0\n            ? 0\n            : undefined,\n      })}\n      {...options}\n    >\n      <ModalPresentationStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params.author}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <ModalPresentationStack.Screen\n        name=\"PainLogEntry\"\n        component={PainLogEntryScreen}\n        options={{ title: 'PainLogEntry' }}\n      />\n    </ModalPresentationStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"],"version":3}