{"file":"/home/wade/projects/ineffectua/src/components/screens/SimpleStack.tsx","mappings":"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","names":[],"sources":["/home/wade/projects/ineffectua/src/components/screens/SimpleStack.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, Platform, StyleSheet, ScrollView } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport type { ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n} from '@react-navigation/stack';\nimport CalendarEntry from '../shared/CalendarEntry';\nimport PainLogEntry from '../shared/PainLogEntry';\nimport Agenda from '../shared/Agenda';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string } | undefined;\n  PainLogEntry: { date: number };\n  Agenda: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.replace('Agenda')}\n          style={styles.button}\n        >\n          Replace with feed\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.pop()}\n          style={styles.button}\n        >\n          Pop screen\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params?.author ?? 'Unknown' }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst AgendaScreen = ({\n  route,\n  navigation,\n}: StackScreenProps<SimpleStackParams, 'Agenda'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.navigate('PainLogEntry', { date: Date.now() })}\n          style={styles.button}\n        >\n          Navigate to album\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <Agenda scrollEnabled={scrollEnabled} date={Date.now()} />\n    </ScrollView>\n  );\n};\n\nconst PainLogEntryScreen = ({\n  navigation,\n}: StackScreenProps<SimpleStackParams, 'PainLogEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('CalendarEntry', { author: 'Babel fish' })}\n          style={styles.button}\n        >\n          Push article\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.pop(2)}\n          style={styles.button}\n        >\n          Pop by 2\n        </Button>\n      </View>\n      <PainLogEntry scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\nexport default function SimpleStackScreen({\n  navigation,\n}: StackScreenProps<ParamListBase>) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <SimpleStack.Navigator>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params?.author ?? 'Unknown'}`,\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"Agenda\"\n        component={Agenda}\n        options={{ title: 'Feed' }}\n      />\n      <SimpleStack.Screen\n        name=\"PainLogEntry\"\n        component={PainLogEntryScreen}\n        options={{ title: 'Albums' }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n"],"version":3}