66ee4cee37531bb56ebf90bc5fde18f0
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_native_1 = require("react-native");
const react_native_paper_1 = require("react-native-paper");
const native_1 = require("@react-navigation/native");
const drawer_1 = require("@react-navigation/drawer");
const CalendarEntry_1 = __importDefault(require("../shared/CalendarEntry"));
const PainLogEntry_1 = __importDefault(require("../shared/PainLogEntry"));
const Agenda_1 = __importDefault(require("../shared/Agenda"));
const useIsLargeScreen = () => {
    const [dimensions, setDimensions] = React.useState(react_native_1.Dimensions.get('window'));
    React.useEffect(() => {
        const onDimensionsChange = ({ window }) => {
            setDimensions(window);
        };
        react_native_1.Dimensions.addEventListener('change', onDimensionsChange);
        return () => react_native_1.Dimensions.removeEventListener('change', onDimensionsChange);
    }, []);
    return dimensions.width > 414;
};
const Header = ({ onGoBack, title, }) => {
    const { colors } = native_1.useTheme();
    const isLargeScreen = useIsLargeScreen();
    return (React.createElement(react_native_paper_1.Appbar.Header, { style: { backgroundColor: colors.card, elevation: 1 } },
        isLargeScreen ? null : React.createElement(react_native_paper_1.Appbar.BackAction, { onPress: onGoBack }),
        React.createElement(react_native_paper_1.Appbar.Content, { title: title })));
};
const CalendarEntryScreen = ({ navigation, }) => {
    return (React.createElement(React.Fragment, null,
        React.createElement(Header, { title: "CalendarEntry", onGoBack: () => navigation.toggleDrawer() }),
        React.createElement(CalendarEntry_1.default, null)));
};
const AgendaScreen = ({ navigation, }) => {
    return (React.createElement(React.Fragment, null,
        React.createElement(Header, { title: "Agenda", onGoBack: () => navigation.toggleDrawer() }),
        React.createElement(Agenda_1.default, null)));
};
const PainLogEntryScreen = ({ navigation, }) => {
    return (React.createElement(React.Fragment, null,
        React.createElement(Header, { title: "PainLogEntry", onGoBack: () => navigation.toggleDrawer() }),
        React.createElement(PainLogEntry_1.default, null)));
};
const CustomDrawerContent = (props) => {
    const { colors } = native_1.useTheme();
    const navigation = native_1.useNavigation();
    return (React.createElement(React.Fragment, null,
        React.createElement(react_native_paper_1.Appbar.Header, { style: { backgroundColor: colors.card, elevation: 1 } },
            React.createElement(react_native_paper_1.Appbar.Action, { icon: "close", onPress: () => navigation.goBack() }),
            React.createElement(react_native_paper_1.Appbar.Content, { title: "Pages" })),
        React.createElement(drawer_1.DrawerContent, Object.assign({}, props))));
};
const Drawer = drawer_1.createDrawerNavigator();
function DrawerScreen({ navigation, ...rest }) {
    React.useLayoutEffect(() => {
        navigation.setOptions({
            headerShown: false,
            gestureEnabled: false,
        });
    }, [navigation]);
    const isLargeScreen = useIsLargeScreen();
    return (React.createElement(Drawer.Navigator, Object.assign({ openByDefault: true, drawerType: isLargeScreen ? 'permanent' : 'back', drawerStyle: isLargeScreen ? null : { width: '100%' }, overlayColor: "transparent", drawerContent: (props) => React.createElement(CustomDrawerContent, Object.assign({}, props)) }, rest),
        React.createElement(Drawer.Screen, { name: "CalendarEntry", component: CalendarEntryScreen }),
        React.createElement(Drawer.Screen, { name: "Agenda", component: AgendaScreen, options: { title: 'Agenda' } }),
        React.createElement(Drawer.Screen, { name: "PainLogEntry", component: PainLogEntryScreen, options: { title: 'PainLogEntry' } })));
}
exports.default = DrawerScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,