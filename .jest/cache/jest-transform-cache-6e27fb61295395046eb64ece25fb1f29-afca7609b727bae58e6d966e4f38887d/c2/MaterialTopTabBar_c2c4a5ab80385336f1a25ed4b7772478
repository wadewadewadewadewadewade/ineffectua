3b32d041873d8bf7f50f1bd2fac79dbe
"use strict";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));





var _reactNativeReanimated = _interopRequireDefault(require("react-native-reanimated"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}

function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}

function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

TabBarTop = function (_React$PureComponent) {require("@babel/runtime/helpers/inherits")(TabBarTop, _React$PureComponent);var _super = _createSuper(TabBarTop);
  function TabBarTop() {var _this;require("@babel/runtime/helpers/classCallCheck")(this, TabBarTop);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}
    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(require("@babel/runtime/helpers/assertThisInitialized")(_this), "_renderLabel", function (_ref)



    {var route = _ref.route,focused = _ref.focused,color = _ref.color;var _this$props2 =





      _this.props,showLabel = _this$props2.showLabel,upperCaseLabel = _this$props2.upperCaseLabel,labelStyle = _this$props2.labelStyle,allowFontScaling = _this$props2.allowFontScaling;

      if (showLabel === false) {
        return null;
      }

      var label = _this.props.getLabelText({
        route: route });


      if (typeof label === 'string') {
        return React.createElement(_reactNativeReanimated.default.Text, {
          style: [styles.label, {
            color: color },
          labelStyle],
          allowFontScaling: allowFontScaling },
        upperCaseLabel ? label.toUpperCase() : label);
      }

      if (typeof label === 'function') {
        return label({
          focused: focused,
          tintColor: color });

      }

      return label;
    });

    _defineProperty(require("@babel/runtime/helpers/assertThisInitialized")(_this), "_renderIcon", function (_ref2)



    {var route = _ref2.route,focused = _ref2.focused,color = _ref2.color;var _this$props3 =




      _this.props,renderIcon = _this$props3.renderIcon,showIcon = _this$props3.showIcon,iconStyle = _this$props3.iconStyle;

      if (showIcon === false) {
        return null;
      }

      return React.createElement(require("react-native").View, {
        style: [styles.icon, iconStyle] },
      renderIcon({
        route: route,
        focused: focused,
        tintColor: color }));

    });return _this;
  }require("@babel/runtime/helpers/createClass")(TabBarTop, [{ key: "render", value: function render()

    {
      var _this$props = this.props,

      navigation =













      _this$props.navigation,activeTintColor = _this$props.activeTintColor,inactiveTintColor = _this$props.inactiveTintColor,renderIcon = _this$props.renderIcon,getLabelText = _this$props.getLabelText,allowFontScaling = _this$props.allowFontScaling,showLabel = _this$props.showLabel,showIcon = _this$props.showIcon,upperCaseLabel = _this$props.upperCaseLabel,tabBarPosition = _this$props.tabBarPosition,screenProps = _this$props.screenProps,iconStyle = _this$props.iconStyle,
      rest = _objectWithoutProperties(_this$props, ["navigation", "activeTintColor", "inactiveTintColor", "renderIcon", "getLabelText", "allowFontScaling", "showLabel", "showIcon", "upperCaseLabel", "tabBarPosition", "screenProps", "iconStyle"]);

      return React.createElement(require("react-native-tab-view").TabBar, _extends({}, rest, {
        activeColor: activeTintColor,
        inactiveColor: inactiveTintColor,
        navigationState: navigation.state,
        renderIcon: this._renderIcon,
        renderLabel: this._renderLabel }));

    } }]);return TabBarTop;}(React.PureComponent);



exports.default = TabBarTop;

_defineProperty(TabBarTop, "defaultProps", {
  activeTintColor: 'rgba(255, 255, 255, 1)',
  inactiveTintColor: 'rgba(255, 255, 255, 0.7)',
  showIcon: false,
  showLabel: true,
  upperCaseLabel: true,
  allowFontScaling: true });


var styles = require("react-native").StyleSheet.create({
  icon: {
    height: 24,
    width: 24 },

  label: {
    textAlign: 'center',
    fontSize: 13,
    margin: 4,
    backgroundColor: 'transparent' } });