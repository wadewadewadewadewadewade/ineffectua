{"file":"/home/wade/projects/ineffectua/src/components/screens/StackHeaderCustomization.tsx","mappings":"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","names":[],"sources":["/home/wade/projects/ineffectua/src/components/screens/StackHeaderCustomization.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Platform,\n} from 'react-native';\nimport { Button, Appbar } from 'react-native-paper';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useTheme, ParamListBase } from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackScreenProps,\n  HeaderBackground,\n  useHeaderHeight,\n  Header,\n  StackHeaderProps,\n} from '@react-navigation/stack';\nimport BlurView from '../shared/BlurView';\nimport CalendarEntry from '../shared/CalendarEntry';\nimport PainLogEntry from '../shared/PainLogEntry';\n\ntype SimpleStackParams = {\n  CalendarEntry: { author: string };\n  PainLogEntry: undefined;\n};\n\nconst scrollEnabled = Platform.select({ web: true, default: false });\n\nconst CalendarEntryScreen = ({\n  navigation,\n  route,\n}: StackScreenProps<SimpleStackParams, 'CalendarEntry'>) => {\n  return (\n    <ScrollView>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('PainLogEntry')}\n          style={styles.button}\n        >\n          Push album\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <CalendarEntry\n        author={{ name: route.params.author }}\n        scrollEnabled={scrollEnabled}\n      />\n    </ScrollView>\n  );\n};\n\nconst PainLogEntryScreen = ({ navigation }: StackScreenProps<SimpleStackParams>) => {\n  const headerHeight = useHeaderHeight();\n\n  return (\n    <ScrollView contentContainerStyle={{ paddingTop: headerHeight }}>\n      <View style={styles.buttons}>\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.push('CalendarEntry', { author: 'Babel fish' })}\n          style={styles.button}\n        >\n          Push article\n        </Button>\n        <Button\n          mode=\"outlined\"\n          onPress={() => navigation.goBack()}\n          style={styles.button}\n        >\n          Go back\n        </Button>\n      </View>\n      <PainLogEntry scrollEnabled={scrollEnabled} />\n    </ScrollView>\n  );\n};\n\nconst SimpleStack = createStackNavigator<SimpleStackParams>();\n\ntype Props = Partial<React.ComponentProps<typeof SimpleStack.Navigator>> &\n  StackScreenProps<ParamListBase>;\n\nfunction CustomHeader(props: StackHeaderProps) {\n  const { current, next } = props.scene.progress;\n\n  const progress = Animated.add(current, next || 0);\n  const opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0],\n  });\n\n  return (\n    <>\n      <Header {...props} />\n      <Animated.Text style={[styles.banner, { opacity }]}>\n        Why hello there, pardner!\n      </Animated.Text>\n    </>\n  );\n}\n\nexport default function SimpleStackScreen({ navigation, ...rest }: Props) {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  const { colors, dark } = useTheme();\n\n  return (\n    <SimpleStack.Navigator {...rest}>\n      <SimpleStack.Screen\n        name=\"CalendarEntry\"\n        component={CalendarEntryScreen}\n        options={({ route }) => ({\n          title: `Article by ${route.params?.author}`,\n          header: CustomHeader,\n          headerTintColor: '#fff',\n          headerStyle: { backgroundColor: '#ff005d' },\n          headerBackTitleVisible: false,\n          headerTitleAlign: 'center',\n          headerBackImage: ({ tintColor }) => (\n            <MaterialCommunityIcons\n              name=\"arrow-left-circle-outline\"\n              color={tintColor}\n              size={24}\n              style={{ marginHorizontal: Platform.OS === 'ios' ? 8 : 0 }}\n            />\n          ),\n          headerRight: ({ tintColor }) => (\n            <Appbar.Action\n              color={tintColor}\n              icon=\"dots-horizontal-circle-outline\"\n              onPress={() =>\n                Alert.alert(\n                  'Never gonna give you up!',\n                  'Never gonna let you down! Never gonna run around and desert you!'\n                )\n              }\n            />\n          ),\n        })}\n        initialParams={{ author: 'Gandalf' }}\n      />\n      <SimpleStack.Screen\n        name=\"PainLogEntry\"\n        component={PainLogEntryScreen}\n        options={{\n          title: 'Albums',\n          headerBackTitle: 'Back',\n          headerTransparent: true,\n          headerBackground: () => (\n            <HeaderBackground\n              style={{\n                backgroundColor: 'transparent',\n                borderBottomWidth: StyleSheet.hairlineWidth,\n                borderBottomColor: colors.border,\n              }}\n            >\n              <BlurView\n                tint={dark ? 'dark' : 'light'}\n                intensity={75}\n                style={StyleSheet.absoluteFill}\n              />\n            </HeaderBackground>\n          ),\n        }}\n      />\n    </SimpleStack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n  banner: {\n    textAlign: 'center',\n    color: 'tomato',\n    backgroundColor: 'papayawhip',\n    padding: 4,\n  },\n});\n"],"version":3}