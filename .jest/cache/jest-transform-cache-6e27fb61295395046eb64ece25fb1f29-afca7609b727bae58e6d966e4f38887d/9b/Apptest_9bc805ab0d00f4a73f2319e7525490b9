7d83c6474f47516f5f11fd465d527729
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
jest.mock('react-native-screens', () => {
    const RealComponent = jest.requireActual('react-native-screens');
    RealComponent.enableScreens = function () { };
    return RealComponent;
});
jest.mock('react-native-reanimated', () => {
    const Reanimated = require('react-native-reanimated/mock');
    // The mock for `call` immediately calls the callback which is incorrect
    // So we override it with a no-op
    Reanimated.default.call = () => { };
    return Reanimated;
});
// Silence the warning: Animated: `useNativeDriver` is not supported because the native animated module is missing
jest.mock('react-native/Libraries/Animated/src/NativeAnimatedHelper');
jest.mock('react-navigation-tabs', () => ({
    withNavigation: (Component) => (props) => (react_1.default.createElement(Component, Object.assign({ navigation: { navigate: jest.fn() } }, props))),
    createBottomTabNavigator: jest.fn()
}));
jest.mock('react-navigation-drawer', () => ({
    withNavigation: (Component) => (props) => (react_1.default.createElement(Component, Object.assign({ navigation: { navigate: jest.fn() } }, props))),
    createDrawerNavigator: jest.fn(),
    navigationOptions: {}
}));
/**
 * @format
 */
require("react-native");
const react_1 = __importDefault(require("react"));
const App_1 = __importDefault(require("../src/components/App"));
// Note: test renderer must be required after react-native.
const react_test_renderer_1 = __importDefault(require("react-test-renderer"));
// neededd this to get some async items like StatusBar to build properly when running the test
jest.useFakeTimers();
require("react-native-gesture-handler/jestSetup");
it('renders correctly', () => {
    react_test_renderer_1.default.create(react_1.default.createElement(App_1.default, null));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvd2FkZS9wcm9qZWN0cy9pbmVmZmVjdHVhL19fdGVzdHNfXy9BcHAudGVzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFjQSxJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsRUFBRTtJQUNyQyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLHNCQUFzQixDQUFDLENBQUM7SUFDakUsYUFBYSxDQUFDLGFBQWEsR0FBRyxjQUFZLENBQUMsQ0FBQztJQUM1QyxPQUFPLGFBQWEsQ0FBQztBQUN2QixDQUFDLENBQUMsQ0FBQztBQUlILElBQUksQ0FBQyxJQUFJLENBQUMseUJBQXlCLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0lBRTNELHdFQUF3RTtJQUN4RSxpQ0FBaUM7SUFDakMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0lBRW5DLE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUMsQ0FBQyxDQUFDO0FBRUgsa0hBQWtIO0FBQ2xILElBQUksQ0FBQyxJQUFJLENBQUMsMERBQTBELENBQUMsQ0FBQztBQUV0RSxJQUFJLENBQUMsSUFBSSxDQUFDLHVCQUF1QixFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDeEMsY0FBYyxFQUFFLENBQUMsU0FBbUIsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFVLEVBQUUsRUFBRSxDQUFDLENBQ3ZELDhCQUFDLFNBQVMsa0JBQUMsVUFBVSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFNLEtBQUssRUFBSSxDQUM5RDtJQUNELHdCQUF3QixFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7Q0FDcEMsQ0FBQyxDQUFDLENBQUE7QUFFSCxJQUFJLENBQUMsSUFBSSxDQUFDLHlCQUF5QixFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDMUMsY0FBYyxFQUFFLENBQUMsU0FBbUIsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFVLEVBQUUsRUFBRSxDQUFDLENBQ3ZELDhCQUFDLFNBQVMsa0JBQUMsVUFBVSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFNLEtBQUssRUFBSSxDQUM5RDtJQUNELHFCQUFxQixFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7SUFDaEMsaUJBQWlCLEVBQUUsRUFBRTtDQUN0QixDQUFDLENBQUMsQ0FBQTtBQWhESDs7R0FFRztBQUVILHdCQUFzQjtBQUN0QixrREFBMEI7QUFDMUIsZ0VBQXdDO0FBRXhDLDJEQUEyRDtBQUMzRCw4RUFBMkM7QUFFM0MsOEZBQThGO0FBQzlGLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQVFyQixrREFBZ0Q7QUE4QmhELEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxHQUFHLEVBQUU7SUFDM0IsNkJBQVEsQ0FBQyxNQUFNLENBQUMsOEJBQUMsYUFBRyxPQUFHLENBQUMsQ0FBQTtBQUMxQixDQUFDLENBQUMsQ0FBQSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS93YWRlL3Byb2plY3RzL2luZWZmZWN0dWEvX190ZXN0c19fL0FwcC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFwcCBmcm9tICcuLi9zcmMvY29tcG9uZW50cy9BcHAnO1xuXG4vLyBOb3RlOiB0ZXN0IHJlbmRlcmVyIG11c3QgYmUgcmVxdWlyZWQgYWZ0ZXIgcmVhY3QtbmF0aXZlLlxuaW1wb3J0IHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuXG4vLyBuZWVkZWRkIHRoaXMgdG8gZ2V0IHNvbWUgYXN5bmMgaXRlbXMgbGlrZSBTdGF0dXNCYXIgdG8gYnVpbGQgcHJvcGVybHkgd2hlbiBydW5uaW5nIHRoZSB0ZXN0XG5qZXN0LnVzZUZha2VUaW1lcnMoKTtcblxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtc2NyZWVucycsICgpID0+IHtcbiAgY29uc3QgUmVhbENvbXBvbmVudCA9IGplc3QucmVxdWlyZUFjdHVhbCgncmVhY3QtbmF0aXZlLXNjcmVlbnMnKTtcbiAgUmVhbENvbXBvbmVudC5lbmFibGVTY3JlZW5zID0gZnVuY3Rpb24oKSB7fTtcbiAgcmV0dXJuIFJlYWxDb21wb25lbnQ7XG59KTtcblxuaW1wb3J0ICdyZWFjdC1uYXRpdmUtZ2VzdHVyZS1oYW5kbGVyL2plc3RTZXR1cCc7XG5cbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXJlYW5pbWF0ZWQnLCAoKSA9PiB7XG4gIGNvbnN0IFJlYW5pbWF0ZWQgPSByZXF1aXJlKCdyZWFjdC1uYXRpdmUtcmVhbmltYXRlZC9tb2NrJyk7XG5cbiAgLy8gVGhlIG1vY2sgZm9yIGBjYWxsYCBpbW1lZGlhdGVseSBjYWxscyB0aGUgY2FsbGJhY2sgd2hpY2ggaXMgaW5jb3JyZWN0XG4gIC8vIFNvIHdlIG92ZXJyaWRlIGl0IHdpdGggYSBuby1vcFxuICBSZWFuaW1hdGVkLmRlZmF1bHQuY2FsbCA9ICgpID0+IHt9O1xuXG4gIHJldHVybiBSZWFuaW1hdGVkO1xufSk7XG5cbi8vIFNpbGVuY2UgdGhlIHdhcm5pbmc6IEFuaW1hdGVkOiBgdXNlTmF0aXZlRHJpdmVyYCBpcyBub3Qgc3VwcG9ydGVkIGJlY2F1c2UgdGhlIG5hdGl2ZSBhbmltYXRlZCBtb2R1bGUgaXMgbWlzc2luZ1xuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUvTGlicmFyaWVzL0FuaW1hdGVkL3NyYy9OYXRpdmVBbmltYXRlZEhlbHBlcicpO1xuXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdmlnYXRpb24tdGFicycsICgpID0+ICh7XG4gIHdpdGhOYXZpZ2F0aW9uOiAoQ29tcG9uZW50OiBGdW5jdGlvbikgPT4gKHByb3BzOiBhbnkpID0+IChcbiAgICA8Q29tcG9uZW50IG5hdmlnYXRpb249e3sgbmF2aWdhdGU6IGplc3QuZm4oKSB9fSB7Li4ucHJvcHN9IC8+XG4gICksXG4gIGNyZWF0ZUJvdHRvbVRhYk5hdmlnYXRvcjogamVzdC5mbigpXG59KSlcblxuamVzdC5tb2NrKCdyZWFjdC1uYXZpZ2F0aW9uLWRyYXdlcicsICgpID0+ICh7XG4gIHdpdGhOYXZpZ2F0aW9uOiAoQ29tcG9uZW50OiBGdW5jdGlvbikgPT4gKHByb3BzOiBhbnkpID0+IChcbiAgICA8Q29tcG9uZW50IG5hdmlnYXRpb249e3sgbmF2aWdhdGU6IGplc3QuZm4oKSB9fSB7Li4ucHJvcHN9IC8+XG4gICksXG4gIGNyZWF0ZURyYXdlck5hdmlnYXRvcjogamVzdC5mbigpLFxuICBuYXZpZ2F0aW9uT3B0aW9uczoge31cbn0pKVxuXG5pdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gIHJlbmRlcmVyLmNyZWF0ZSg8QXBwIC8+KVxufSkiXSwidmVyc2lvbiI6M30=