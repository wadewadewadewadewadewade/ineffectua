e7781c549e373e1ceccbacae93ed3d9e
"use strict";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));





function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}

function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}

function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}

function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var DURATION = 2400;var





















ActivityIndicator = function (_React$Component) {require("@babel/runtime/helpers/inherits")(ActivityIndicator, _React$Component);var _super = _createSuper(ActivityIndicator);
  function ActivityIndicator() {var _this;require("@babel/runtime/helpers/classCallCheck")(this, ActivityIndicator);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}
    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(require("@babel/runtime/helpers/assertThisInitialized")(_this), "state", {
      timer: new (require("react-native").Animated.Value)(0),
      fade: new (require("react-native").Animated.Value)(!_this.props.animating && _this.props.hidesWhenStopped ? 0 : 1) });


    _defineProperty(require("@babel/runtime/helpers/assertThisInitialized")(_this), "rotation", undefined);

    _defineProperty(require("@babel/runtime/helpers/assertThisInitialized")(_this), "startRotation", function () {var _this$state =



      _this.state,fade = _this$state.fade,timer = _this$state.timer;var

      scale =
      _this.props.theme.animation.scale;

      require("react-native").Animated.timing(fade, {
        duration: 200 * scale,
        toValue: 1,
        isInteraction: false,
        useNativeDriver: true }).
      start();


      if (_this.rotation) {
        timer.setValue(0);

        require("react-native").Animated.loop(_this.rotation).start();
      }
    });

    _defineProperty(require("@babel/runtime/helpers/assertThisInitialized")(_this), "stopRotation", function () {
      if (_this.rotation) {
        _this.rotation.stop();
      }
    });return _this;
  }require("@babel/runtime/helpers/createClass")(ActivityIndicator, [{ key: "componentDidMount", value: function componentDidMount()

    {var

      animating =
      this.props.animating;var

      timer =
      this.state.timer;

      this.rotation = require("react-native").Animated.timing(timer, {
        duration: DURATION,
        easing: require("react-native").Easing.linear,

        useNativeDriver: require("react-native").Platform.OS !== 'web',
        toValue: 1,
        isInteraction: false });


      if (animating) {
        this.startRotation();
      }
    } }, { key: "componentDidUpdate", value: function componentDidUpdate(

    prevProps) {var _this$props2 =








      this.props,animating = _this$props2.animating,hidesWhenStopped = _this$props2.hidesWhenStopped,scale = _this$props2.theme.animation.scale;var

      fade =
      this.state.fade;

      if (animating !== prevProps.animating) {
        if (animating) {
          this.startRotation();
        } else if (hidesWhenStopped) {

          require("react-native").Animated.timing(fade, {
            duration: 200 * scale,
            toValue: 0,
            useNativeDriver: true,
            isInteraction: false }).
          start(this.stopRotation.bind(this));
        } else {
          this.stopRotation();
        }
      }
    } }, { key: "render", value: function render()

    {var _this$state2 =



      this.state,fade = _this$state2.fade,timer = _this$state2.timer;

      var _this$props = this.props,


      animating =






      _this$props.animating,indicatorColor = _this$props.color,hidesWhenStopped = _this$props.hidesWhenStopped,indicatorSize = _this$props.size,style = _this$props.style,theme = _this$props.theme,
      rest = _objectWithoutProperties(_this$props, ["animating", "color", "hidesWhenStopped", "size", "style", "theme"]);

      var color = indicatorColor || theme.colors.primary;
      var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;
      var frames = 60 * DURATION / 1000;

      var easing = require("react-native").Easing.bezier(0.4, 0.0, 0.7, 1.0);

      var containerStyle = {
        width: size,
        height: size / 2,
        overflow: 'hidden' };

      return React.createElement(require("react-native").View, _extends({
        style: [styles.container, style] },
      rest), React.createElement(require("react-native").Animated.View, {
        style: [{
          width: size,
          height: size,
          opacity: fade }],

        collapsable: false },
      [0, 1].map(function (index) {

        var inputRange = Array.from(new Array(frames), function (_, frameIndex) {return frameIndex / (frames - 1);});
        var outputRange = Array.from(new Array(frames), function (_, frameIndex) {
          var progress = 2 * frameIndex / (frames - 1);
          var rotation = index ? +(360 - 15) : -(180 - 15);

          if (progress > 1.0) {
            progress = 2.0 - progress;
          }

          var direction = index ? -1 : +1;
          return "".concat(direction * (180 - 30) * easing(progress) + rotation, "deg");
        });
        var layerStyle = {
          width: size,
          height: size,
          transform: [{
            rotate: timer.interpolate({
              inputRange: [0, 1],
              outputRange: ["".concat(0 + 30 + 15, "deg"), "".concat(2 * 360 + 30 + 15, "deg")] }) }] };



        var viewportStyle = {
          width: size,
          height: size,
          transform: [{
            translateY: index ? -size / 2 : 0 },
          {
            rotate: timer.interpolate({
              inputRange: inputRange,
              outputRange: outputRange }) }] };



        var offsetStyle = index ? {
          top: size / 2 } :
        null;
        var lineStyle = {
          width: size,
          height: size,
          borderColor: color,
          borderWidth: size / 10,
          borderRadius: size / 2 };

        return React.createElement(require("react-native").Animated.View, {
          key: index,
          style: [styles.layer] },
        React.createElement(require("react-native").Animated.View, {
          style: layerStyle },
        React.createElement(require("react-native").Animated.View, {
          style: [containerStyle, offsetStyle],
          collapsable: false },
        React.createElement(require("react-native").Animated.View, {
          style: viewportStyle },
        React.createElement(require("react-native").Animated.View, {
          style: containerStyle,
          collapsable: false },
        React.createElement(require("react-native").Animated.View, {
          style: lineStyle }))))));

      })));
    } }]);return ActivityIndicator;}(React.Component);



_defineProperty(ActivityIndicator, "defaultProps", {
  animating: true,
  size: 'small',
  hidesWhenStopped: true });


var styles = require("react-native").StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center' },

  layer: _objectSpread(_objectSpread({}, require("react-native").StyleSheet.absoluteFillObject), {}, {
    justifyContent: 'center',
    alignItems: 'center' }) });



var _default = (0, require("../core/theming").withTheme)(ActivityIndicator);

exports.default = _default;