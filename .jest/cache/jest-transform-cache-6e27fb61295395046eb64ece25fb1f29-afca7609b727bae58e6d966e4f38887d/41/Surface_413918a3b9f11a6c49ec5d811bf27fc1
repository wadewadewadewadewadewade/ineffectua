a05a29a93c3e03a9d5f6e19024f8c4ae
"use strict";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));



var _shadow = _interopRequireDefault(require("../styles/shadow"));



var _overlay = _interopRequireDefault(require("../styles/overlay"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}

function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}var












































Surface = function (_React$Component) {require("@babel/runtime/helpers/inherits")(Surface, _React$Component);var _super = _createSuper(Surface);function Surface() {require("@babel/runtime/helpers/classCallCheck")(this, Surface);return _super.apply(this, arguments);}require("@babel/runtime/helpers/createClass")(Surface, [{ key: "render", value: function render()
    {
      var _this$props = this.props,

      style =

      _this$props.style,theme = _this$props.theme,
      rest = _objectWithoutProperties(_this$props, ["style", "theme"]);

      var flattenedStyles = require("react-native").StyleSheet.flatten(style) || {};var _flattenedStyles$elev =


      flattenedStyles.elevation,elevation = _flattenedStyles$elev === void 0 ? 4 : _flattenedStyles$elev;var

      isDarkTheme =


      theme.dark,mode = theme.mode,colors = theme.colors;
      return (


        React.createElement(require("react-native").Animated.View, _extends({}, rest, {
          style: [{
            backgroundColor: isDarkTheme && mode === 'adaptive' ? (0, _overlay.default)(elevation, colors.surface) : colors.surface },
          elevation && (0, _shadow.default)(elevation), style] })));


    } }]);return Surface;}(React.Component);



var _default = (0, require("../core/theming").withTheme)(Surface);

exports.default = _default;